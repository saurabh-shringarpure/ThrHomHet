(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    780470,      16286]
NotebookOptionsPosition[    765848,      16057]
NotebookOutlinePosition[    766244,      16073]
CellTagsIndexPosition[    766201,      16070]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
[Calc] Deriving this Wigner distribution using linearity of Wigner transform \
in density operators\
\>", "Subsubsection",
 CellChangeTimes->{{3.8858442332396517`*^9, 3.8858442563243732`*^9}, 
   3.885958357852479*^9, {3.8860153233031907`*^9, 3.886015338289157*^9}, {
   3.886016227230587*^9, 
   3.886016229231062*^9}},ExpressionUUID->"f2aa224e-304c-4038-8ad3-\
777e6eb4da94"],

Cell[TextData[{
 "W1ecat  = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "Norm"], "[", 
    RowBox[{
     SubscriptBox["W", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"Coh", "."}]}]], "+", 
     SubscriptBox["W", 
      RowBox[{
       RowBox[{"-", "\[Alpha]"}], " ", ",", 
       RowBox[{"Coh", "."}]}]], "+", 
     SubscriptBox["W", 
      RowBox[{"+", "-"}]], "+", 
     SubscriptBox["W", 
      RowBox[{"-", "+"}]]}], "]"}], TraditionalForm]],ExpressionUUID->
  "876bd271-f315-44dd-bbf0-09551edfecc0"],
 "\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["W", 
     RowBox[{"+", "-"}]], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "\[ImaginaryI]py"}]], 
       RowBox[{
        SubscriptBox["\[Psi]", "\[Alpha]"], "(", 
        RowBox[{"x", "+", 
         FractionBox["y", "2"]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Psi]", 
         RowBox[{"-", "\[Alpha]"}]], "\[Conjugate]"}], 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         FractionBox["y", "2"]}], ")"}], " ", 
       RowBox[{"\[DifferentialD]", "y"}]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"b5515b7f-1bfa-4b6e-b698-aac3402fd86f"],
 " (Wikipedia convention)"
}], "Text",
 CellChangeTimes->{{3.8858442584345074`*^9, 3.8858444379806347`*^9}, {
  3.8870657390380993`*^9, 
  3.8870657450767207`*^9}},ExpressionUUID->"46b17cec-0e35-4f06-a977-\
0f19b218036d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{"x0_", ",", "p0_", ",", "x_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["\[Pi]", 
       RowBox[{"1", "/", "4"}]]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "p0", " ", "x"}]], 
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", " ", "x0"}], ")"}], "2"]}], "2"]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "x0", " ", "p0"}], "2"], " "}]]}]}], 
   ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Coherent", " ", "state", " ", "wave", " ", "function"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"For", " ", 
     RowBox[{"conjugate", ":", " ", 
      RowBox[{"use", " ", 
       RowBox[{"\[Psi]", "\[Conjugate]"}], 
       RowBox[{"(", 
        RowBox[{"x0", ",", 
         RowBox[{"p0", ";", "x"}]}], ")"}]}]}]}], "->", " ", 
    RowBox[{"\[Psi]", 
     RowBox[{"(", 
      RowBox[{"x0", ",", 
       RowBox[{
        RowBox[{"-", "p0"}], ";", "x"}]}], ")"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ws1s2", "[", 
    RowBox[{
    "\[Alpha]_", ",", "\[Theta]_", ",", "x_", ",", "p_", ",", "s1_", ",", 
     "s2_"}], "]"}], ":=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "p", " ", "y"}]], 
       RowBox[{"\[Psi]", "[", 
        RowBox[{
         RowBox[{"s1", 
          SqrtBox["2"], "\[Alpha]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
         RowBox[{"s1", 
          SqrtBox["2"], "\[Alpha]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
         RowBox[{"x", "+", 
          RowBox[{"y", "/", "2"}]}]}], "]"}], 
       RowBox[{"\[Psi]", "[", 
        RowBox[{
         RowBox[{"s2", " ", 
          SqrtBox["2"], "\[Alpha]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
         RowBox[{
          RowBox[{"-", "s2"}], 
          SqrtBox["2"], "\[Alpha]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
         RowBox[{"x", "-", 
          RowBox[{"y", "/", "2"}]}]}], "]"}], 
       RowBox[{"\[DifferentialD]", "y"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Ws1s2", "[", 
  RowBox[{
  "\[Alpha]", ",", "\[Theta]", ",", "x", ",", "p", ",", "1", ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Ws1s2", "[", 
  RowBox[{"\[Alpha]", ",", "\[Theta]", ",", "x", ",", "p", ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Ws1s2", "[", 
  RowBox[{"\[Alpha]", ",", "\[Theta]", ",", "x", ",", "p", ",", "1", ",", 
   RowBox[{"-", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Ws1s2", "[", 
  RowBox[{"\[Alpha]", ",", "\[Theta]", ",", "x", ",", "p", ",", 
   RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8858445272544684`*^9, 3.8858446411380873`*^9}, {
  3.8858450865120754`*^9, 3.885845106514455*^9}, {3.88584516037786*^9, 
  3.885845195051381*^9}, {3.8858633420386705`*^9, 3.885863439685955*^9}, {
  3.885863494205274*^9, 3.885863547600296*^9}, {3.8860152650006094`*^9, 
  3.886015273361849*^9}, {3.886270604508871*^9, 3.886270612267581*^9}, {
  3.8862706532507887`*^9, 3.886270695605191*^9}, {3.886270733490753*^9, 
  3.88627080869214*^9}, {3.8870631489618716`*^9, 3.8870632152175474`*^9}, {
  3.8870658093364015`*^9, 3.8870658178814464`*^9}, {3.8870661649961452`*^9, 
  3.887066192785466*^9}, {3.887069977411128*^9, 3.8870699962380238`*^9}, {
  3.8940653598649006`*^9, 3.894065387536829*^9}, {3.8940654398040466`*^9, 
  3.8940654791754847`*^9}, {3.894065518974456*^9, 3.8940655213143654`*^9}, {
  3.8940658394344187`*^9, 3.894065846639325*^9}, {3.8943360133115625`*^9, 
  3.894336018281415*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"50b1cce2-e8e2-40fc-a557-9cef5648ed5f"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["p", "2"]}], "-", 
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Alpha]", "2"]}], "+", 
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"p", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], 
  "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.8858495712551374`*^9, 3.885863443295351*^9, 3.885863500549529*^9, 
   3.885863620103553*^9, 3.885863742355462*^9, 3.8858640410613513`*^9, {
   3.8862707820095177`*^9, 3.8862708114531307`*^9}, 3.887063268260765*^9, 
   3.887066201235404*^9, 3.8870700127644434`*^9, {3.8940654865416145`*^9, 
   3.894065490573142*^9}, 3.8940655282744894`*^9, 3.894065797187976*^9, 
   3.8941669400070276`*^9, {3.894336003060384*^9, 3.8943360226360517`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"337a1a98-f3db-4ba4-a12c-16397becda4b"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["p", "2"]}], "-", 
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Alpha]", "2"]}], "-", 
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"p", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], 
  "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.8858495712551374`*^9, 3.885863443295351*^9, 3.885863500549529*^9, 
   3.885863620103553*^9, 3.885863742355462*^9, 3.8858640410613513`*^9, {
   3.8862707820095177`*^9, 3.8862708114531307`*^9}, 3.887063268260765*^9, 
   3.887066201235404*^9, 3.8870700127644434`*^9, {3.8940654865416145`*^9, 
   3.894065490573142*^9}, 3.8940655282744894`*^9, 3.894065797187976*^9, 
   3.8941669400070276`*^9, {3.894336003060384*^9, 3.8943360258266783`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"8c5d4a68-e143-4f20-805c-98c86557faf8"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["p", "2"]}], "-", 
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], 
  "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.8858495712551374`*^9, 3.885863443295351*^9, 3.885863500549529*^9, 
   3.885863620103553*^9, 3.885863742355462*^9, 3.8858640410613513`*^9, {
   3.8862707820095177`*^9, 3.8862708114531307`*^9}, 3.887063268260765*^9, 
   3.887066201235404*^9, 3.8870700127644434`*^9, {3.8940654865416145`*^9, 
   3.894065490573142*^9}, 3.8940655282744894`*^9, 3.894065797187976*^9, 
   3.8941669400070276`*^9, {3.894336003060384*^9, 3.894336028729819*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"b0177855-fed0-4eaf-a906-ec0f01d96107"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["p", "2"]}], "-", 
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], 
  "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.8858495712551374`*^9, 3.885863443295351*^9, 3.885863500549529*^9, 
   3.885863620103553*^9, 3.885863742355462*^9, 3.8858640410613513`*^9, {
   3.8862707820095177`*^9, 3.8862708114531307`*^9}, 3.887063268260765*^9, 
   3.887066201235404*^9, 3.8870700127644434`*^9, {3.8940654865416145`*^9, 
   3.894065490573142*^9}, 3.8940655282744894`*^9, 3.894065797187976*^9, 
   3.8941669400070276`*^9, {3.894336003060384*^9, 3.8943360315555277`*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"dbc75ac7-8367-4466-b391-e05112bea4c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Ws1s2", "[", 
     RowBox[{
     "\[Alpha]", ",", "\[Theta]", ",", "x", ",", "p", ",", "1", ",", "1"}], 
     "]"}], "+", 
    RowBox[{"Ws1s2", "[", 
     RowBox[{"\[Alpha]", ",", "\[Theta]", ",", "x", ",", "p", ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}]}], "]"}]}], ")"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Ws1s2", "[", 
     RowBox[{"\[Alpha]", ",", "\[Theta]", ",", "x", ",", "p", ",", "1", ",", 
      RowBox[{"-", "1"}]}], "]"}], "+", 
    RowBox[{"Ws1s2", "[", 
     RowBox[{"\[Alpha]", ",", "\[Theta]", ",", "x", ",", "p", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "]"}]}], ")"}], "]"}]}], "Input",
 CellChangeTimes->{{3.885844956662285*^9, 3.8858449582872663`*^9}, {
  3.885845054196477*^9, 3.8858450791517572`*^9}, {3.885845118499655*^9, 
  3.8858451521119704`*^9}, {3.885845251590592*^9, 3.8858453032686176`*^9}, {
  3.8858453432712803`*^9, 3.885845351132615*^9}, {3.8858454149330425`*^9, 
  3.885845423089411*^9}, {3.88586376026349*^9, 3.8858637608881693`*^9}, {
  3.886271006916383*^9, 3.8862710310173817`*^9}, {3.887063233879213*^9, 
  3.887063251222247*^9}, {3.8870700285839963`*^9, 3.8870700423994083`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"3fe25f4f-508b-4882-88fe-1adf628f284a"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p", "2"]}], "-", 
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Alpha]", "2"]}]}]], " ", 
   RowBox[{"Cosh", "[", 
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"p", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
  "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.8858452678267856`*^9, 3.8858453051123543`*^9, 3.8858453525245996`*^9, 
   3.8858454251830435`*^9, {3.8858635147541895`*^9, 3.8858635168166904`*^9}, {
   3.885863758247554*^9, 3.8858637616069584`*^9}, 3.886270827921177*^9, 
   3.886271032191574*^9, 3.887063289865644*^9, 3.887066211464847*^9, 
   3.8870700496199336`*^9, 3.8940655587516975`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"e9010df4-fc11-4eb6-91ee-03296a595ce5"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p", "2"]}], "-", 
     SuperscriptBox["x", "2"]}]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
  "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.8858452678267856`*^9, 3.8858453051123543`*^9, 3.8858453525245996`*^9, 
   3.8858454251830435`*^9, {3.8858635147541895`*^9, 3.8858635168166904`*^9}, {
   3.885863758247554*^9, 3.8858637616069584`*^9}, 3.886270827921177*^9, 
   3.886271032191574*^9, 3.887063289865644*^9, 3.887066211464847*^9, 
   3.8870700496199336`*^9, 3.8940655650430517`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"1cb837f3-40a3-47ac-9708-6c9651d0e735"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Wcat", "[", 
    RowBox[{"\[Alpha]_", ",", "\[Theta]_", ",", "x_", ",", "p_", ",", "s_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["p", "2"]}], "-", 
          SuperscriptBox["x", "2"], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Alpha]", "2"]}]}]], " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
       "\[Pi]"], "+", 
      RowBox[{"s", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["p", "2"]}], "-", 
           SuperscriptBox["x", "2"]}]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{"x", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
        "\[Pi]"]}]}], ")"}], 
    FractionBox["1", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"s", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[Alpha]", "2"]}]]}]}], ")"}]}]]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8870860667295227`*^9, 3.887086185425682*^9}, {
  3.8940655748266354`*^9, 3.8940655784259624`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"354ff959-f72f-4056-b5ac-6a6edfd5dcfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
[Calc] Finding the Wigner distribution after the first beamsplitter\
\>", "Subsubsection",
 CellChangeTimes->{{3.885846498092421*^9, 3.885846501514296*^9}, {
   3.8860150383632526`*^9, 3.8860150475356274`*^9}, {3.886015085678426*^9, 
   3.886015105524132*^9}, {3.886015427936349*^9, 3.8860154304678*^9}, 
   3.886015466750798*^9, {3.8871575055668015`*^9, 3.887157506546286*^9}, {
   3.894065778614628*^9, 3.8940657798717256`*^9}, {3.8943290505324078`*^9, 
   3.894329054615018*^9}},ExpressionUUID->"7990f718-9d32-43ed-a38e-\
8388a77ea3ed"],

Cell[BoxData[
 RowBox[{"(*", " ", "\[IndentingNewLine]", "   ", 
  RowBox[{
   RowBox[{"For", " ", "the", " ", "current", " ", "example"}], ",", " ", 
   RowBox[{
    RowBox[{"Wigner", " ", "distribution", " ", "has", " ", "a", " ", 
     RowBox[{"form", ":", " ", 
      SuperscriptBox["W", 
       RowBox[{"(", "2", ")"}]]}]}], "=", 
    RowBox[{
     FractionBox["1", "\[ScriptCapitalN]"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["W", "++"], "+", 
        SubscriptBox["W", "--"], "+", 
        SubscriptBox["W", 
         RowBox[{"+", "-"}]], "+", 
        SubscriptBox["W", 
         RowBox[{"-", "+"}]]}], ")"}], ".", "\[IndentingNewLine]", 
      "First"}]}]}], ",", " ", 
   RowBox[{
    RowBox[{
    "we", " ", "are", " ", "interested", " ", "in", " ", "finding", " ", 
     SubscriptBox["W", 
      RowBox[{"++", 
       RowBox[{",", 
        RowBox[{"--", 
         RowBox[{",", 
          RowBox[{"+", "-"}], ",", "--"}]}]}]}]], " ", 
     RowBox[{
     "separately", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
      "Careful"}], " ", "about", " ", "using", " ", "the", " ", 
     "wavefunction", " ", "for", " ", "coherent", " ", "state", " ", 
     RowBox[{"here", ".", " ", "Imaginary"}], " ", "part", " ", 
     "\[ImaginaryI]r\[Alpha]", " ", "is", " ", 
     RowBox[{"important", ".", "\[IndentingNewLine]", " ", "For"}], " ", 
     RowBox[{"conjugate", ":", " ", 
      RowBox[{"use", " ", 
       RowBox[{"\[Psi]", "\[Conjugate]"}], 
       RowBox[{"(", 
        RowBox[{"x0", ",", 
         RowBox[{"p0", ";", "x"}]}], ")"}]}]}]}], "->", " ", 
    RowBox[{"\[Psi]", 
     RowBox[{"(", 
      RowBox[{"x0", ",", 
       RowBox[{
        RowBox[{"-", "p0"}], ";", "x"}]}], ")"}]}]}]}], "\[IndentingNewLine]",
   "*)"}]], "Input",
 CellChangeTimes->{{3.8858465037958655`*^9, 3.8858466873857985`*^9}, {
   3.8858467478913116`*^9, 3.8858467725655203`*^9}, {3.885847025307646*^9, 
   3.885847046090887*^9}, {3.8858495281743917`*^9, 3.88584953104941*^9}, {
   3.8858636304013147`*^9, 3.8858636855306535`*^9}, {3.8858637209777355`*^9, 
   3.885863722368061*^9}, {3.88586385653388*^9, 3.8858638640500765`*^9}, 
   3.8858640016350965`*^9, {3.886015593447544*^9, 3.8860156152610483`*^9}, {
   3.8860156500917745`*^9, 3.8860159319098063`*^9}, {3.886273262697235*^9, 
   3.886273270848762*^9}, {3.886273373504003*^9, 3.886273457779366*^9}, {
   3.8862735177245073`*^9, 3.8862735969959383`*^9}, {3.886273716788499*^9, 
   3.886273733138052*^9}, 3.8862738007458143`*^9, {3.886274005655397*^9, 
   3.886274012125661*^9}, {3.886274891487114*^9, 3.8862749294607964`*^9}, {
   3.886274972990527*^9, 3.886274988153091*^9}, 3.8862750371091423`*^9, {
   3.8870662460606537`*^9, 3.887066261870203*^9}, {3.8870663280051217`*^9, 
   3.887066353958898*^9}, {3.8870663880961065`*^9, 3.8870664148378353`*^9}, {
   3.887066445398137*^9, 3.8870665062005696`*^9}, {3.8870665449111595`*^9, 
   3.8870665693864527`*^9}, {3.887066614004654*^9, 3.8870666165549006`*^9}, {
   3.8870667519932075`*^9, 3.887066753747411*^9}, {3.8870669113111706`*^9, 
   3.887066918466962*^9}},ExpressionUUID->"8382252c-9feb-426e-9ca0-\
e61f18ca9ea9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"W2modes1s2", "[", 
    RowBox[{
    "t_", ",", "r_", ",", "\[Alpha]_", ",", "\[Theta]_", ",", "x1_", ",", 
     "p1_", ",", "x2_", ",", "p2_", ",", "s1_", ",", "s2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Ws1s2", "[", " ", 
     RowBox[{
      RowBox[{"t", " ", "\[Alpha]"}], ",", "\[Theta]", ",", "x1", ",", "p1", 
      ",", "s1", ",", "s2"}], "]"}], 
    RowBox[{"Ws1s2", "[", 
     RowBox[{
      RowBox[{"r", " ", "\[Alpha]"}], ",", 
      RowBox[{"\[Theta]", "+", 
       FractionBox["\[Pi]", "2"]}], ",", "x2", ",", "p2", ",", "s1", ",", 
      "s2"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.887066940456647*^9, 3.887066956781352*^9}, {
  3.887066991682326*^9, 3.887067036413204*^9}, {3.887067099300669*^9, 
  3.887067163352674*^9}, {3.887067208293872*^9, 3.887067209579935*^9}, {
  3.887067397879633*^9, 3.8870674045898123`*^9}, {3.8870695290206804`*^9, 
  3.8870695392089214`*^9}, {3.887070109006217*^9, 3.8870701779871607`*^9}, {
  3.887075149307367*^9, 3.88707517361551*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"bf534aaa-e43b-4a13-b9c3-2a90fc3aa090"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"++", " ", 
    RowBox[{"and", " ", "--"}]}], " ", "terms", " ", "for", " ", "two", " ", 
   "modes"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8870711190937815`*^9, 
  3.8870711330438795`*^9}},ExpressionUUID->"db5dcab2-a578-40d9-a24d-\
334c9dae7819"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"W2modes1s2", "[", 
   RowBox[{
   "t", ",", "r", ",", "\[Alpha]", ",", "\[Theta]", ",", "x1", ",", "p1", ",",
     "x2", ",", "p2", ",", "1", ",", "1"}], "]"}], "+", 
  RowBox[{"W2modes1s2", "[", 
   RowBox[{
   "t", ",", "r", ",", "\[Alpha]", ",", "\[Theta]", ",", "x1", ",", "p1", ",",
     "x2", ",", "p2", ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8870672252269983`*^9, 3.8870672361138964`*^9}, {
  3.8870673000349827`*^9, 3.887067305500188*^9}, {3.887067366144375*^9, 
  3.8870673720758944`*^9}, {3.887067410818058*^9, 3.8870674248532734`*^9}, {
  3.8870675500283475`*^9, 3.887067556376499*^9}, {3.8870676067728357`*^9, 
  3.887067611354828*^9}, {3.887070154701103*^9, 3.887070163503683*^9}, {
  3.8870702873042603`*^9, 3.887070315030164*^9}, {3.887070821158004*^9, 
  3.8870708251144524`*^9}, {3.8870751847912493`*^9, 3.88707519181701*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"be4b164a-feed-4f67-9542-c75a5962b066"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p1", "2"]}], "-", 
     SuperscriptBox["p2", "2"], "-", 
     SuperscriptBox["x1", "2"], "-", 
     SuperscriptBox["x2", "2"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox["\[Alpha]", "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["t", "2"], " ", 
      SuperscriptBox["\[Alpha]", "2"]}], "+", 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x1", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"p1", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"p2", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"x2", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], 
   SuperscriptBox["\[Pi]", "2"]], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p1", "2"]}], "-", 
     SuperscriptBox["p2", "2"], "-", 
     SuperscriptBox["x1", "2"], "-", 
     SuperscriptBox["x2", "2"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox["\[Alpha]", "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["t", "2"], " ", 
      SuperscriptBox["\[Alpha]", "2"]}], "-", 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x1", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"p1", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "p2"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"x2", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], 
   SuperscriptBox["\[Pi]", "2"]]}]], "Output",
 CellChangeTimes->{3.8940660952834873`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"05570418-b9d1-4ec3-a83b-3576713a3429"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p1", "2"]}], "-", 
     SuperscriptBox["p2", "2"], "-", 
     SuperscriptBox["x1", "2"], "-", 
     SuperscriptBox["x2", "2"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox["\[Alpha]", "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["t", "2"], " ", 
      SuperscriptBox["\[Alpha]", "2"]}]}]], 
   SuperscriptBox["\[Pi]", "2"]], 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "2"}], " ", 
       SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x1", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"p1", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"x2", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x1", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"p1", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "p2"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"x2", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]]}], ")"}]}]], \
"Input",
 CellChangeTimes->{{3.8940661699635177`*^9, 
  3.894066213484411*^9}},ExpressionUUID->"1686e94d-cc0c-4fce-af3d-\
fea5ebb02cf4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "2"}], " ", 
       SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x1", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"p1", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"x2", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x1", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"p1", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "p2"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"x2", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["r", "2"], "+", 
      SuperscriptBox["t", "2"]}], "==", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.894066239855558*^9, 3.8940662623549566`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"0ddb1a5d-659d-438e-817a-e2a78594e50d"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"Cosh", "[", 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", "\[Alpha]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p2", " ", "r"}], "+", 
         RowBox[{"t", " ", "x1"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p1", " ", "t"}], "-", 
         RowBox[{"r", " ", "x2"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.894066266650959*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"5c5ef412-1f77-4d0b-bfc5-1007f3ab8059"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"final", " ", "form", " ", 
    SubscriptBox["w", "++"]}], "+", 
   SubscriptBox["w", "--"]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.887071166945118*^9, 
  3.8870711944380713`*^9}},ExpressionUUID->"25983487-f96c-4105-ab89-\
f73120bbfcbb"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p1", "2"]}], "-", 
     SuperscriptBox["p2", "2"], "-", 
     SuperscriptBox["x1", "2"], "-", 
     SuperscriptBox["x2", "2"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Alpha]", "2"]}]}]], 
   SuperscriptBox["\[Pi]", "2"]], "2", " ", 
  RowBox[{"Cosh", "[", 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", "\[Alpha]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p2", " ", "r"}], "+", 
         RowBox[{"t", " ", "x1"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p1", " ", "t"}], "-", 
         RowBox[{"r", " ", "x2"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8870712080007043`*^9, {3.8870766135993953`*^9, 3.887076661156703*^9}, 
   3.894066395159371*^9},ExpressionUUID->"e8dfcd0d-62f1-42ab-bf40-\
d83803136f3f"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"+", 
    RowBox[{"-", " ", "and"}]}], " ", "-", 
   RowBox[{
    RowBox[{"+", " ", "terms"}], " ", "for", " ", "two", " ", "modes"}]}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.88707113628026*^9, 
  3.887071150802662*^9}},ExpressionUUID->"4175f127-7c24-4af0-8709-\
75adf1e4fc82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"W2modes1s2", "[", 
   RowBox[{
   "t", ",", "r", ",", "\[Alpha]", ",", "\[Theta]", ",", "x1", ",", "p1", ",",
     "x2", ",", "p2", ",", "1", ",", 
    RowBox[{"-", "1"}]}], "]"}], "+", 
  RowBox[{"W2modes1s2", "[", 
   RowBox[{
   "t", ",", "r", ",", "\[Alpha]", ",", "\[Theta]", ",", "x1", ",", "p1", ",",
     "x2", ",", "p2", ",", 
    RowBox[{"-", "1"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8870711560339837`*^9, 3.887071158453337*^9}, {
  3.8870766744659605`*^9, 3.887076678971755*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"d0485b60-956a-4992-b82a-a8f008936b6a"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p1", "2"]}], "-", 
     SuperscriptBox["p2", "2"], "-", 
     SuperscriptBox["x1", "2"], "-", 
     SuperscriptBox["x2", "2"], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x2", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"p2", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"p1", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"x1", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], 
   SuperscriptBox["\[Pi]", "2"]], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p1", "2"]}], "-", 
     SuperscriptBox["p2", "2"], "-", 
     SuperscriptBox["x1", "2"], "-", 
     SuperscriptBox["x2", "2"], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x2", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"p2", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"p1", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"x1", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], 
   SuperscriptBox["\[Pi]", "2"]]}]], "Output",
 CellChangeTimes->{3.894066416567915*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"9e8a522e-3a49-4f10-8a43-d9605357ef30"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p1", "2"]}], "-", 
     SuperscriptBox["p2", "2"], "-", 
     SuperscriptBox["x1", "2"], "-", 
     SuperscriptBox["x2", "2"]}]], 
   SuperscriptBox["\[Pi]", "2"]], 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "2"}], " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"p2", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p1", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"x1", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"p2", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p1", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"x1", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.8940664341063237`*^9, 
  3.8940664583315616`*^9}},ExpressionUUID->"fd917406-5ed6-4d07-92e5-\
94ae4fc0050a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "2"}], " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"p2", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p1", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"x1", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"p2", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p1", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"x1", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["r", "2"], "+", 
      SuperscriptBox["t", "2"]}], "==", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8940664766373796`*^9, 3.8940664808329554`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"c8ae3f7b-e0eb-47ea-8998-ab6d3efc8fe1"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", "\[Alpha]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "p1"}], " ", "t"}], "+", 
         RowBox[{"r", " ", "x2"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p2", " ", "r"}], "+", 
         RowBox[{"t", " ", "x1"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.894066485066431*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"6b5346e1-7256-4c04-95df-f70c60b09f9b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"final", " ", "form", " ", 
    SubscriptBox["w", 
     RowBox[{"+", "-"}]]}], "+", 
   SubscriptBox["w", 
    RowBox[{"-", "+"}]]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.887071166945118*^9, 3.8870711944380713`*^9}, {
  3.887071454473884*^9, 
  3.88707146992292*^9}},ExpressionUUID->"39fca8ca-f065-4e45-9d0f-\
11ac9141155c"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p1", "2"]}], "-", 
     SuperscriptBox["p2", "2"], "-", 
     SuperscriptBox["x1", "2"], "-", 
     SuperscriptBox["x2", "2"]}]], 
   SuperscriptBox["\[Pi]", "2"]], "2", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", "\[Alpha]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "p1"}], " ", "t"}], "+", 
         RowBox[{"r", " ", "x2"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p2", " ", "r"}], "+", 
         RowBox[{"t", " ", "x1"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.8870712080007043`*^9, 3.8870714508107777`*^9, 
  3.8870718300240297`*^9, 3.887076820974142*^9, 
  3.894066551504919*^9},ExpressionUUID->"dcf24c98-d278-4e45-91df-\
1f6791a6a46a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"General", " ", "cat", " ", "two", " ", "mode", " ", "B"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", " ", 
        RowBox[{"\[ImaginaryI]", " ", "r"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "r"}], ",", " ", "t"}], "}"}]}], 
     "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Two", "-", 
    RowBox[{
    "mode", " ", "Wigner", " ", "distribution", " ", "just", " ", "before", 
     " ", "heralding"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"W2mode", "[", 
      RowBox[{
      "t_", ",", "r_", ",", "\[Alpha]_", ",", "\[Theta]_", ",", "x1_", ",", 
       "p1_", ",", "x2_", ",", "p2_", ",", "s_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["p1", "2"]}], "-", 
         SuperscriptBox["p2", "2"], "-", 
         SuperscriptBox["x1", "2"], "-", 
         SuperscriptBox["x2", "2"]}]], 
       RowBox[{
        SuperscriptBox["\[Pi]", "2"], " ", "2", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"s", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["\[Alpha]", "2"]}]]}]}], ")"}]}]], "2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[Alpha]", "2"]}]], 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"p2", " ", "r"}], "+", 
                RowBox[{"t", " ", "x1"}]}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"p1", " ", "t"}], "-", 
                RowBox[{"r", " ", "x2"}]}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}], 
        "+", 
        RowBox[{"s", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "p1"}], " ", "t"}], "+", 
                RowBox[{"r", " ", "x2"}]}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"p2", " ", "r"}], "+", 
                RowBox[{"t", " ", "x1"}]}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}]}]}], 
       ")"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"W2mode", "[", 
     RowBox[{
     "t_", ",", "r_", ",", "\[Alpha]_", ",", "\[Theta]_", ",", "x1_", ",", 
      "p1_", ",", "x2_", ",", "p2_", ",", "s_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"s", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[Alpha]", "2"]}]]}]}], ")"}]}]], 
     FractionBox["1", 
      SuperscriptBox["\[Pi]", "2"]], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["p1", "2"]}], "-", 
         SuperscriptBox["p2", "2"], "-", 
         SuperscriptBox["x1", "2"], "-", 
         SuperscriptBox["x2", "2"], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x1", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"x2", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["p1", "2"]}], "-", 
         SuperscriptBox["p2", "2"], "-", 
         SuperscriptBox["x1", "2"], "-", 
         SuperscriptBox["x2", "2"], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x1", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "p2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"x2", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], "+", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"s", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["p1", "2"]}], "-", 
            SuperscriptBox["p2", "2"], "-", 
            SuperscriptBox["x1", "2"], "-", 
            SuperscriptBox["x2", "2"], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x2", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"p2", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p1", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"x1", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]]}], "+", 
         RowBox[{"s", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["p1", "2"]}], "-", 
            SuperscriptBox["p2", "2"], "-", 
            SuperscriptBox["x1", "2"], "-", 
            SuperscriptBox["x2", "2"], "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x2", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"p2", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p1", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"x1", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]]}]}], 
        ")"}]}], ")"}]}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8858498985611196`*^9, 3.8858499382036123`*^9}, {
   3.8858499784703665`*^9, 3.885850009270121*^9}, 3.8858626015302057`*^9, {
   3.8858641575062723`*^9, 3.8858641589281054`*^9}, {3.886015631294325*^9, 
   3.8860156396546593`*^9}, {3.887071480054124*^9, 3.8870715928897314`*^9}, {
   3.8870717676859903`*^9, 3.887071780421836*^9}, {3.8870718361029205`*^9, 
   3.8870718501833425`*^9}, {3.887072072743135*^9, 3.887072098281388*^9}, {
   3.8870721644669323`*^9, 3.8870721653694973`*^9}, 3.887072276870008*^9, {
   3.8870768410265875`*^9, 3.887076886909055*^9}, {3.8871613836296434`*^9, 
   3.8871615641035256`*^9}, {3.8871616544748106`*^9, 3.887161657475218*^9}, {
   3.8879343547930565`*^9, 3.8879343760626526`*^9}, {3.894066606574421*^9, 
   3.894066615859638*^9}, {3.894068398685341*^9, 3.894068536097412*^9}, 
   3.894068602193102*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"145e9982-de56-49fa-bc68-7abf719b7f20"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Real", " ", "Variables"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GaussianIntegralMatrix", "[", "M_", "]"}], ":=", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
           SuperscriptBox[
            RowBox[{"M", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "2"]}], "-", 
          RowBox[{
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "+", 
          RowBox[{
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
           SuperscriptBox[
            RowBox[{"M", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"M", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "2"], " ", 
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "2"], "-", 
          RowBox[{"4", " ", 
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]}]}]]], " ", 
       "\[Pi]"}], 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"M", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}]}], "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "2"], 
          RowBox[{"M", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}]], " ", 
       SqrtBox[
        RowBox[{"-", 
         RowBox[{"M", "\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]}]]}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpCoefficientsToMatrix", "[", 
      RowBox[{"expr_", ",", "x_", ",", "p_"}], "]"}], ":=", 
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       RowBox[{"Exponent", "[", 
        RowBox[{"expr", ",", "\[ExponentialE]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "p"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GaussIntR1", "[", 
      RowBox[{"expr_", ",", "x_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "expo"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"expo", " ", "=", " ", 
         RowBox[{"Exponent", "[", 
          RowBox[{"expr", ",", "\[ExponentialE]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d", " ", "=", " ", 
         RowBox[{"Coefficient", "[", 
          RowBox[{"expr", ",", "\[ExponentialE]", ",", " ", "expo"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c", ",", "b", ",", "a"}], "}"}], "=", 
         RowBox[{"CoefficientList", "[", 
          RowBox[{"expo", ",", "x", ",", "3"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        FractionBox[
         RowBox[{"d", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox["b", "2"], 
              RowBox[{"4", " ", "a"}]]}], "+", "c"}]], " ", 
          SqrtBox["\[Pi]"]}], 
         SqrtBox[
          RowBox[{"-", "a"}]]]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GaussIntR2", "[", 
      RowBox[{"expr_", ",", "var1_", ",", "var2_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"expo", ",", "coef"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"expo", " ", "=", " ", 
         RowBox[{"Exponent", "[", 
          RowBox[{"expr", ",", "\[ExponentialE]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"coef", " ", "=", " ", 
         RowBox[{"Coefficient", "[", 
          RowBox[{"expr", ",", "\[ExponentialE]", ",", " ", "expo"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"coef", " ", 
         RowBox[{"GaussianIntegralMatrix", "[", 
          RowBox[{"CoefficientList", "[", 
           RowBox[{"expo", ",", 
            RowBox[{"{", 
             RowBox[{"var1", ",", "var2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Trunated", " ", "Gaussian", " ", 
     RowBox[{"integrals", ":", " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{
         RowBox[{"-", "\[CapitalDelta]"}], "/", "2"}], 
        RowBox[{"\[CapitalDelta]", "/", "2"}]], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c", " ", 
            SuperscriptBox["x", "2"]}], "+", 
           RowBox[{"b", " ", "x"}], " ", "+", "a"}], ")"}]], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "TruncatedGaussInt", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TruncatedGaussInt", "[", 
      RowBox[{"expr_", ",", "x_", ",", "\[CapitalDelta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "expo", ",", "coef"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"expo", "=", 
         RowBox[{"Exponent", "[", 
          RowBox[{"expr", ",", "\[ExponentialE]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d", " ", "=", " ", 
         RowBox[{"Coefficient", "[", 
          RowBox[{"expr", ",", "\[ExponentialE]", ",", "expo"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c", ",", "b", ",", "a"}], "}"}], "=", 
         RowBox[{"CoefficientList", "[", 
          RowBox[{"expo", ",", 
           RowBox[{"{", "x", "}"}], ",", 
           RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["b", "2"], 
               RowBox[{"4", " ", "a"}]]}], "+", "c"}]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Erfi", "[", 
               FractionBox[
                RowBox[{"b", "-", 
                 RowBox[{"a", " ", "\[CapitalDelta]"}]}], 
                RowBox[{"2", " ", 
                 SqrtBox["a"]}]], "]"}]}], "+", 
             RowBox[{"Erfi", "[", 
              FractionBox[
               RowBox[{"b", "+", 
                RowBox[{"a", " ", "\[CapitalDelta]"}]}], 
               RowBox[{"2", " ", 
                SqrtBox["a"]}]], "]"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox["a"]}]]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.891051474173073*^9, 3.891051500099601*^9}, {
   3.891051531178793*^9, 3.891051875740218*^9}, {3.891051928241543*^9, 
   3.891052035657254*^9}, {3.891052162890197*^9, 3.891052303903112*^9}, {
   3.891052836406435*^9, 3.891052925938027*^9}, {3.891053019710294*^9, 
   3.891053050793953*^9}, {3.891053143390341*^9, 3.891053260123448*^9}, {
   3.891053291823152*^9, 3.891053326467146*^9}, {3.891053417341216*^9, 
   3.8910534798884974`*^9}, {3.8910535312580643`*^9, 
   3.8910535660663853`*^9}, {3.891053602558671*^9, 3.891053637916566*^9}, {
   3.891053973095109*^9, 3.891054095209445*^9}, {3.891054201219017*^9, 
   3.8910542261568003`*^9}, {3.891054386254147*^9, 3.891054396413319*^9}, {
   3.891054479085239*^9, 3.891054539898569*^9}, {3.891054580347865*^9, 
   3.891054582479888*^9}, {3.8910546638684196`*^9, 3.891054680585456*^9}, {
   3.891054711691704*^9, 3.89105473271989*^9}, {3.891054776004319*^9, 
   3.8910549153378468`*^9}, {3.8910549790078697`*^9, 
   3.8910550236007957`*^9}, {3.891055055252842*^9, 3.891055158209025*^9}, {
   3.891055216056715*^9, 3.8910552347964582`*^9}, {3.8910558209774647`*^9, 
   3.8910560333592787`*^9}, {3.891056063851841*^9, 3.891056100796818*^9}, {
   3.891056174632102*^9, 3.891056467309984*^9}, 3.8910566911669807`*^9, 
   3.891057257595378*^9, 3.891057304085327*^9, {3.891658056326274*^9, 
   3.891658072507659*^9}, {3.8920877959125347`*^9, 3.8920878011514797`*^9}, {
   3.892157534563236*^9, 3.892157545873816*^9}, {3.89216736770179*^9, 
   3.8921675611978283`*^9}, {3.892255190048388*^9, 3.892255206553677*^9}, {
   3.892782069103449*^9, 3.8927820828646545`*^9}, {3.8927822028012867`*^9, 
   3.892782312151314*^9}, {3.8927823614335566`*^9, 3.892782404761662*^9}, {
   3.8940667505859528`*^9, 3.894066751010428*^9}, {3.8940668124804153`*^9, 
   3.8940668266509027`*^9}, {3.8941683974654703`*^9, 3.894168414453805*^9}, {
   3.8941735777155704`*^9, 3.894173594126799*^9}, {3.8941736436361375`*^9, 
   3.8941736540032167`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"ac189b93-1e4c-4aea-a04e-249497ddd0cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["[Calc] \[Delta] Gaussian filtering to account for loss", "Subsubsection",
 CellChangeTimes->{{3.8870739272025356`*^9, 3.887073932996043*^9}, {
   3.888024797175744*^9, 3.8880248133641863`*^9}, {3.888035945502914*^9, 
   3.8880359589588785`*^9}, {3.8882697092097187`*^9, 3.8882697128501005`*^9}, 
   3.888370128532089*^9, {3.8940701027798185`*^9, 3.894070104263889*^9}, {
   3.8943290786201296`*^9, 
   3.894329081843407*^9}},ExpressionUUID->"61932443-88a0-496e-beff-\
ac700df8687a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"\[Pi]", " ", "2", "\[Delta]"}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{" ", "1"}], 
        RowBox[{"2", "\[Delta]"}]]}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["x2", "2"], "-", 
        RowBox[{"2", "x", " ", "x2"}], "+", 
        SuperscriptBox["p", "2"], "+", 
        SuperscriptBox["p2", "2"], "-", 
        RowBox[{"2", "p", " ", "p2"}]}], ")"}]}]]}], ")"}], 
  RowBox[{"W2mode", "[", 
   RowBox[{
   "t", ",", "r", ",", "\[Alpha]", ",", "\[Theta]", ",", "x1", ",", "p1", ",",
     "x", ",", "p", ",", "s"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.89406831377479*^9, 3.894068314698829*^9}, {
  3.8940698595981145`*^9, 3.894069875992489*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"e347eced-57d3-4f18-adf3-0e7ee691f5dd"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", 
    SuperscriptBox["\[Pi]", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}], " ", 
    "\[Delta]"}]], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], "-", 
       RowBox[{"2", " ", "p", " ", "p2"}], "+", 
       SuperscriptBox["p2", "2"], "+", 
       SuperscriptBox["x", "2"], "-", 
       RowBox[{"2", " ", "x", " ", "x2"}], "+", 
       SuperscriptBox["x2", "2"]}], 
      RowBox[{"2", " ", "\[Delta]"}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p", "2"]}], "-", 
       SuperscriptBox["p1", "2"], "-", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["x1", "2"], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x1", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"p1", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"x", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p", "2"]}], "-", 
       SuperscriptBox["p1", "2"], "-", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["x1", "2"], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "-", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x1", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"p1", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "p"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"x", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["p", "2"]}], "-", 
        SuperscriptBox["p1", "2"], "-", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["x1", "2"], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"p", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"p1", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"x1", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], " ", "s"}],
      "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["p", "2"]}], "-", 
        SuperscriptBox["p1", "2"], "-", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["x1", "2"], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"p", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"p1", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"x1", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], " ", 
      "s"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8940677798524523`*^9, 3.894068319088359*^9, 
  3.8940686108157387`*^9, 3.894069883087805*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"9da506de-5584-4291-ab0d-66e4d93fd50f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"GaussFiltered", " ", "=", "  ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", " ", "\[Pi]", " ", "\[Delta]"}]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{" ", "1"}], 
            RowBox[{"2", " ", "\[Delta]"}]]}], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["x2", "2"], "-", 
            RowBox[{"2", "x", " ", "x2"}], "+", 
            SuperscriptBox["p", "2"], "+", 
            SuperscriptBox["p2", "2"], "-", 
            RowBox[{"2", "p", " ", "p2"}]}], ")"}]}]]}], ")"}], 
      RowBox[{"W2mode", "[", 
       RowBox[{
       "t", ",", "r", ",", "\[Alpha]", ",", "\[Theta]", ",", "x1", ",", "p1", 
        ",", "x", ",", "p", ",", "s"}], "]"}], 
      RowBox[{"\[DifferentialD]", "p"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8870739438509665`*^9, 3.887073982284957*^9}, 
   3.887083826581899*^9, {3.8870839432278705`*^9, 3.887083971590612*^9}, {
   3.887160687133919*^9, 3.8871607177282686`*^9}, {3.8871607932181687`*^9, 
   3.8871608313741035`*^9}, {3.8878582625086465`*^9, 3.887858270088859*^9}, {
   3.887858362362034*^9, 3.8878583924353924`*^9}, {3.8879343791913447`*^9, 
   3.8879344218286476`*^9}, {3.888024517724218*^9, 3.8880245370545545`*^9}, {
   3.8880245941696377`*^9, 3.888024600185639*^9}, {3.888024684557127*^9, 
   3.888024687354004*^9}, {3.8880247826103153`*^9, 3.888024783032591*^9}, {
   3.8880253990967245`*^9, 3.8880254459792805`*^9}, {3.8880320780341744`*^9, 
   3.8880320989900694`*^9}, {3.8880322113783703`*^9, 3.8880322570128517`*^9}, 
   3.8880327391595917`*^9, 3.88803277646253*^9, {3.888032834688569*^9, 
   3.8880329422485304`*^9}, {3.888033235008885*^9, 3.8880332358373775`*^9}, {
   3.888033627502653*^9, 3.8880336461146803`*^9}, {3.888034389888707*^9, 
   3.8880343933414593`*^9}, {3.894068685614186*^9, 3.894068710059433*^9}, {
   3.894069892558979*^9, 
   3.894069914855669*^9}},ExpressionUUID->"b85ad3bb-c7b4-4e7c-947a-\
173f82583d82"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"integrandsun", " ", "=", " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{" ", 
      RowBox[{
       SuperscriptBox["\[Pi]", "3"], "  ", "2", "\[Delta]"}]}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["p", "2"], "-", 
        RowBox[{"2", " ", "p", " ", "p2"}], "+", 
        SuperscriptBox["p2", "2"], "+", 
        SuperscriptBox["x", "2"], "-", 
        RowBox[{"2", " ", "x", " ", "x2"}], "+", 
        SuperscriptBox["x2", "2"]}], 
       RowBox[{"2", "\[Delta]"}]]}]], " ", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["p", "2"]}], "-", 
        SuperscriptBox["p1", "2"], "-", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["x1", "2"], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["t", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x1", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"p1", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"x", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], ",", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["p", "2"]}], "-", 
        SuperscriptBox["p1", "2"], "-", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["x1", "2"], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["t", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"]}], "-", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x1", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"p1", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], ",", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["p", "2"]}], "-", 
         SuperscriptBox["p1", "2"], "-", 
         SuperscriptBox["x", "2"], "-", 
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p1", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"x1", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], " ", 
       "s"}], ",", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["p", "2"]}], "-", 
         SuperscriptBox["p1", "2"], "-", 
         SuperscriptBox["x", "2"], "-", 
         SuperscriptBox["x1", "2"], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p1", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"x1", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], " ", 
       "s"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"integralsun", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"GaussIntR2", "[", 
       RowBox[{"#", ",", " ", "x", ",", "p"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         SuperscriptBox["t", "2"]}], "==", "1"}], "}"}]}], "]"}], "&"}], "/@",
    "integrandsun"}]}]}], "Input",
 CellChangeTimes->{{3.894068899930124*^9, 3.8940689157251277`*^9}, {
  3.894068946280428*^9, 3.894069047768222*^9}, {3.8940690834363613`*^9, 
  3.8940690966253815`*^9}, {3.8940691355204563`*^9, 3.8940691558818455`*^9}, {
  3.8940691965365553`*^9, 3.894069207841447*^9}, {3.8940694163007116`*^9, 
  3.8940694668675303`*^9}, {3.894069845486579*^9, 3.894069847832346*^9}, {
  3.8940699392170715`*^9, 3.894069969559843*^9}, {3.8940700243737345`*^9, 
  3.8940700267950583`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"b0396cb0-7a39-4666-b409-fdcb4c0ce67b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["p1", "2"], "+", 
        SuperscriptBox["p2", "2"], "+", 
        SuperscriptBox["x1", "2"], "+", 
        SuperscriptBox["x2", "2"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Alpha]", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["t", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x1", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"p1", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "p2"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"x2", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Delta]"}]}]]}]], 
    RowBox[{
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[Delta]"}]}], ")"}]}]], ",", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["p1", "2"], "+", 
        SuperscriptBox["p2", "2"], "+", 
        SuperscriptBox["x1", "2"], "+", 
        SuperscriptBox["x2", "2"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Alpha]", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["t", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x1", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"p1", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"p2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"x2", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Delta]"}]}]]}]], 
    RowBox[{
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[Delta]"}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["p2", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         SuperscriptBox["x2", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"p2", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p1", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"x1", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s"}], 
    RowBox[{
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[Delta]"}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["p2", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         SuperscriptBox["x2", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"p2", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p1", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"x1", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s"}], 
    RowBox[{
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[Delta]"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.8940690213622246`*^9, 3.8940690351628957`*^9}, 
   3.894069071578619*^9, 3.8940691248304014`*^9, 3.8940691908476334`*^9, 
   3.8940692409916267`*^9, 3.894069432652134*^9, 3.894069469460743*^9, 
   3.894070003576869*^9, 3.894070058637834*^9, 3.894167061599453*^9, 
   3.8943291806484118`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"b4d5d2fa-b6e5-4666-b353-4a55c47d64ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Checking", " ", "normalization"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"GaussIntR2", "[", 
        RowBox[{
         RowBox[{"GaussIntR2", "[", 
          RowBox[{"#", ",", " ", "x2", ",", "p2"}], "]"}], ",", "x1", ",", 
         "p1"}], "]"}], "&"}], "/@", "integralsun"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       SuperscriptBox["t", "2"]}], "==", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.894069525423045*^9, 3.8940695736720176`*^9}, {
  3.8940696778009853`*^9, 3.8940696801284914`*^9}, {3.8940697289480066`*^9, 
  3.894069738597514*^9}, {3.8940697728687963`*^9, 3.894069787339446*^9}, {
  3.894070061530551*^9, 3.89407006168668*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"2ebfc636-2ebe-409c-bb19-68360c41d7b7"],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}]], "Output",
 CellChangeTimes->{3.894069692688238*^9, 3.8940697413780537`*^9, 
  3.894070073146847*^9, 3.894329187486461*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"642e6166-115d-41f4-a237-4e5e9475a4ad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["[Rslt] \[Delta] Gaussian Filtered 2 mode normalized Wigner", \
"Subsubsection",
 CellChangeTimes->{{3.888270174342517*^9, 3.888270209714787*^9}, {
  3.890779185722034*^9, 3.8907792020756955`*^9}, {3.894070167315307*^9, 
  3.8940701676121836`*^9}},ExpressionUUID->"e5b0358a-4774-4f93-9542-\
0a99a38178ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", "\[Pi]", " ", "\[Delta]"}]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{" ", "1"}], 
            RowBox[{"2", " ", "\[Delta]"}]]}], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["x2", "2"], "-", 
            RowBox[{"2", "x", " ", "x2"}], "+", 
            SuperscriptBox["p", "2"], "+", 
            SuperscriptBox["p2", "2"], "-", 
            RowBox[{"2", "p", " ", "p2"}]}], ")"}]}]]}], ")"}], 
      RowBox[{"W2mode", "[", 
       RowBox[{
       "t", ",", "r", ",", "\[Alpha]", ",", "\[Theta]", ",", "x1", ",", "p1", 
        ",", "x", ",", "p", ",", "s"}], "]"}], 
      RowBox[{"\[DifferentialD]", "p"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Wn", "[", 
     RowBox[{
     "\[Delta]_", ",", "t_", ",", "r_", ",", "\[Alpha]_", ",", "\[Theta]_", 
      ",", "x1_", ",", "p1_", ",", "x2_", ",", "p2_", ",", "s_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"s", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[Alpha]", "2"]}]]}]}], ")"}], 
       SuperscriptBox["\[Pi]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}]}]], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["p1", "2"], "+", 
           SuperscriptBox["p2", "2"], "+", 
           SuperscriptBox["x1", "2"], "+", 
           SuperscriptBox["x2", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["t", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x1", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "p2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"x2", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["p1", "2"], "+", 
           SuperscriptBox["p2", "2"], "+", 
           SuperscriptBox["x1", "2"], "+", 
           SuperscriptBox["x2", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["t", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x1", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"p2", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
              RowBox[{"x2", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["p1", "2"], "+", 
            SuperscriptBox["p2", "2"], "+", 
            SuperscriptBox["x1", "2"], "+", 
            SuperscriptBox["x2", "2"], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["t", "2"], " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x2", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"p2", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p1", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"x1", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["p1", "2"], "+", 
            SuperscriptBox["p2", "2"], "+", 
            SuperscriptBox["x1", "2"], "+", 
            SuperscriptBox["x2", "2"], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["t", "2"], " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x2", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"p2", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "t", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p1", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"x1", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s"}]}], ")"}]}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.885858601052227*^9, 3.885858606380412*^9}, {
   3.8858588139095893`*^9, 3.885858921743759*^9}, {3.8858614435946646`*^9, 
   3.8858615101443844`*^9}, {3.885864494562831*^9, 3.8858644992670507`*^9}, {
   3.8858645900818377`*^9, 3.8858645972692986`*^9}, {3.8858647498851285`*^9, 
   3.8858647614477587`*^9}, {3.885865959947753*^9, 3.885865966276557*^9}, {
   3.8860155148324394`*^9, 3.8860155338650274`*^9}, {3.8860160121049967`*^9, 
   3.886016036715518*^9}, {3.8870730780697813`*^9, 3.8870731073924627`*^9}, {
   3.8870780121613855`*^9, 3.887078018770446*^9}, 3.88707814623234*^9, 
   3.887084172918634*^9, {3.8870844772673545`*^9, 3.8870845029117365`*^9}, {
   3.887087543418458*^9, 3.887087562467306*^9}, 3.887859288733055*^9, 
   3.887859327421424*^9, {3.887918667891285*^9, 3.8879187585450087`*^9}, {
   3.8879344546628036`*^9, 3.88793446200392*^9}, {3.888024971140682*^9, 
   3.888024974109414*^9}, {3.8880351735299244`*^9, 3.8880351927984776`*^9}, {
   3.88803523205424*^9, 3.888035303394564*^9}, {3.8882702051862955`*^9, 
   3.888270205562561*^9}, 3.888270254836689*^9, 3.888270333316744*^9, {
   3.888270637086328*^9, 3.8882706645788536`*^9}, {3.8940702093041687`*^9, 
   3.8940702250267253`*^9}, {3.894070257687482*^9, 3.8940702585622854`*^9}, {
   3.8940703590606585`*^9, 
   3.8940704029064274`*^9}},ExpressionUUID->"c969b26b-b0c0-4cdf-abb9-\
9c924ba20e53"],

Cell["\<\
The analysis is common for both dyne detectors up to this point\
\>", "Text",
 CellChangeTimes->{{3.894328908169451*^9, 
  3.894328943433958*^9}},ExpressionUUID->"69cfbe01-909f-4553-90e8-\
095129d9926c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["[Calc] Homodyne heralding", "Subsubsection",
 CellChangeTimes->{{3.8860161116599073`*^9, 3.886016138581475*^9}, {
  3.8882703514718795`*^9, 3.88827036149069*^9}, {3.8943289885108423`*^9, 
  3.8943290198959475`*^9}},ExpressionUUID->"a279bde8-7284-4b79-b748-\
8c7060e64052"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Leaving", " ", "out", " ", "the", " ", "pre", " ", "factor", " ", 
   "\"\<\!\(\*FractionBox[\(1\), \(2\((1 + s\\\ \*SuperscriptBox[\(\
\[ExponentialE]\), \(\(-2\)\\\ \*SuperscriptBox[\(\[Alpha]\), \(2\)]\)])\)\)]\
\)\>\"", "for", " ", "now"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.888039432881243*^9, 3.888039445194897*^9}, {
  3.8880400879066286`*^9, 3.8880400909701505`*^9}, {3.894167185969369*^9, 
  3.894167188300272*^9}},ExpressionUUID->"a0a8d3aa-4db7-43d1-a2a8-\
4213695bedab"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Tracing", " ", "out", " ", "p2", " ", "and", " ", "projecting", " ", "on", 
   " ", "a", " ", "\[CapitalDelta]", " ", "interval", " ", "on", " ", "the", 
   " ", "x2"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.894167249215171*^9, 3.8941672562752852`*^9}, {
  3.8941674174867244`*^9, 
  3.894167453814841*^9}},ExpressionUUID->"197c498f-8b8f-4398-aac0-\
fc051d58dec7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2traced", "  ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"GaussIntR1", "[", 
      RowBox[{"#", ",", " ", "p2"}], "]"}], "]"}], "&"}], "/@", 
   "integralsun"}]}]], "Input",
 CellChangeTimes->{{3.8941671990021667`*^9, 3.8941672145895615`*^9}, {
  3.894167260244502*^9, 3.89416726655061*^9}, {3.894167300322192*^9, 
  3.8941673261798344`*^9}, {3.894167457814747*^9, 3.8941674993552*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"bc9bfdf7-7d2d-440c-adab-f128ec95a2fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         SuperscriptBox["x2", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p1", " ", "t"}], "-", 
            RowBox[{"r", " ", "x2"}], "+", 
            RowBox[{"2", " ", "p1", " ", "t", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
     SqrtBox[
      FractionBox["1", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Delta]"}]}]]]}], 
    SuperscriptBox["\[Pi]", 
     RowBox[{"3", "/", "2"}]]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         SuperscriptBox["x2", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p1", " ", "t"}], "-", 
            RowBox[{"r", " ", "x2"}], "+", 
            RowBox[{"2", " ", "p1", " ", "t", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
     SqrtBox[
      FractionBox["1", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Delta]"}]}]]]}], 
    SuperscriptBox["\[Pi]", 
     RowBox[{"3", "/", "2"}]]], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["\[Pi]", 
      RowBox[{"3", "/", "2"}]]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         SuperscriptBox["x2", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "r"}], " ", "x2"}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"(", 
              RowBox[{"t", "+", 
               RowBox[{"2", " ", "t", " ", "\[Delta]"}]}], ")"}]}]}], ")"}], 
          " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s", " ", 
     SqrtBox[
      FractionBox["1", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Delta]"}]}]]]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["\[Pi]", 
      RowBox[{"3", "/", "2"}]]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         SuperscriptBox["x2", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "r"}], " ", "x2"}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"(", 
              RowBox[{"t", "+", 
               RowBox[{"2", " ", "t", " ", "\[Delta]"}]}], ")"}]}]}], ")"}], 
          " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s", " ", 
     SqrtBox[
      FractionBox["1", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Delta]"}]}]]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.894167271420575*^9, 3.894167308139589*^9, 3.894167380526774*^9, {
   3.8941674746390057`*^9, 3.8941675000229487`*^9}, 3.8943336150667696`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"66ed1e45-f0c5-484b-957a-d0672f58591d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"TruncatedGaussInt", "[", 
      RowBox[{"#", ",", " ", "x2", ",", " ", "\[CapitalDelta]x"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", "\[Delta]", ")"}], ">", "0"}]}], "]"}], "&"}], "/@", 
  "p2traced"}]], "Input",
 CellChangeTimes->{{3.8941675048660455`*^9, 3.894167525628684*^9}, {
   3.8941676208124175`*^9, 3.894167627075078*^9}, {3.8941676612489433`*^9, 
   3.894167680506377*^9}, {3.894168283887044*^9, 3.894168328883032*^9}, {
   3.894168483984805*^9, 3.894168485860441*^9}, {3.8941736077901945`*^9, 
   3.894173620376049*^9}, {3.8941736954099073`*^9, 3.8941737016900377`*^9}, {
   3.894174083754754*^9, 3.894174108768602*^9}, {3.894174243183947*^9, 
   3.8941742577686625`*^9}, 3.894174347246261*^9, {3.8941744316065545`*^9, 
   3.8941744319688773`*^9}, {3.894177109212325*^9, 3.8941772748919144`*^9}, 
   3.8943336230252905`*^9},
 CellLabel->
  "In[113]:=",ExpressionUUID->"7fdbe009-76d3-462d-a3c3-1f6bcb6d021d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "\[Pi]"}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "\[Pi]"}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "\[Pi]"}]], 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erfi", "[", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[CapitalDelta]x"}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "-", 
       RowBox[{"Erfi", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[CapitalDelta]x"}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "\[Pi]"}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8941676833347545`*^9, {3.894168295294668*^9, 3.8941683356986*^9}, 
   3.8941684312149596`*^9, 3.8941684978733425`*^9, {3.8941736959954333`*^9, 
   3.8941737023247585`*^9}, 3.8941741412398524`*^9, 3.894174303746334*^9, 
   3.894174392054127*^9, 3.894174432704861*^9, 3.8941771707960095`*^9, 
   3.894177276664115*^9, 3.894333644207325*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"f0057746-372a-479a-b8a3-d18aab54c4aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"unHOMwoPrefactor", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "\[Pi]"}]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["p1", "2"], "+", 
          SuperscriptBox["x1", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["t", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "\[Pi]"}]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["p1", "2"], "+", 
          SuperscriptBox["x1", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["t", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "\[Pi]"}]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["p1", "2"], "+", 
          SuperscriptBox["x1", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["t", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{"\[CapitalDelta]x", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{"\[CapitalDelta]x", "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "\[Pi]"}]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["p1", "2"], "+", 
          SuperscriptBox["x1", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["t", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.894333650748128*^9, 3.8943337011085277`*^9}, 
   3.894337404233101*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"b5bea1c6-fe93-48e8-815c-679dbceef370"],

Cell[TextData[{
 "Now multiply this by the normalization prefactor: ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"s", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["\[Alpha]", "2"]}]]}]}], ")"}]}]]],
  CellChangeTimes->{{3.888039432881243*^9, 3.888039445194897*^9}, {
   3.8880400879066286`*^9, 3.8880400909701505`*^9}, {3.894167185969369*^9, 
   3.894167188300272*^9}},ExpressionUUID->
  "27daeb16-599a-4874-8e1f-ba13a98ce124"],
 " to give the proper \
\[OpenCurlyDoubleQuote]un\[CloseCurlyDoubleQuote]normalized output of the \
homodyne heralding."
}], "Text",
 CellChangeTimes->{{3.8941748435037465`*^9, 3.894174911384471*^9}, {
  3.8941753997143927`*^9, 
  3.89417541757633*^9}},ExpressionUUID->"63fb9cf1-77fe-4dda-b895-\
2d8db8734cd1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WunHOM", " ", "[", 
   RowBox[{
   "\[CapitalDelta]x_", ",", "\[Delta]_", ",", "t_", ",", "r_", ",", 
    "\[Alpha]_", ",", "\[Theta]_", ",", "x1_", ",", "p1_", ",", "s_"}], "]"}],
   ":=", " ", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", "\[Pi]", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"s", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]]}]}], ")"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["p1", "2"], "+", 
          SuperscriptBox["x1", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["t", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["p1", "2"], "+", 
          SuperscriptBox["x1", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["t", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], "+", 
     RowBox[{"s", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["p1", "2"], "+", 
          SuperscriptBox["x1", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["t", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], "  ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{"\[CapitalDelta]x", "+", 
            RowBox[{"\[ImaginaryI]", " ", "2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{"\[CapitalDelta]x", "-", 
            RowBox[{"\[ImaginaryI]", " ", "2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], 
     "\[IndentingNewLine]", "+", 
     RowBox[{"s", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["p1", "2"], "+", 
          SuperscriptBox["x1", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["t", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], "  ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8941754212304473`*^9, 3.894175469707647*^9}, {
   3.894175615359774*^9, 3.8941757255737815`*^9}, {3.894175803515256*^9, 
   3.894175806379441*^9}, {3.894175926600894*^9, 3.8941759506693287`*^9}, {
   3.8941760173998775`*^9, 3.8941760205702257`*^9}, {3.8941782636834173`*^9, 
   3.8941782640383673`*^9}, 
   3.8943374170501904`*^9},ExpressionUUID->"86ac8b6d-a80d-4f1f-aca7-\
305fe1fc65eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], "+", 
    RowBox[{"s", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], "  ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"\[CapitalDelta]x", "+", 
           RowBox[{"\[ImaginaryI]", " ", "2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"\[CapitalDelta]x", "-", 
           RowBox[{"\[ImaginaryI]", " ", "2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], 
    "\[IndentingNewLine]", "+", 
    RowBox[{"s", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], "  ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], ")"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.89417855921015*^9, 3.8941785623855352`*^9}, 
   3.894337426731592*^9, {3.894337557481471*^9, 3.8943375582513833`*^9}, {
   3.894337625330695*^9, 3.8943376259272084`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"486deb13-1b06-4df2-8435-147d9c34dbed"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x1", "2"], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["t", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
      RowBox[{
       SuperscriptBox["p1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", "t", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "p1"}], "+", "x1"}], ")"}], " ", 
       "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"2", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Delta]"}], 
            "+", 
            RowBox[{
             SqrtBox["2"], " ", "t", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[ImaginaryI]", " ", "p1"}], "+", "x1"}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "t", " ", "x1", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]], "+", 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"2", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Delta]"}], 
            "+", 
            RowBox[{
             SqrtBox["2"], " ", "t", " ", "x1", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "t", " ", "x1", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]]}], ")"}], " ", "s", " ", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"\[CapitalDelta]x", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"2", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Delta]"}], 
            "+", 
            RowBox[{
             SqrtBox["2"], " ", "t", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[ImaginaryI]", " ", "p1"}], "+", "x1"}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "t", " ", "x1", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]], "+", 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"2", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Delta]"}], 
            "+", 
            RowBox[{
             SqrtBox["2"], " ", "t", " ", "x1", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "t", " ", "x1", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]]}], ")"}], " ", "s", " ", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"\[CapitalDelta]x", "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["r", "2"], "+", "\[Delta]"}], ")"}]}], 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "p1", " ", "t", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{
            SqrtBox["2"], " ", "p1", " ", "t", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["r", "2"], "+", "\[Delta]"}], ")"}]}], 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]], "+", 
           RowBox[{
            SqrtBox["2"], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", "p1"}], "+", 
              RowBox[{"2", " ", "x1"}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", "p1", " ", "t", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.894178634372579*^9, 3.894337441740882*^9, {3.894337605469672*^9, 
   3.894337627200301*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"1e0a00cb-b589-4b52-8b0f-523dea694eb4"]
}, Open  ]],

Cell["Now let\[CloseCurlyQuote]s find the success probability for this \
process", "Text",
 CellChangeTimes->{{3.894177294303874*^9, 
  3.894177310176808*^9}},ExpressionUUID->"f6f45787-3dee-4cab-a2f3-\
49f14c172e3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "trace", " ", "out", " ", "mode", " ", "1", "o", " ", "find", " ", "the", 
    " ", "success", " ", "probability"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"pSterms", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"s", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["\[Alpha]", "2"]}]]}]}], ")"}]}]], 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"GaussIntR2", "[", 
         RowBox[{"#", ",", "x1", ",", "p1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Delta]", ">", "0"}], ",", 
          RowBox[{
           RowBox[{
            SuperscriptBox["r", "2"], "+", 
            SuperscriptBox["t", "2"]}], "==", "1"}]}], "}"}]}], "]"}]}], 
     "&"}], "/@", "unHOMwoPrefactor"}]}]}]], "Input",
 CellChangeTimes->{{3.894177316460948*^9, 3.8941774302312765`*^9}, {
   3.8941774709883385`*^9, 3.894177492699088*^9}, {3.8941776742649994`*^9, 
   3.8941776958219795`*^9}, {3.894178017310413*^9, 3.8941780196535234`*^9}, 
   3.8941787696574073`*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"a3b7cca0-0961-4a45-90bf-57b360f8c703"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"\[CapitalDelta]x", "-", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"\[CapitalDelta]x", "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"\[CapitalDelta]x", "-", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"\[CapitalDelta]x", "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["\[Alpha]", "2"]}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["\[Alpha]", "2"]}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.894177432308072*^9, {3.8941774746158667`*^9, 3.8941774959850144`*^9}, 
   3.8941776965818872`*^9, 3.8941780221944904`*^9, 3.8941787800068307`*^9, 
   3.894337642574341*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"34d5a55b-923d-437c-bea5-13bc284305cf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"\[CapitalDelta]x", "-", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"\[CapitalDelta]x", "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], ",", 
   "\[IndentingNewLine]", 
   FractionBox[
    RowBox[{
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"\[CapitalDelta]x", "-", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"\[CapitalDelta]x", "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["\[Alpha]", "2"]}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["\[Alpha]", "2"]}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.894178031964856*^9, 3.8941781013919497`*^9}, {
  3.894178784409412*^9, 3.8941787916403437`*^9}, {3.8943376802335267`*^9, 
  3.89433768920168*^9}},ExpressionUUID->"58a22dea-3cfb-43e9-8b26-\
863078b7208b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PsHOM", "[", 
    RowBox[{
    "\[CapitalDelta]x_", ",", "\[Delta]_", ",", "r_", ",", "\[Alpha]_", ",", 
     "\[Theta]_", ",", "s_"}], "]"}], ":=", " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "  ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]HOM", "[", "\[Eta]_", "]"}], ":=", 
   FractionBox[
    RowBox[{"1", "-", "\[Eta]"}], 
    RowBox[{"2", " ", "\[Eta]"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WnHOM", "[", 
    RowBox[{
    "\[CapitalDelta]x_", ",", "\[Delta]_", ",", "t_", ",", "r_", ",", 
     "\[Alpha]_", ",", "\[Theta]_", ",", "x1_", ",", "p1_", ",", "s_"}], 
    "]"}], ":=", 
   RowBox[{"Re", "[", 
    FractionBox[
     RowBox[{"WnHOM", "[", 
      RowBox[{
      "\[CapitalDelta]x", ",", "\[Delta]", ",", "t", ",", "r", ",", 
       "\[Alpha]", ",", "\[Theta]", ",", "x1", ",", "p1", ",", "s"}], "]"}], 
     RowBox[{"PsHOM", "[", 
      RowBox[{
      "\[CapitalDelta]x", ",", "\[Delta]", ",", "r", ",", "\[Alpha]", ",", 
       "\[Theta]", ",", "s"}], "]"}]], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8941775124445853`*^9, 3.8941775176617904`*^9}, {
   3.89417773878349*^9, 3.894177745228218*^9}, {3.894178149976988*^9, 
   3.8941781888317194`*^9}, {3.8941782228934703`*^9, 3.8941782525370035`*^9}, 
   3.8941787950064907`*^9, 3.894179262328591*^9, {3.894330925168218*^9, 
   3.8943309452776628`*^9}, {3.8943369726295195`*^9, 3.894336977489505*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"0d3ffcaf-3974-467e-b399-a6185a1a1372"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PsHOM", "[", 
  RowBox[{"2", ",", 
   RowBox[{"\[Delta]HOM", "[", "0.85", "]"}], ",", 
   SqrtBox["0.25"], ",", "2", ",", "0", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8941782760168514`*^9, 3.8941783340200186`*^9}, {
   3.8941783715441685`*^9, 3.894178380103055*^9}, {3.894179213224394*^9, 
   3.8941792188064528`*^9}, 3.8943369885782385`*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"60b1d614-5c9c-4c6a-8d9f-5c695f3d0618"],

Cell[BoxData[
 RowBox[{"0.808050138053345`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.894178364279525*^9, 3.894178380689036*^9}, 
   3.894178802827805*^9, 3.8941790841529503`*^9, 3.89417921941558*^9, 
   3.8943309552251534`*^9, 3.894336993071446*^9, 3.894337715186959*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"786620e8-3907-4ead-9bd6-09a7df6d138b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["[Calc] Heterodyne heralding", "Subsubsection",
 CellChangeTimes->{{3.8860161116599073`*^9, 3.886016138581475*^9}, {
  3.8882703514718795`*^9, 3.88827036149069*^9}, {3.8943289885108423`*^9, 
  3.8943290198959475`*^9}, {3.8943292146510477`*^9, 
  3.894329216525174*^9}},ExpressionUUID->"d1604977-c799-483f-b99f-\
26e75026fb24"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Leaving", " ", "out", " ", "the", " ", "pre", " ", "factor", " ", 
   "\"\<\!\(\*FractionBox[\(1\), \(2\((1 + s\\\ \*SuperscriptBox[\(\
\[ExponentialE]\), \(\(-2\)\\\ \*SuperscriptBox[\(\[Alpha]\), \(2\)]\)])\)\)]\
\)\>\"", "for", " ", "now"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.888039432881243*^9, 3.888039445194897*^9}, {
  3.8880400879066286`*^9, 3.8880400909701505`*^9}, {3.894167185969369*^9, 
  3.894167188300272*^9}},ExpressionUUID->"b6afe81f-21ea-4d0f-86f3-\
32c6705b03c7"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Projecting", " ", "on", " ", "a", " ", "\[CapitalDelta]p", " ", "interval",
    " ", "on", " ", "the", " ", "p2"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.894167249215171*^9, 3.8941672562752852`*^9}, {
  3.8941674174867244`*^9, 3.894167453814841*^9}, {3.8943292240509176`*^9, 
  3.8943292364394016`*^9}},ExpressionUUID->"3ebf9c34-d2e1-48d8-9a18-\
93b3f0859520"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"projectp2", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"TruncatedGaussInt", "[", 
       RowBox[{"#", ",", " ", "p2", ",", " ", "\[CapitalDelta]p"}], "]"}], 
      ",", 
      RowBox[{
       RowBox[{"(", "\[Delta]", ")"}], ">", "0"}]}], "]"}], "&"}], "/@", 
   "integralsun"}]}]], "Input",
 CellChangeTimes->{{3.8941671990021667`*^9, 3.8941672145895615`*^9}, {
   3.894167260244502*^9, 3.89416726655061*^9}, {3.894167300322192*^9, 
   3.8941673261798344`*^9}, {3.894167457814747*^9, 3.8941674993552*^9}, {
   3.894329243733321*^9, 3.894329277328678*^9}, {3.8943293133628187`*^9, 
   3.8943293150041494`*^9}, 3.894329345637066*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"57e3e69b-6122-4b8d-b2af-ebdbf861f949"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Pi]", 
       RowBox[{"3", "/", "2"}]], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Delta]"}]}]]}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         SuperscriptBox["x2", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p1", " ", "t"}], "-", 
            RowBox[{"r", " ", "x2"}], "+", 
            RowBox[{"2", " ", "p1", " ", "t", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Pi]", 
       RowBox[{"3", "/", "2"}]], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Delta]"}]}]]}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         SuperscriptBox["x2", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p1", " ", "t"}], "-", 
            RowBox[{"r", " ", "x2"}], "+", 
            RowBox[{"2", " ", "p1", " ", "t", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Pi]", 
       RowBox[{"3", "/", "2"}]], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Delta]"}]}]]}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         SuperscriptBox["x2", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "r"}], " ", "x2"}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"(", 
              RowBox[{"t", "+", 
               RowBox[{"2", " ", "t", " ", "\[Delta]"}]}], ")"}]}]}], ")"}], 
          " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Erfi", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[CapitalDelta]p"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Pi]", 
       RowBox[{"3", "/", "2"}]], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Delta]"}]}]]}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         SuperscriptBox["x2", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "r"}], " ", "x2"}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"(", 
              RowBox[{"t", "+", 
               RowBox[{"2", " ", "t", " ", "\[Delta]"}]}], ")"}]}]}], ")"}], 
          " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8943293016124372`*^9, {3.8943293362516193`*^9, 3.8943293461410265`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"6a60cc0a-2e7d-4265-9dc5-261f3b86ff51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unHETwoPrefactor", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"TruncatedGaussInt", "[", 
       RowBox[{"#", ",", " ", "x2", ",", " ", "\[CapitalDelta]x"}], "]"}], 
      ",", 
      RowBox[{
       RowBox[{"(", "\[Delta]", ")"}], ">", "0"}]}], "]"}], "&"}], "/@", 
   "projectp2"}]}]], "Input",
 CellChangeTimes->{{3.8943293715827045`*^9, 3.894329408508173*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"69a08bb5-e9e7-4e2c-8b6d-37b57a69ba87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", "\[Pi]"}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", "\[Pi]"}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", "\[Pi]"}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erfi", "[", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[CapitalDelta]x"}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "-", 
       RowBox[{"Erfi", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[CapitalDelta]x"}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]p", "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], "+", 
       RowBox[{"Erfi", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[CapitalDelta]p"}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", "\[Pi]"}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p1", "2"], "+", 
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8943294284766836`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"a6bbafb0-687b-4651-a2ad-3ff6da0ee3fa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"unHETwoPrefactor", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", "\[Pi]"}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["p1", "2"], "+", 
           SuperscriptBox["x1", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["t", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]p", "-", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]p", "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "-", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", "\[Pi]"}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["p1", "2"], "+", 
           SuperscriptBox["x1", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["t", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]p", "-", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]p", "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "-", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", "\[Pi]"}]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["p1", "2"], "+", 
          SuperscriptBox["x1", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["t", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{"\[CapitalDelta]x", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", "  ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]p", "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{"\[CapitalDelta]p", "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", "\[Pi]"}]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["p1", "2"], "+", 
          SuperscriptBox["x1", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["p1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x1", "2"], " ", "\[Delta]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["t", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Delta]"}]}]]}]], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]p", "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]p", "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8943297562030067`*^9, 3.8943297755834756`*^9}, {
  3.894329892830308*^9, 3.894329894060031*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"7357f31b-5134-4e76-ad09-1a048d9d66e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"unHETwoPrefactor", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Delta]", ">", "0"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        SuperscriptBox["t", "2"]}], "==", "1"}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8943296250733075`*^9, 3.894329652672188*^9}, {
   3.894329698938317*^9, 3.89432970585376*^9}, 3.8943297489096546`*^9, {
   3.8943301245043235`*^9, 3.894330184323202*^9}, {3.8943302345119424`*^9, 
   3.8943302352589483`*^9}, {3.894330307482752*^9, 3.89433032043641*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"3fb6c624-3929-4f20-af5e-8a75f038dfa9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", "\[Pi]"}]], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["p1", "2"]}], "-", 
      SuperscriptBox["x1", "2"], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["t", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]x", "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]x", "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]p", "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]p", "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", "\[Pi]"}]], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["p1", "2"]}], "-", 
      SuperscriptBox["x1", "2"], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["t", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]x", "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]x", "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]p", "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]p", "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", "\[Pi]"}]], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["p1", "2"]}], "-", 
      SuperscriptBox["x1", "2"], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["t", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "-", 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]p", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]p", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]x", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]x", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", "\[Pi]"}]], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["p1", "2"]}], "-", 
      SuperscriptBox["x1", "2"], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["t", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]p", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]p", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]x", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"\[CapitalDelta]x", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{
  3.8943301488128514`*^9, {3.89433019841052*^9, 3.8943302229017377`*^9}, {
   3.894330304509848*^9, 3.8943303252284355`*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"866577a2-d8ca-4a50-b9ad-cf26d8a78ab9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WunHET", "[", 
    RowBox[{
    "\[CapitalDelta]x_", ",", "\[CapitalDelta]p_", ",", "\[Delta]_", ",", 
     "t_", ",", "r_", ",", "\[Alpha]_", ",", "\[Theta]_", ",", "x1_", ",", 
     "p1_", ",", "s_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"8", "\[Pi]", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"s", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[Alpha]", "2"]}]]}]}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["p1", "2"]}], "-", 
           SuperscriptBox["x1", "2"], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["t", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], " ", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["p1", "2"]}], "-", 
           SuperscriptBox["x1", "2"], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["t", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]]}], " ", ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]p", "-", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]p", "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "-", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], "+", 
      RowBox[{"s", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["p1", "2"]}], "-", 
           SuperscriptBox["x1", "2"], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], " ", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["p1", "2"]}], "-", 
           SuperscriptBox["x1", "2"], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]]}], " ", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]p", "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]p", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.894330362849208*^9, 3.8943305242502995`*^9}, {
  3.8943305598124743`*^9, 3.8943305709188194`*^9}, {3.8943309808396387`*^9, 
  3.8943309868030047`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"b97433fc-57e5-4876-ab65-0a4b7e6f25bf"],

Cell["Now let\[CloseCurlyQuote]s find the success probability for this \
process", "Text",
 CellChangeTimes->{{3.894177294303874*^9, 
  3.894177310176808*^9}},ExpressionUUID->"be9a425c-8932-428c-9a0c-\
e22105a0227e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "trace", " ", "out", " ", "mode", " ", "1", "o", " ", "find", " ", "the", 
    " ", "success", " ", "probability"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"pStermsHET", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"s", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["\[Alpha]", "2"]}]]}]}], ")"}]}]], 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"GaussIntR2", "[", 
         RowBox[{"#", ",", "x1", ",", "p1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Delta]", ">", "0"}], ",", 
          RowBox[{
           RowBox[{
            SuperscriptBox["r", "2"], "+", 
            SuperscriptBox["t", "2"]}], "==", "1"}]}], "}"}]}], "]"}]}], 
     "&"}], "/@", "unHETwoPrefactor"}]}]}]], "Input",
 CellChangeTimes->{{3.894177316460948*^9, 3.8941774302312765`*^9}, {
   3.8941774709883385`*^9, 3.894177492699088*^9}, {3.8941776742649994`*^9, 
   3.8941776958219795`*^9}, {3.894178017310413*^9, 3.8941780196535234`*^9}, 
   3.8941787696574073`*^9, {3.894329523580247*^9, 3.8943295279624577`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"7e7999da-ba42-4a8a-94bf-055cb9cae89b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["\[Alpha]", "2"]}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["\[Alpha]", "2"]}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8943295341942515`*^9, 3.8943297803585353`*^9, 
  3.894329898725686*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"5af0f178-8748-42a8-b03c-22d82a3c18ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Total", "[", "pStermsHET", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.894329916953039*^9, 3.894329966379385*^9}, 
   3.8943300126767883`*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"e84fb634-dbb8-4e83-8453-69f16d02427d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["\[Alpha]", "2"]}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]p", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"\[CapitalDelta]x", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.894329943188019*^9, 3.8943299668316135`*^9}, 
   3.894330014252736*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"77ba6706-ccea-4e89-abe6-9a0601cb3320"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PsHET", "[", 
    RowBox[{
    "\[CapitalDelta]x_", ",", "\[CapitalDelta]p_", ",", "\[Delta]_", ",", 
     "r_", ",", "\[Alpha]_", ",", "\[Theta]_", ",", "s_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]p", "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]p", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]p", "-", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]p", "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "-", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]HET", "[", "\[Eta]_", "]"}], ":=", 
    FractionBox[
     RowBox[{"2", "-", "\[Eta]"}], 
     RowBox[{"2", " ", "\[Eta]"}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WnHET", "[", 
    RowBox[{
    "\[CapitalDelta]x_", ",", "\[CapitalDelta]p_", ",", "\[Delta]_", ",", 
     "t_", ",", "r_", ",", "\[Alpha]_", ",", "\[Theta]_", ",", "x1_", ",", 
     "p1_", ",", "s_"}], "]"}], ":=", 
   RowBox[{"Re", "[", 
    FractionBox[
     RowBox[{"WnHET", "[", 
      RowBox[{
      "\[CapitalDelta]x", ",", "\[CapitalDelta]p", ",", "\[Delta]", ",", "t", 
       ",", "r", ",", "\[Alpha]", ",", "\[Theta]", ",", "x1", ",", "p1", ",", 
       "s"}], "]"}], 
     RowBox[{"PsHET", "[", 
      RowBox[{
      "\[CapitalDelta]x", ",", "\[CapitalDelta]p", ",", "\[Delta]", ",", "r", 
       ",", "\[Alpha]", ",", "\[Theta]", ",", "s"}], "]"}]], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.894330022203002*^9, 3.8943300474245205`*^9}, {
  3.894330695497026*^9, 3.8943307148828135`*^9}, {3.8943308347349515`*^9, 
  3.8943309062754393`*^9}, {3.894340330530213*^9, 3.894340347401931*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"65846ba2-5b2f-4f26-96c7-c1ad8bcbf4fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["[Calc] Threshold detection of zero", "Subsubsection",
 CellChangeTimes->{{3.89433101072392*^9, 
  3.8943310396404467`*^9}},ExpressionUUID->"ffaffa14-a861-430e-80ea-\
51cd1ab22264"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"For", " ", "threshold"}], " ", "-", " ", 
   RowBox[{"use", " ", "calcs", " ", "from", " ", "Wigner", " ", "Cat"}], " ",
    "-", 
   RowBox[{
    RowBox[{"v2", ".", "nb"}], " ", "and", " ", 
    RowBox[{"iPad", ":", " ", 
     RowBox[{
     "Cat", " ", "via", " ", "noisy", " ", "Threshold", " ", "ZPS"}]}]}]}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.88792499918423*^9, 3.887925024652604*^9}, {
  3.8879259102374115`*^9, 
  3.887925933036321*^9}},ExpressionUUID->"21da4020-9b10-4d41-9dd0-\
9745dbdcf0a0"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["p", "2"]}], "-", 
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Alpha]", "2"]}], "+", 
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"p", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], 
  "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.8858495712551374`*^9, 3.885863443295351*^9, 3.885863500549529*^9, 
   3.885863620103553*^9, 3.885863742355462*^9, 3.8858640410613513`*^9, {
   3.8862707820095177`*^9, 3.8862708114531307`*^9}, 3.887063268260765*^9, 
   3.887066201235404*^9, 3.8870700127644434`*^9, {3.8940654865416145`*^9, 
   3.894065490573142*^9}, 3.8940655282744894`*^9, 3.894065797187976*^9, 
   3.8941669400070276`*^9, {3.894336003060384*^9, 3.8943360226360517`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"ace26bdc-acaa-4911-acb9-87f12cf67747"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["p", "2"]}], "-", 
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Alpha]", "2"]}], "-", 
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"p", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], 
  "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.8858495712551374`*^9, 3.885863443295351*^9, 3.885863500549529*^9, 
   3.885863620103553*^9, 3.885863742355462*^9, 3.8858640410613513`*^9, {
   3.8862707820095177`*^9, 3.8862708114531307`*^9}, 3.887063268260765*^9, 
   3.887066201235404*^9, 3.8870700127644434`*^9, {3.8940654865416145`*^9, 
   3.894065490573142*^9}, 3.8940655282744894`*^9, 3.894065797187976*^9, 
   3.8941669400070276`*^9, {3.894336003060384*^9, 3.8943360258266783`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"7a98e96a-5300-4ef4-a3fc-c7d4d01e80d3"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["p", "2"]}], "-", 
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], 
  "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.8858495712551374`*^9, 3.885863443295351*^9, 3.885863500549529*^9, 
   3.885863620103553*^9, 3.885863742355462*^9, 3.8858640410613513`*^9, {
   3.8862707820095177`*^9, 3.8862708114531307`*^9}, 3.887063268260765*^9, 
   3.887066201235404*^9, 3.8870700127644434`*^9, {3.8940654865416145`*^9, 
   3.894065490573142*^9}, 3.8940655282744894`*^9, 3.894065797187976*^9, 
   3.8941669400070276`*^9, {3.894336003060384*^9, 3.894336028729819*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"15b1d1db-82fd-43df-a2cd-ffaa363789d4"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["p", "2"]}], "-", 
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], 
  "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.8858495712551374`*^9, 3.885863443295351*^9, 3.885863500549529*^9, 
   3.885863620103553*^9, 3.885863742355462*^9, 3.8858640410613513`*^9, {
   3.8862707820095177`*^9, 3.8862708114531307`*^9}, 3.887063268260765*^9, 
   3.887066201235404*^9, 3.8870700127644434`*^9, {3.8940654865416145`*^9, 
   3.894065490573142*^9}, 3.8940655282744894`*^9, 3.894065797187976*^9, 
   3.8941669400070276`*^9, {3.894336003060384*^9, 3.8943360315555277`*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"de0015f4-5a26-47be-acfa-ed5a60008575"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"V", ",", "Vfunc", ",", "v"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vfunc", "[", 
    RowBox[{"\[Mu]_", ",", "s_", ",", "\[Eta]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SuperscriptBox["t", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], " "}], 
     RowBox[{"2", "\[Pi]"}]], 
    SuperscriptBox["s", "\[Mu]"], 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"Cosh", "[", 
         RowBox[{
          SuperscriptBox["\[Alpha]", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", "\[Eta]"}], " ", ")"}], 
          SuperscriptBox["r", "2"]}], "]"}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "\[Mu]"], 
         RowBox[{"Sinh", "[", 
          RowBox[{
           SuperscriptBox["\[Alpha]", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", "\[Eta]"}], " ", ")"}], 
           SuperscriptBox["r", "2"]}], "]"}]}]}], "]"}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         SuperscriptBox["\[Alpha]", "2"], 
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           RowBox[{"\[Eta]", " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "+", 
       RowBox[{"s", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Alpha]", "2"]}], 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", 
            RowBox[{"\[Eta]", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}]}]]}]}]], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", 
     RowBox[{"s_", ",", "\[Eta]_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Vfunc", "[", 
       RowBox[{"0", ",", "s", ",", "\[Eta]"}], "]"}], ",", 
      RowBox[{"Vfunc", "[", 
       RowBox[{"0", ",", "s", ",", "\[Eta]"}], "]"}], ",", 
      RowBox[{"Vfunc", "[", 
       RowBox[{"1", ",", "s", ",", "\[Eta]"}], "]"}], ",", 
      RowBox[{"Vfunc", "[", 
       RowBox[{"1", ",", "s", ",", "\[Eta]"}], "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p1", "2"]}], "-", 
       SuperscriptBox["x1", "2"], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], ",", 
     "\[IndentingNewLine]", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p1", "2"]}], "-", 
       SuperscriptBox["x1", "2"], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "-", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], ",", 
     "\[IndentingNewLine]", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p1", "2"]}], "-", 
       SuperscriptBox["x1", "2"], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], ",", 
     "\[IndentingNewLine]", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p1", "2"]}], "-", 
       SuperscriptBox["x1", "2"], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.887925105608361*^9, 3.887925151447194*^9}, {
   3.8879257528292875`*^9, 3.8879258963445845`*^9}, {3.8879259375499606`*^9, 
   3.8879259486860743`*^9}, {3.8879259868054523`*^9, 
   3.8879259973005843`*^9}, {3.887926035721075*^9, 3.88792604129786*^9}, {
   3.8879264408235717`*^9, 3.8879264988511696`*^9}, {3.8879273701641397`*^9, 
   3.8879273759986167`*^9}, {3.887927457046775*^9, 3.887927463819602*^9}, {
   3.8879274978295*^9, 3.8879275098719077`*^9}, 3.888281855343361*^9, {
   3.888282010107981*^9, 3.8882820131055737`*^9}, {3.8882820440035996`*^9, 
   3.8882820932368836`*^9}, {3.8882824731784754`*^9, 
   3.8882825914127913`*^9}, {3.8882826572059665`*^9, 
   3.8882826832040234`*^9}, {3.8883808780117135`*^9, 3.88838088451892*^9}, {
   3.8943317837190576`*^9, 3.8943320078537693`*^9}, {3.8943321711674733`*^9, 
   3.8943321744317827`*^9}, {3.8943323956836257`*^9, 
   3.8943324176988363`*^9}, {3.8943324493625603`*^9, 3.8943324601317964`*^9}, 
   3.8943327292710123`*^9, {3.8943342560859184`*^9, 3.89433429313764*^9}, {
   3.8943343468004074`*^9, 3.894334390402252*^9}, {3.894336177961755*^9, 
   3.894336206963029*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"1f71c821-7c5d-464c-9e8c-43347147a010"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{"GaussIntR2", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"V", "[", 
         RowBox[{"s", ",", "\[Eta]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], 
       RowBox[{"v", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "x1", ",", "p1"}], "]"}]}], "/.", 
   RowBox[{
    SuperscriptBox["t", "2"], "->", 
    RowBox[{"1", "-", 
     SuperscriptBox["r", "2"]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8943327466852665`*^9, 3.894332762479122*^9}, {
  3.894332897055169*^9, 3.8943329554757404`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"cf89fbf4-239e-47aa-8896-f92516f6933b"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.894332769095702*^9, {3.8943329212267275`*^9, 3.894332956284539*^9}, 
   3.8943344603020315`*^9, 3.8943362194920807`*^9, 3.8943362507705493`*^9, 
   3.8943363880535135`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"a065a372-5c58-4cb5-a64d-8a954d8d3d18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "4"], 
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", 
     RowBox[{"s", ",", "\[Eta]"}], "]"}], "[", 
    RowBox[{"[", "i", "]"}], "]"}], 
   RowBox[{"v", "[", 
    RowBox[{"[", "i", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8943363488852324`*^9, 3.8943363582609205`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"5af4c081-62da-46c9-8840-6a8904d29f66"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p1", "2"]}], "-", 
     SuperscriptBox["x1", "2"], "-", 
     RowBox[{
      SuperscriptBox["t", "2"], " ", 
      SuperscriptBox["\[Alpha]", "2"]}], "-", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox["\[Alpha]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}], "-", 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Alpha]", "2"]}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
       "s"}]}], ")"}]}]], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p1", "2"]}], "-", 
     SuperscriptBox["x1", "2"], "-", 
     RowBox[{
      SuperscriptBox["t", "2"], " ", 
      SuperscriptBox["\[Alpha]", "2"]}], "-", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox["\[Alpha]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Alpha]", "2"]}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
       "s"}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["p1", "2"]}], "-", 
      SuperscriptBox["x1", "2"], "+", 
      RowBox[{
       SuperscriptBox["t", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], " ", "s"}], 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Alpha]", "2"]}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
       "s"}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["p1", "2"]}], "-", 
      SuperscriptBox["x1", "2"], "+", 
      RowBox[{
       SuperscriptBox["t", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], " ", "s"}], 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Alpha]", "2"]}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
       "s"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.8943363592985687`*^9, 3.894336389555859*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"73061138-28ce-4a8b-a795-3b5bbef6ec3f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WnTHR", "[", 
    RowBox[{
    "\[Eta]_", ",", "t_", ",", "r_", ",", "\[Alpha]_", ",", "\[Theta]_", ",", 
     "x1_", ",", "p1_", ",", "s_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p1", "2"]}], "-", 
       SuperscriptBox["x1", "2"], "-", 
       RowBox[{
        SuperscriptBox["t", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "-", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Alpha]", "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
         "s"}]}], ")"}]}]], "+", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p1", "2"]}], "-", 
       SuperscriptBox["x1", "2"], "-", 
       RowBox[{
        SuperscriptBox["t", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "-", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Alpha]", "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
         "s"}]}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["p1", "2"]}], "-", 
        SuperscriptBox["x1", "2"], "+", 
        RowBox[{
         SuperscriptBox["t", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], " ", "s"}], 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Alpha]", "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
         "s"}]}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["p1", "2"]}], "-", 
        SuperscriptBox["x1", "2"], "+", 
        RowBox[{
         SuperscriptBox["t", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", "p1", " ", "t", " ", "\[Alpha]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", "t", " ", "x1", " ", "\[Alpha]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], " ", "s"}], 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Alpha]", "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
         "s"}]}], ")"}]}]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.894332787021457*^9, 3.8943327894795647`*^9}, {
  3.894332837606807*^9, 3.894332854573711*^9}, {3.8943363761155443`*^9, 
  3.8943363976489086`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"0fec70ee-0e18-4ee0-a92c-a3b7ce3ad225"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Simplify", "[", 
   RowBox[{"2", "\[Pi]", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "4"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"V", "[", 
          RowBox[{"s", ",", "\[Eta]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], 
        RowBox[{
         RowBox[{"V", "[", 
          RowBox[{"s", ",", "\[Eta]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}], 
        RowBox[{"GaussIntR2", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"[", "i", "]"}], "]"}], 
           RowBox[{"v", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ",", "x1", ",", "p1"}], "]"}]}],
        ")"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.887925105608361*^9, 3.887925151447194*^9}, {
   3.8879257528292875`*^9, 3.8879258963445845`*^9}, {3.8879259375499606`*^9, 
   3.8879259486860743`*^9}, {3.8879259868054523`*^9, 
   3.8879259973005843`*^9}, {3.887926035721075*^9, 3.88792604129786*^9}, {
   3.8879264408235717`*^9, 3.8879264988511696`*^9}, {3.8879273701641397`*^9, 
   3.8879273759986167`*^9}, {3.887927457046775*^9, 3.887927463819602*^9}, {
   3.8879274978295*^9, 3.8879275098719077`*^9}, 3.888281855343361*^9, {
   3.888282010107981*^9, 3.8882820131055737`*^9}, {3.8882820440035996`*^9, 
   3.8882820932368836`*^9}, {3.8882824731784754`*^9, 
   3.8882825914127913`*^9}, {3.8882826572059665`*^9, 
   3.8882826832040234`*^9}, {3.8883808780117135`*^9, 3.88838088451892*^9}, {
   3.8943317837190576`*^9, 3.8943320078537693`*^9}, {3.8943321711674733`*^9, 
   3.8943321744317827`*^9}, {3.8943323956836257`*^9, 
   3.8943324176988363`*^9}, {3.8943324493625603`*^9, 3.8943324601317964`*^9}, 
   3.8943327292710123`*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"fb01f5e2-aa1b-4a78-b3df-136c1975205e"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["r", "2"], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["t", "2"]}]}], ")"}], " ", 
     SuperscriptBox["\[Alpha]", "2"]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", 
       SuperscriptBox["t", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"]}]], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"8", " ", 
       SuperscriptBox["t", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"]}]], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["t", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], " ", 
      "s"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["t", "2"], "+", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["t", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], " ", 
      SuperscriptBox["s", "2"]}]}], ")"}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
       "s"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.8943319443879337`*^9, 3.894332008333581*^9}, {
   3.894332436778435*^9, 3.894332461224635*^9}, 3.8943364034443483`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"0d5d06d4-95fa-4629-b0b7-3a1a55447ffa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["r", "2"], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["t", "2"]}]}], ")"}], " ", 
       SuperscriptBox["\[Alpha]", "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", 
         SuperscriptBox["t", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"8", " ", 
         SuperscriptBox["t", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             SuperscriptBox["t", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], " ", 
        "s"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["t", "2"], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], " ", 
        SuperscriptBox["s", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["t", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], " ", 
        SuperscriptBox["s", "2"]}]}], ")"}]}], "/.", 
    RowBox[{
     SuperscriptBox["t", "2"], "->", 
     RowBox[{"1", "-", 
      SuperscriptBox["r", "2"]}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["s", "2"], "==", "1"}], ",", 
     RowBox[{"0", "<=", "r", "<=", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8943320378950715`*^9, 3.894332144032381*^9}, {
   3.8943322092346077`*^9, 3.8943322514247203`*^9}, {3.894332287265502*^9, 
   3.89433231790416*^9}, 3.8943324767367373`*^9, 3.8943364197881885`*^9},
 NumberMarks->False,
 CellLabel->"In[37]:=",ExpressionUUID->"d1601650-1465-4c82-98b8-c17c505105ed"],

Cell[BoxData[
 RowBox[{"1", "+", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "r"}], ")"}], " ", 
    SuperscriptBox["\[Alpha]", "2"]}]], "+", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"4", " ", 
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["\[Alpha]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]], "+", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"4", " ", 
    SuperscriptBox["\[Alpha]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Alpha]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
   "s"}]}]], "Output",
 CellChangeTimes->{{3.894332047345375*^9, 3.894332111747532*^9}, 
   3.8943321461862803`*^9, {3.894332223739682*^9, 3.8943322526849194`*^9}, {
   3.8943322925983157`*^9, 3.894332319149437*^9}, 3.894332478149413*^9, 
   3.894336422239705*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"dc2dfe84-5737-4e14-867f-f880295acbb2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"purityTHR", "[", 
     RowBox[{
     "r_", ",", "\[Alpha]_", ",", "\[Theta]_", ",", "\[Eta]_", ",", "s_"}], 
     "]"}], ":=", 
    FractionBox[
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
       "s"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Alpha]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{
               SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
          "s"}]}], ")"}], "2"]}]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Directly", " ", "taken", " ", "from", " ", 
    RowBox[{"calcs", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PsTHR", "[", 
    RowBox[{"r_", ",", "\[Alpha]_", ",", "\[Eta]_", ",", "s_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Eta]", " ", 
          SuperscriptBox["r", "2"]}]}], ")"}]}], "]"}], "+", 
     RowBox[{"s", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Alpha]", "2"]}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"\[Eta]", " ", 
           SuperscriptBox["r", "2"]}]}], ")"}]}], "]"}]}]}], 
    RowBox[{
     RowBox[{"Exp", "[", 
      SuperscriptBox["\[Alpha]", "2"], "]"}], "+", 
     RowBox[{"s", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        SuperscriptBox["\[Alpha]", "2"]}], "]"}]}]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.894332324955803*^9, 3.8943323551722775`*^9}, {
   3.894332615293933*^9, 3.8943326160243387`*^9}, 3.8943364305096407`*^9, {
   3.8943381857506943`*^9, 3.894338227348341*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"60596f85-ff4e-4c03-8cbf-ad0b26e354dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"2", "\[Pi]", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"V", "[", 
         RowBox[{"s", ",", "\[Eta]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], 
       RowBox[{
        RowBox[{"V", "[", 
         RowBox[{"s", ",", "1"}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}], 
       RowBox[{"GaussIntR2", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "i", "]"}], "]"}], 
          RowBox[{"v", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ",", "x1", ",", "p1"}], "]"}]}], 
      ")"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8943320354383726`*^9, 3.8943320354383726`*^9}, {
  3.894332490226504*^9, 3.894332493618379*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"79b05c8f-c8f2-40bf-9de2-61087ce567c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["\[Alpha]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["t", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"8", " ", 
        SuperscriptBox["t", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"6", " ", 
         SuperscriptBox["t", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            SuperscriptBox["t", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["r", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], " ", 
       "s"}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["t", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["r", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["t", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["r", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], " ", 
       SuperscriptBox["s", "2"]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["r", "2"]}], ")"}], " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], "+", "s"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], "+", "s"}], 
     ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8943325004807167`*^9, 3.8943364465670567`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"054601dd-650a-494d-80c6-126fd052efb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["t", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"8", " ", 
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"6", " ", 
           SuperscriptBox["t", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SuperscriptBox["t", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["r", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], " ",
          "s"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["t", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["r", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["t", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["r", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], " ", 
         SuperscriptBox["s", "2"]}]}], ")"}]}], ")"}], "/.", 
    RowBox[{
     SuperscriptBox["t", "2"], "->", 
     RowBox[{"1", "-", 
      SuperscriptBox["r", "2"]}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["s", "2"], "==", "1"}], ",", 
     RowBox[{"0", "<=", "r", "<=", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.894332545798525*^9, 3.894332562079112*^9}, 
   3.8943364613322325`*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"b57ac371-2331-4cc9-8445-90d447e7898c"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["\[Alpha]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "\[Eta]"}], ")"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", 
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox["\[Alpha]", "2"]}]], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", 
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]"}]]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Alpha]", "2"]}]], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"4", " ", 
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox["\[Alpha]", "2"]}]], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["r", "2"]}], ")"}], " ", 
       SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8943325628398423`*^9, 3.894336463692665*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"b20a47f7-aaaa-4579-9300-2734d5b77989"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fidelityZPSTHR", "[", 
    RowBox[{
    "r_", ",", "\[Alpha]_", ",", "\[Theta]_", ",", "\[Eta]_", ",", "s_"}], 
    "]"}], ":=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "\[Eta]"}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", 
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}]}], 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], "+", "s"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", "\[Eta]"}]}], ")"}]}]], "+", 
        "s"}], ")"}]}], ")"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.8943325871416454`*^9, 3.8943326986677933`*^9}, {
  3.894336474737331*^9, 3.894336487211615*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"04aa8fb6-6ed7-46fe-b3d5-7d0f50f5a68f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"V", "[", 
               RowBox[{"s", ",", "1"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], 
             RowBox[{"GaussIntR2", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"v", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], 
                RowBox[{"unHOMwoPrefactor", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", "x1", ",", " ", 
               "p1"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Delta]", ">", "0"}], ",", 
              RowBox[{
               SuperscriptBox["s", "2"], "==", "1"}], ",", 
              RowBox[{
               SuperscriptBox["t", "2"], "==", 
               RowBox[{"1", "-", 
                SuperscriptBox["r", "2"]}]}], ",", 
              RowBox[{"0", "<", "r", "<", "1"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", " ", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", " ", ",", " ", "1", " ", ",", "4"}], "}"}]}], "]"}]}],
        "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]x", "-", 
               RowBox[{"2", " ", 
                SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]x", "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], "->", 
          RowBox[{
           SubsuperscriptBox["f", "\[Delta]", "\[CapitalDelta]x"], "[", 
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Alpha]", "i"]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]x", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]x", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], "->", 
          RowBox[{
           SubsuperscriptBox["f", "\[Delta]", "\[CapitalDelta]x"], "[", 
           SubscriptBox["\[Alpha]", "r"], "]"}]}]}], "}"}]}], ",", "2"}], 
     "]"}], "]"}], "\[IndentingNewLine]", "/.", 
   RowBox[{
    SuperscriptBox["t", "2"], "->", 
    RowBox[{"1", "-", 
     SuperscriptBox["r", "2"]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.894333735957312*^9, 3.894333745305703*^9}, {
   3.8943337905427732`*^9, 3.894333825695552*^9}, {3.8943338607491713`*^9, 
   3.89433390038704*^9}, {3.8943339338437414`*^9, 3.89433393574468*^9}, {
   3.89433402763858*^9, 3.8943340627821193`*^9}, {3.894334130142556*^9, 
   3.8943341596817646`*^9}, {3.8943344732085176`*^9, 3.894334512715973*^9}, {
   3.8943345494876413`*^9, 3.8943345832848587`*^9}, {3.894334916573676*^9, 
   3.894334940464768*^9}, 3.894334994087655*^9, {3.894335043172512*^9, 
   3.894335060135498*^9}, {3.89433511161331*^9, 3.89433517973002*^9}, {
   3.894335254628693*^9, 3.8943352549116836`*^9}, 3.894335290543277*^9, {
   3.894335379236805*^9, 3.894335426670538*^9}, {3.8943354621480303`*^9, 
   3.8943355077534213`*^9}, {3.8943366847519674`*^9, 3.894336726024682*^9}, {
   3.8943372608570757`*^9, 3.894337261721496*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"ebe7ccf3-c5ef-4b16-9e69-e69ecc19e1f3"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["r", "2"], " ", 
     SuperscriptBox["\[Alpha]", "2"]}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["r", "2"]}], ")"}], " ", 
       SuperscriptBox["\[Alpha]", "2"]}]], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["r", "2"]}], ")"}], " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], " ", 
      RowBox[{
       SubsuperscriptBox["f", "\[Delta]", "\[CapitalDelta]x"], "[", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Alpha]", "i"]}], "]"}]}], "+", 
     RowBox[{
      SubsuperscriptBox["f", "\[Delta]", "\[CapitalDelta]x"], "[", 
      SubscriptBox["\[Alpha]", "r"], "]"}]}], ")"}]}], 
  RowBox[{"2", "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["r", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}]]], "Output",
 CellChangeTimes->{
  3.8943338290658693`*^9, {3.8943338888275423`*^9, 3.8943339036845427`*^9}, 
   3.8943340801640215`*^9, 3.8943341633421144`*^9, 3.8943344780961437`*^9, 
   3.894334516662599*^9, {3.894334578191313*^9, 3.89433458423168*^9}, {
   3.8943349196894493`*^9, 3.8943349413291426`*^9}, 3.894334994920164*^9, 
   3.894335065070238*^9, {3.894335130170126*^9, 3.894335181944958*^9}, {
   3.894335268174553*^9, 3.894335292084964*^9}, {3.8943354197458143`*^9, 
   3.894335435257717*^9}, {3.8943354943070717`*^9, 3.894335512051433*^9}, 
   3.8943366147260423`*^9, {3.894336700489006*^9, 3.894336726876845*^9}, 
   3.8943372653590035`*^9, 3.8943377488891745`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"8c01b246-7001-4c02-acf2-54865ef1392d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fidelityZPSHOM", " ", "[", 
    RowBox[{
    "\[CapitalDelta]x_", ",", "\[Delta]_", ",", "r_", ",", "\[Alpha]_", ",", 
     "\[Theta]_", ",", "s_"}], "]"}], ":=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["r", "2"]}], ")"}], " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], "+", 
      RowBox[{"s", " ", "2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["r", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], " "}]}], 
     RowBox[{
      RowBox[{"PsHOM", "[", 
       RowBox[{
       "\[CapitalDelta]x", ",", "\[Delta]", ",", "r", ",", "\[Alpha]", ",", 
        "\[Theta]", ",", "s"}], "]"}], "4", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"s", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[Alpha]", "2"]}]]}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "+", " ", 
        RowBox[{"s", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["r", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Alpha]", "2"]}]]}]}], " ", ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"\[CapitalDelta]x", "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "-", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]x", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8943368093450794`*^9, 3.8943368697414255`*^9}, {
   3.8943369304751196`*^9, 3.894336942409423*^9}, {3.894337032575244*^9, 
   3.894337043588129*^9}, {3.894337094436881*^9, 3.894337182649847*^9}, {
   3.8943377729865217`*^9, 3.894337839138321*^9}, {3.8943378759534235`*^9, 
   3.894337901147994*^9}, 3.8943379332143335`*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"0c051a69-5512-44ad-bd73-fc4fcfdde0dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fidelityZPSHOM", " ", "[", 
  RowBox[{"2", ",", 
   RowBox[{"\[Delta]HOM", "[", "0.85", "]"}], ",", 
   SqrtBox["0.25"], ",", "2", ",", "0", ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fidelityZPSTHR", "[", 
  RowBox[{
   SqrtBox["0.25"], ",", "2", ",", "0", ",", "0.3", ",", "1"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8943372054221764`*^9, 3.8943372274742827`*^9}, {
  3.894338278997861*^9, 3.8943382792652507`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"3de716da-4ab8-4b8d-ba98-548c0ab22cf8"],

Cell[BoxData[
 RowBox[{"0.6532591268182116`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.894337230824395*^9, 3.894337940283574*^9, 
  3.8943382795641384`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"e0765efe-893d-473d-a950-81256cd33faf"],

Cell[BoxData["0.6244617804521799`"], "Output",
 CellChangeTimes->{3.894337230824395*^9, 3.894337940283574*^9, 
  3.8943382795797043`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"78670e70-2e24-47f7-9ba4-8308906ca475"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PsHOM", "[", 
  RowBox[{"2", ",", 
   RowBox[{"\[Delta]HOM", "[", "0.85", "]"}], ",", 
   SqrtBox["0.25"], ",", "2", ",", "0", ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PsTHR", "[", 
  RowBox[{
   SqrtBox["0.25"], ",", "2", ",", "0.3", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.894338073678937*^9, 3.89433812158739*^9}, {
  3.8943382572770863`*^9, 3.89433826897402*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"a43785a7-3c6f-4a4d-a254-18dfe8bf1109"],

Cell[BoxData[
 RowBox[{"0.808050138053345`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.894338112440975*^9, 3.894338269790998*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"7d18f8e0-7d88-4239-9645-30bc54e5f1de"],

Cell[BoxData["0.7410224625219923`"], "Output",
 CellChangeTimes->{3.894338112440975*^9, 3.8943382698066216`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"aa3834ef-e8bd-49e7-924c-3d8c820b094c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plotting", " ", "overlap", " ", "and", " ", 
    RowBox[{"prob", ".", " ", "improvement"}], " ", "plots", " ", "on", " ", 
    "top", " ", "of", " ", "each", " ", 
    RowBox[{"other", ".", " ", "Intersecting"}], " ", "lines", " ", "mean", 
    " ", "that", " ", "dyning", " ", "is", " ", "better", " ", "to", " ", 
    "simulate", " ", "certain", " ", "threshold", " ", 
    RowBox[{"efficiencies", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{
     "\[CapitalDelta]x", ",", " ", "\[Alpha]", ",", "r", ",", "t", ",", 
      "\[Theta]", ",", "\[Eta]", ",", "x1", ",", "p1", ",", "x2", ",", "p2", 
      ",", "s", ",", " ", "plotpoints"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t", "=", 
     SqrtBox["0.75"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["t", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\"\<Dyne efficiency chosen:\>\"", "\[IndentingNewLine]", 
   RowBox[{"\[Eta]H", " ", "=", "0.85"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotpoints", "=", "60"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cols", "=", 
     RowBox[{"RGBColor", "/@", 
      RowBox[{"{", 
       RowBox[{"(*", 
        RowBox[{"\"\<#053061\>\"", ",", "\"\<#2166ac\>\"", ","}], "*)"}], 
       RowBox[{
       "\"\<#4393c3\>\"", ",", "\"\<#92c5de\>\"", ",", "\"\<#d1e5f0\>\"", 
        ",", "\"\<#f7f7f7\>\"", ",", "\"\<#fddbc7\>\"", ",", 
        "\"\<#f4a582\>\"", ",", "\"\<#d6604d\>\""}], 
       RowBox[{"(*", 
        RowBox[{",", "\"\<#b2182b\>\"", ",", "\"\<#67001f\>\""}], "*)"}], 
       "}"}]}]}], ";"}], "\n", "\"\<HOMODYNE:\>\"", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"text", "=", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<(a)\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FontSize", "\[Rule]", "Large"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "Black", 
           ",", "Bold"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.5", ",", ".9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"txt", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", "text", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotROHOM", " ", "=", " ", 
     RowBox[{"DensityPlot", "[", 
      RowBox[{
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"Re", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"fidelityZPSHOM", " ", "[", 
            RowBox[{"\[CapitalDelta]", ",", 
             RowBox[{"\[Delta]HOM", "[", "\[Eta]H", "]"}], ",", "r", ",", 
             "\[Alpha]", ",", "\[Theta]", ",", "s"}], "]"}]}], "+", 
          RowBox[{"fidelityZPSTHR", "[", 
           RowBox[{
           "r", ",", "\[Alpha]", ",", "\[Theta]", ",", "\[Eta]", ",", "s"}], 
           "]"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[CapitalDelta]", ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Eta]", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", "plotpoints"}], ",", 
       RowBox[{"ColorFunction", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"cols", ",", "#"}], "]"}], "&"}], ")"}]}], ",", 
       RowBox[{"ColorFunctionScaling", "->", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[CapitalDelta] (in units of \!\(\*SqrtBox[\(\[HBar]\)]\))\>\"",
           ",", "\"\<\[Eta]\>\""}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "Black"}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotRIHOM", "=", 
     RowBox[{"DensityPlot", "[", 
      RowBox[{
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"Re", "[", 
         RowBox[{
          RowBox[{"PsHOM", "[", 
           RowBox[{"\[CapitalDelta]", ",", 
            RowBox[{"\[Delta]HOM", "[", "\[Eta]H", "]"}], ",", "r", ",", 
            "\[Alpha]", ",", "\[Theta]", ",", "s"}], "]"}], "-", 
          RowBox[{"PsTHR", "[", 
           RowBox[{"r", ",", "\[Alpha]", ",", "\[Eta]", ",", "s"}], "]"}]}], 
         "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[CapitalDelta]", ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Eta]", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", "plotpoints"}], ",", 
       RowBox[{"ColorFunction", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0", ",", "0", ",", "0.3"}], "]"}], ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "]"}]}], "}"}], 
            ",", "#"}], "]"}], "&"}], ")"}]}], ",", 
       RowBox[{"ColorFunctionScaling", "->", "False"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[CapitalDelta] (in units of \!\(\*SqrtBox[\(\[HBar]\)]\))\>\"",
           ",", "\"\<\[Eta]\>\""}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "Black"}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{"plotROHOM", ",", "plotRIHOM", ",", "txt"}], "}"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{
     "\[CapitalDelta]x", ",", " ", "\[Alpha]", ",", "r", ",", "t", ",", 
      "\[Theta]", ",", "\[Eta]", ",", "x1", ",", "p1", ",", "x2", ",", "p2", 
      ",", "s", ",", " ", "plotpoints"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8913135346449757`*^9, 3.891313588024474*^9}, {
   3.893991876657242*^9, 3.893991877357768*^9}, 3.893992545464538*^9, {
   3.893992595801051*^9, 3.893992605288683*^9}, {3.893992959951789*^9, 
   3.8939929640070343`*^9}, {3.8939934470175056`*^9, 3.893993454652569*^9}, {
   3.893993491481035*^9, 3.8939935231556387`*^9}, {3.8943389404238043`*^9, 
   3.8943389658262615`*^9}, {3.8943397372803507`*^9, 3.8943397601776905`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"bd10f5fb-c407-4545-8ba2-cd4b4dc27f4c"],

Cell[BoxData["\<\"Dyne efficiency chosen:\"\>"], "Output",
 CellChangeTimes->{
  3.893992858289383*^9, {3.893992905409186*^9, 3.893992911772088*^9}, {
   3.8939929554634*^9, 3.8939929675403852`*^9}, 3.893993026204378*^9, 
   3.893993082425315*^9, {3.8939933523294086`*^9, 3.8939933577114563`*^9}, 
   3.8939934695573874`*^9, 3.8939935261242857`*^9, 3.893994888307815*^9, 
   3.893994985489069*^9, 3.8939950737725363`*^9, 3.893995112979436*^9, 
   3.893995216940187*^9, {3.8939953050395727`*^9, 3.893995331640588*^9}, 
   3.894338767607917*^9, 3.8943388333328257`*^9, 3.8943394600523014`*^9, 
   3.8943401649347887`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"ef3a19f6-3f99-4029-8b5a-1116cfa98c67"],

Cell[BoxData["0.85`"], "Output",
 CellChangeTimes->{
  3.893992858289383*^9, {3.893992905409186*^9, 3.893992911772088*^9}, {
   3.8939929554634*^9, 3.8939929675403852`*^9}, 3.893993026204378*^9, 
   3.893993082425315*^9, {3.8939933523294086`*^9, 3.8939933577114563`*^9}, 
   3.8939934695573874`*^9, 3.8939935261242857`*^9, 3.893994888307815*^9, 
   3.893994985489069*^9, 3.8939950737725363`*^9, 3.893995112979436*^9, 
   3.893995216940187*^9, {3.8939953050395727`*^9, 3.893995331640588*^9}, 
   3.894338767607917*^9, 3.8943388333328257`*^9, 3.8943394600523014`*^9, 
   3.8943401649347887`*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"91feb161-c53c-4c60-934d-cb2af63eaafd"],

Cell[BoxData["\<\"HOMODYNE:\"\>"], "Output",
 CellChangeTimes->{
  3.893992858289383*^9, {3.893992905409186*^9, 3.893992911772088*^9}, {
   3.8939929554634*^9, 3.8939929675403852`*^9}, 3.893993026204378*^9, 
   3.893993082425315*^9, {3.8939933523294086`*^9, 3.8939933577114563`*^9}, 
   3.8939934695573874`*^9, 3.8939935261242857`*^9, 3.893994888307815*^9, 
   3.893994985489069*^9, 3.8939950737725363`*^9, 3.893995112979436*^9, 
   3.893995216940187*^9, {3.8939953050395727`*^9, 3.893995331640588*^9}, 
   3.894338767607917*^9, 3.8943388333328257`*^9, 3.8943394600523014`*^9, 
   3.89434016495041*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"efb1b8e0-a3e7-4125-94ef-e99429ed5ca3"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxs3Xm8TPX/wPG59j17JaksqbSJSov7OS2jFEIlFVJUUgqlqBDftGhTutlS
3eoqKoy1hFz7lmxjX+ZiuO4kYxiG6/K798y83ufx/tzf9x/fZ2fmnM+dOa+z
zZx7r3jmlY7PlvD5fFfU9vmK/l3ft+OpcMBvfKn/JT3b8jLx15sHD3rJv96a
HhSXqtx4wFP1dlqPD4nn1O/VYnL+Puv5YXHewjsLH5JrzS8irvdkteZfbz5i
zT8qnpwf2zbyu2PW8mLiJa13j1nR6YS1/Li4aGqpyqes8STEhQ+uddeS09b4
8sVFoxs86Kw13gJxk+HvjZ53w3lr/D4HJ4fr+Wf350kTX//Zb+XqtCshnuU+
wfPt7g9cUrzI/XlLiVu5LC1e6/78nju6P1AZ8Tb39Sgr7ub+AJ4PuK9POXHv
otnVKi+Ouq+X59eL1p6+FcRnKxW9fhXFw7/L+fG/NZ4/LVp848rimu7r6Xn8
f2t6NBleRXy5+/peIJ5UuPTWuz1/5b7eVcWPu2+Q57ru6+95b9HwW1cTf+++
H56f9RetQZ6vct+f6uJI4aNzfvQ81X2/PPcrejk61hA3d98/z6mfWkyv7sve
4nNDr+5q+CReJqZXPT0oplf9+JCYXvXzw2J61fOLiOlVzz8qple9vJiYXvXy
42J61eNJiOlVjy9fTK96vAVietXj9zmYXjG9YnrF9IrpFdMrpldMr5heMb1i
esX0iukV06u8Ptm1D2wu7PXgHdO3vxz63NBnt8VXbnnn6c9NOff1qySPp1dM
r5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXvb76zUF3XJlWr5lW
r5lWr5lWr5lWr5lWr5lWr5lWr5lWr5lWr5lWr5lWr5lWr5lWr5lWr5lWr5lW
r5lWr5lWr5lWr5lWr4y3QKx7zbR6zbR6zbR6zbR6zbR6zbR6zbR6zbR6zbR6
zbR6zbR6zbR6zbR6zbR6zTTsT/98Pl7tUJ1Mw/6U6fSKda+ZVq+ZVq+ZVq+Z
Vq+ZVq+ZVq+ZVq+ZVq+ZVq+ZVq+ZVq+ZVq+ZVq+ZVq+ZVq+ZVq+ZVq+Z0msf
d7mTpdcv591QuOQp0iumVz09KKZX/fiQmF7188NietXzi4jpVc8/KqZXvbyY
mF718uNietXjSYjpVY8vX0yverwFYnrV4/c5mF4xvWJ6xfSK6RXTK6ZXTK+Y
XjG9YnrF9IrZn2J6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1i
esX0iukV0yumV72++s2b7vMC1v41YO1fA9b+NWDtXwPW/jVg7V8D1v41YO1f
A9b+NWDtXwPW/jVg7V8D1v41YO1fA9b+NWDtXwPW/jVg7V8D1v41YO1fA9b+
NWD0/jVg7V8D1v41YO1fA9b+NWDtXwPW/jVg7V8D1v41YO1fA9b+NWDtXwPW
/jVg7V8D1v40YB3/BqRXrPevAWv/GrD2rwFr/xqw9q8Ba/8asPavAWv/GrD2
rwFr/xqw9q8Ba/8asPavAWv/GrD2rwFr/xqw9q8Ba/8asPavAWv/GpBe3dPX
ybOlV/3vMjG96ulBMb3qx4fE9KqfHxbTq55fREyvev5RMb3q5cXE9KqXHxfT
qx5PQkyvenz5YnrV4y0Q06sev8/B9IrpFdMrpldMr5heMb1iesX0iukVsz/F
9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+Y
XvV135pifX14nqxHo9397zzpFdOrnh4U06t+fEhMr/r5YTG96vlFxPSq5x8V
06teXkxMr3r5cTG96vEkxPSqx5cvplc93gIxverx+xxMr5heMb1iesX0iukV
0yumV0yvmP0ppldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZX
TK+YXjG9YnrF9IrpFdOrXl/9ZrH7vi6UXju579tC6RXTq54eFNOrfnxITK/6
+WExver5RcT0qucfFdOrXl5MTK96+XExverxJMT0qseXL6ZXPd4CMb3q8fsc
TK+YXjG9YnrF9IrpFdMrplfM/hTTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5he
Mb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTq15f/Wap+75mW+ev2dIr1uev
2dIr1uev2db5a7Z1/potvWJ9/pptnb9mW+ev2db5a7Z1/pptnb9mW+ev2dIr
1uev2db5a7Z1/pptnb9mW+ev2Uafv2Zb56/Z1vlrtnX+mm2dv2Zb56/Z1vlr
tnX+mm2dv2Zb56/Z1vlrtnX+mm2dv2Zb56/Z1vXhbOt8Nts6n822zmezrfPZ
bOt8Nts6n822zmezrfPZbOt8Nts6n822zmezrfPZbOt8Nts6n822zmezrfPZ
bOt8Nts6n822zmezrfPZbOt8Nts6n822zmezpd9J7s+9RPo9WsT3lki/mH71
9KCYfvXjQ2L61c8Pi+lXzy8ipl89/6iYfvXyYmL61cuPi+lXjychpl89vnwx
/erxFojpV4/f52D6xfSL6RfTL6ZfTL+YfjG9YnrF9IrpFdMrpldMr5heMb1i
esX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9KrXV7/5wD1g
9q4zbVDXnZaJ6VVPD4rpVT8+JKZX/fywmF71/CJietXzj4rpVS8vJqZXvfy4
mF71eBJietXjyxfTqx5vgZhe9fh9DqZXTK+YXjG9YnrF9IrZv2J6xfSK6RXT
K6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6
xfSK6VWvr37Tu2iY21ZIrzPdn3OF9IrpVU8PiulVPz4kplf9/LCYXvX8ImJ6
1fOPiulVLy8mple9/LiYXvV4EmJ61ePLF9OrHm+BmF71+H0OpldMr5heMb1i
esX0itm/YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL
6RfTL6ZfTL+YfjH9YvrF9IvpF9OvXn/9po37vq6WfjPc61WrpV9Mv3p6UEy/
+vEhMf3q54fF9KvnFxHTr55/VEy/enkxMf3q5cfF9KvHkxDTrx5fvph+9XgL
xPSrx+9zMP1i+sX0i+kX0y+mV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF
9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ61eur31zv/pxrpdc3
nir6QdZKr5he9fSgmF7140NietXPD4vpVc8vIqZXPf+omF718mJietXLj4vp
VY8nIaZXPb58Mb3q8RaI6VWP3+dgesX0iukV0yumV8z+FtMvpl9Mv5h+Mf1i
+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9M
v5h+Mf3q9ddvqrrXp9ZJv4+77+M66RfTr54eFNOvfnxITL/6+WEx/er5RcT0
q+cfFdOvXl5MTL96+XEx/erxJMT0q8eXL6ZfPd4CMf3q8fscTL+YfjH9YvrF
9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+Y
XjG9YnrF9IrpFdMrpldMr5he9frqN4mi1/ke73tOE9X3npaJ6VVPD4rpVT8+
JKZX/fywmF71/CJietXzj4rpVS8vJqZXvfy4mF71eBJietXjyxfTqx5vgZhe
9fh9DqZXTK+YXvG25+86Oauw1yOd6lfZ1Xa97G+ZTr+YfjH9YvqV+af6xfSL
6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x
/WL6xfSr11+/eaFomJ03SL9V3P3vBukX06+eHhTTr358SEy/+vlhMf3q+UXE
9KvnHxXTr15eTEy/evlxMf3q8STE9KvHly+mXz3eAjH96vH7HEy/mH4x/WL2
t/WaDswv/egG6Zfp9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6
xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+9frrNzuKZvvyRul3qPs6
b5R+Mf3q6UEx/erHh8T0q58fFtOvnl9ETL96/lEx/erlxcT0q5cfF9OvHk9C
TL96fPli+tXjLRDTrx6/z8H0i+kX0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+Y
XjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6VWv
r37zYNH7+u4m6TXqfr67SXrF9KqnB8X0qh8fEtOrfn5YTK96fhExver5R8X0
qpcXE9OrXn5cTK96PAkxverx5YvpVY+3QEyvevw+B9MrplfM/hbTL6ZfTL+Y
fjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfT
L6ZfTL+YfjH9YvrF9IvpV6+/fjO/6HLz+M3S79PJFU/6xfSrpwfF9KsfHxLT
r35+WEy/en4RMf3q+UfF9KuXFxPTr15+XEy/ejwJMf3q8eWL6VePt0BMv3r8
PgfTL6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4x
vWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrple9vvrNdUU/5zTvvruNqQ7p
FdOrnh4U06t+fEhMr/r5YTG96vlFxPSq5x8V06teXkxMr3r5cTG96vEkxPSq
x5cvplc93gIxverx+xxMr5j9LaZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i
+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl+9
/vrNN0U/x7It0u897oq+RfrF9KunB8X0qx8fEtOvfn5YTL96fhEx/er5R8X0
q5cXE9OvXn5cTL96PAkx/erx5YvpV4+3QEy/evw+B9MrpldMr5heMb1iesX0
iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5he
Mb1iesX0iukV0yumV72++s0FbmZbpddZ7s+5VXrF9KqnB8X0qh8fEtOrfn5Y
TK96fhExver5R8X0qpcXE9OrXn5cTK96PAkxverx5YvpVY+3QEyvevw+B7O/
xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/
mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpV6+/fvNO0esa3Sb9NnLHvU36
xfSrpwfF9KsfHxLTr35+WEy/en4RMf3q+UfF9KuXFxPTr15+XEy/ejwJMf3q
8eWL6VePt0BMv5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+Y
XjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ61eur3xwr
+rHL7JBev3K/D7lDesX0qqcHxfSqHx8S06t+flhMr3p+ETG96vlHxfSqlxcT
06teflxMr3o8CTG96vHli+lVj7dATK96/D4H0y+mX0y/mH4x/WL6xfSL6RfT
L6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6
xfSL6RfTL6ZfTL96/fWbZ4rGXdf7PVBlUx3SL6ZfPT0opl/9+JCYfvXzw2L6
1fOLiOlXzz8qpl+9vJiYfvXy42L61eNJiOlXjy9fTL96vAXWeH0OpldMr5he
Mb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMr
pldMr5heMb1iesX0iukV0yumV0yvmF71+uo3m4r+bbpLeh3ofn95l/SK6VVP
D4rpVT8+JKZX/fywmF71/CJietXzj4rpVS8vJqZXvfy4mF71eBJietXjyxfT
qx5vgZj9rR6/z8H0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF
9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTr15//ebe
ohX7vt3S72F3nLulX0y/enpQTL/68SEx/ernh8X0q+cXEdOvnn9UTL96eTEx
/erlx8X0q8eTENOvHl++mH4xverx+hxMr5heMb1iesX0iukV0yumV0yvmF4x
vWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yum
V0yvmF4xver11W9mF7HrHun1Cfd93CO9YnrV04NietWPD4npVT8/LKZXPb+I
mF71/KNietXLi4npVS8/LqZXPZ6EmF71+PLF9KrHWyCmXz1+n4PpF9Mvpl9M
v5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9Ivp
F9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX73++s2VRbPpv1f6XeP+Arm90i+mXz09
KKZf/fiQmH7188Ni+tXzi4jpV88/KqZfvbyYmH718uNi+tXjSYjpV48v3xpf
gZhe9Xh9DqZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yv
mF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5he9fqa+n0X93q/
h/ybVGf0iulVTw+K6VU/PiSmV/38sJhe9fwiYnrV84+K6VUvLyamV738uJhe
9XgSYnrV48sXs7/V4y0Q068ev8/B9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+m
X0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0
i+kX069ef/3m3aIf8x+v3y1upl6/mH719KCYfvXjQ2L61c8Pi+lXzy8ipl89
/6iYfvXyYmL61cuPi+lXjychpl9Mr3p8BWJ61eP1OZheMb1iesX0iukV0yum
V0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0
iukV0yumV0yvmF4xvWJ61etr6n6CJ3Ks+29zpFes77/NkV4xverHh8T6/tsc
6RXr+29zpFdMr3r+UbG+/zbHuv82x7r/Nkd6xfr+2xzr/tuc5O8ZKOz194Ip
V9SX8eXLdPrV4y0Q6/tvc6RfrO+/zbHuv82x7r/NkX6xvv82x7r/Nse6/zbH
uv82x7r/Nse6/zbHuv82x7r/Nse6/zbHuv82x7r/Nse6/zbHuv82x7r/Nse6
/zbHuv82x7r/Nse6/zbHuv82x+j7b3Os+29zrPtvc6z7b3Os+29zrPtvc6z7
b3Os+29zrPtvc6z7b3Os+29zrPtvc6TfE0XzPeD128r9P16/mH719KCYfvXj
Q2L61c8Pi+lXzy8ipl89/6iYfvXyYmL61cuPi+lXjychZn+rx5cvpl893gIx
/erx+xxMv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9
YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/er112+uLfo5X/H+
ztYQ93XeJ/1i+tXTg2L61Y8PielXPz8spl89v4iYfvX8o2L61cuLielXLz8u
pl9Mr3o8+WJ61eMrENOrHq/PwfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldM
r5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9Irp
FdOrXl/9pmfR+3LG65Wu6BXTq57u3adHr/rx3nmt/S+9YnrV84uI6VXPPyqm
V72cmJhe9fLjYnrV40mI6VePL19Mv3q8BWL61eP3OZh+Mf1i+pX7NFL9YvrF
9CvHOal+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfuV7t6l+
Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSr119/cj0asV/6dV+G9/ZLv5h+9fSg
mH7140NilqufHxbTr55fREy/ev5RMf3q5cXE9KuXH7eWnxDTqx5Pvphe9fgK
xPSqx+tzML1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF
9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSq11e/Sf4YB6TX
K4tOf6sdkF4xverpQTG96seHxPSqnx8W06ueX0RMr3r+UTG96uXFxPSK2b/q
5SfE9KrHky+mVz2+AjG96vH6HEyvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF
9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+Y
XjG96l78xn0ZJ3i9dnN/Dq9XTK96elBMr/rxIbEcZ6nnh8X0qucXEdOrnn9U
TK96eTExverlx8X0q8eTENOvHl++mH71eAvE9KvH73Mw/WL6xfSL6RfTL6Zf
TL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL
6RfTL6ZfTL+YfjH9YvrF9KvXX7+5t+j/NPL+zvtX7usUln6x3M+npgfF9Ksf
HxLLeYV6flgs9/Op+UXE9KvnHxXL/XxqeTFreXGx3L+nlp8Q06seT76YXvX4
CsRy/54ar8/B9Irl/r2U5f69lOX+vZTl/r2U5f69lOX+vZTl/r2U5f69lOX+
vZTl/r2U5f69lOX+vZTl/r2U5f69lOX+vZTl/r2U5f69lOX+vZTl/r2U5f69
lOX+vZTl/r2U5f69lOX+vZTl/r2U5f69lOX+vZTl/r2U5f69lOX+vZTl/r2U
5f69lOX+vZTl/j21/vrN20Wv63Sv13WpjugV06ueHhTTq358SEyv+vlhMb3q
+UXE9KrnHxXTK2b/qpcXF9OrXn5CTK96PPlietXjKxDTqx6vz8H0iukV0yum
V0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0
iukV0yumV0yvmF4xvWJ6xfSK6RXTq15//cn14I6D0muZOu0KV92D0iumVz09
KKZX/fiQmF7188NietXzi4jpVc8/KqZXvbyYmH718uNi+tXjSYjpV48vX0y/
erwFYvrV4/c5mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+
Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrV66/f/Fv0
Yy/3+k13V3SvX0y/enpQTL/68SEx/ernh8X0q+cXEdOvnn/Umn9MTK96eXEx
verlJ8T0qseTL6ZXPb4CMb3q8focTK+YXjG9YnrF9IrpFdMrpldMr5heMb1i
esX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldM
r5heMb3q9ddvGhZdn+pwSHp93Z3PIekV06ueHhTTq358SCyf26nnh8X0qucX
EdMrZv+q5x8T06teXlxMr3r5CTG96vHki+lVj69ATK/69fA5mF4xvWJ6xfSK
6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4x
vWJ6xfSK6RXTK6ZXTK+YXjG9YnrV66/fdCka9y6v16nuz+n1iulVTw+K6VU/
PiSWz5XV88NietXzi1jzi4rpVc8/JqZXvby4mF718hNietXjyRfTK6ZXTK96
/D4H0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5he
Mb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK96/fWbL4tel+dzpdeD
qW7oFdOrnh4U06t+fEhMr/r5YTG9Yvanen5RMb3q+cfE9KqXFxfTq15+Qkyv
+ufLF9OrHm+BmF71+H0OpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK
6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF71
+utPvo/HvF7rueP2esX0qqcHxfSqHx8S06t+fth6fkRMr3p+UTG96vnHxPSq
lxcX0yumV0yvenz5YnrV4y0Q06sev8/B9IrpFdMrlr+vlzK9YnrF9IrpFdMr
pldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF
9IrpFdMrpldMr3r99ZtSRdef3j4svXZyV8TD0iumVz09KKZX/fiQmF4x+1P9
/IiYXvX8omJ61fOPielVjzcuplc9noSYXvX48sX0qsdbIKZXPX6fg+kV0yum
V0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0
iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXvf76zZ1FK3bZPOn1U/f3reZJr5he
9fSgmF719LCYPvXjI2L61MuLiukT0yemT738uJg+9XgSYvrU48sX06ceb4GY
PvX4fQ6mT0yfmD4xfWL6xPSJ6RPTJ6ZPTJ+YPjF9YvrE9InpE9Mnpk9Mn5g+
MX1i+sT0iekT0yemT0yfmD4xfWL6xPSJ6RPTJ6ZPTJ+YPvX66zevFT3vC6/P
5UVfNx7t9YnpUzskZn+pnx8W0yemT0yfev5RMX3q5cXE9KmXHxfTpx5PQkyf
enz5YvrU4y0Q06cev8/B9InpE9Mnpk9Mn5g+MX1i+sT0iekT0yemT0yfmD4x
fWL6xPSJ6RPTJ6ZPTJ+YPjF9YvrE9InpE9Mnpk9Mn5g+MX1i+sT0iekT06de
f4PmXKVkJ+z/MP1h+sP0h+lPzy8ipj89/6iY/vTyYmL608uPi+lPjychpj89
vnwx/enxFojpT4/f52D6w/SH6Q/TH6Y/TH+Y/jD9YfrD9IfpD9Mfpj9Mf5j+
MP1h+sP0h+kP0x+mP0x/mP4w/WH6w/SH6Q/TH6Y/TH+Y/jD9YfrD9Ifpz+on
3R335IjsH29xnxeR/SNm/6inB8X0qx8fEtOvfn5YTL96fhEx/er5R8X0q5cX
E9OvXn5cTL96PAkx/erx5YvpV4+3QEy/evw+B9Mvpl9Mv5h+Mf1i+sX0i+kX
0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i
+sX0i+kX0y+mX0y/Vj/pnxe9Ls3/lX5fLro9R7xMTL96elBMv/rxITH96ueH
xfSr5xcR06+ef1RMv3p5MTH96uXHxfSrx5MQ068eX76YfvV4C8T0q8fvczD9
YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6Zf
TL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0a/WTvqro34Vev5PKFV0A9vrF
9KunB8X0qx8fEtOvfn5YTL96fhEx/er5R8X0q5cXE9OvXn5cTL96PAkx/erx
5YvpV4+3QEy/evw+B9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL
6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/Vj/p
aUVsfUT63eOO84j0i+lXTw+K6Vc/PiSmX/38sJh+9fwiYvrV84+K6VcvLyam
X738uJh+9XgSYvrV48sX068eb4GYfvX4fQ6mX0y/mH4x/WL6xfSL6RfTL6Zf
TL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL
6RfTL6ZfTL+Yfq1+0m8rWrE3e/3WTnVCv5h+9fSgmH7140Ni+tXPD4vpV88v
IqZfPf+omH718mJi+tXLj4vpV48nIaZfPb58Mf3q8RaI6VeP3+dg+sX0i+kX
0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i
+sX0i+kX0y+mX0y/mH4x/WL6xfSL6dfqJ9193lP/Sb/t3PfxP+kX06+eHhTT
r358SEy/+vlhMf3q+UXE9KvnHxXTr15eTEy/evlxMf3q8STE9KvHly+mXz3e
AjH96vH7HEy/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+
Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9Wv2kTy4aVp7X
73tFi83z+sX0q6cHxfSrHx8S069+flhMv3p+ETH96vlHxfSrlxcT069eflxM
v3o8CTH96vHli+lXj7dATL96/D4H0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+Y
fjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfT
L6ZfTL9WP+k5Re/DgKPS78Kil0m8TEy/enpQTL/68SEx/ernh8X0q+cXEdOv
nn9UTL96eTEx/erlx8X0q8eTENOvHl++mH71eAvE9KvH73Mw/WL6xfSL6RfT
L6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6
xfSL6RfTL6ZfTL+YfjH9YvrF9Gv1k96gaDbnvX6Tj4tKv5h+9fSgmH7140Ni
+tXPD4vpV88vIq6nzgOi0i+mX728mJh+9fLjYvrV40mI6VePL19Mv3q8BWL6
1eP3OZh+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF
9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/eLkvzXFyfU3y7ir4ZPD
jHsda0UFB691c63k+DOe7FnrzuHy+C/d70eOF/PvT+517XIOnln0sDoVHPtx
j7nryVRzRdFiqpVzMNOTv891pplQ9Hb24PfrzpTpM9z3Ya74NffzsPnyeMz0
ZCeLzGfuuMs4uFbRr+mY45nHJ39/+2JT3n0d+P37i1PfKy7jPObb+sj1HyyW
x3d33/el4rvd13G5+d/ooieUcjDzwzy+obuerDQF54v+V9LBTC/jviFrxLnu
evS3ecN9v0s6mOdjHr/a3V7/I07+Paf15pi7PvH3vNbL/DCPT/79iQ3i3931
bqN50V1f0xzM/DCPv8p9nzeLx7sdBo2bd+s0BzM/zOMruL9PZYv4bXecW437
Nn/tczDzwzz+X3c7s03czd3Qbk+tR+fFzA/z+HXu9w13iJO/IHynOXs+UPOB
4edM1b8KWi4I7JT5MZ3HT3e72GXGuj9XgfhHd8U+Z3q0qDYq449d8vj67nZp
t/gL93h5jxnpbt/yxcwP8/gSbt8h8e3ujo2/63FGzPwwj+/vbodzxFPc7VSO
cVnrtJj5YR6/z/3B9ondt2/OPjNh7CNvfTvvlJl+6MZor3n7ZH5M5/Huf75r
v3FX26dOit2/o1D4/KyPmzfv13K/PD75c3he7O63DpgH3P1VXMz8MI8/4w7/
gLnTfd+Oi5l+k7uBCIt7u+tp2EyaFLyoa/uYWdsuVPX2RFiez3Qe/737PvP7
aKJipu9w95Pcb39UzPTqRavVGM8PuAcWufJ4zPTh7naH+w//FTN9njtQ7qc6
IE4enxwW8/hY6r/ja9z9Et8P3yb+ObUeHPkptuRM6zx5/DNFP/a2PNkO4w9u
Xxp7teMiM7TZ7Fn9e0bk8RvdN9RzhdTPIdtX9309In6z6GX4zPMMd7/znzjP
3S55rp963fBT7gvp2Zf6n94/fi73A7B/ZP+GOT75/6d/bv5yV8CKDvtPv/sC
VhJ3cN+wyvL8Nan9rz2d8dVxtxM15PHs37Eef6aMn/mxv7bN469z37DyMp3j
MczxF+b4wd7fJ6dPkeXz39n/Y44H7ek8n/FwvMDrbR9v2McTyZ8nIMtnOscL
mONTezrP5/iU6bxe9vEJ50Esj+kcb2D99wRmWn8/YKb8/PbxjptzuXkyf6Yz
f9s8np/Pnl9yu7hQ5sfxE8dLmON7ezrPZ7z28Zh9fJV8PbNleUzn+AhzfmFP
5/m8fvbxHMdrLO+o+3oukeUxneMzrP/+0mLr7y0tlp/XPt7bkDrPZf5MZ/62
eTw/nz2/me77s0Lmx/Eix3eY8zN7Os9nvPbxp318meE+brUsj+kcD2LODzGv
F+bns49X33DXh7Uyf6Yzf9s8Xn4/ojW/x933ZZ3Mj+Ndjj8x57eY8dnHy/bx
8cTUdQrmz3Tmb5vH8/rY80v+/cUNMj+Orznexfrv7a6X8dnH5/bx+FB3/dwo
82c687fN4/XfE/TmF3V72STz43ie42vM9QXM+OzzAfv4/+nkhQ2ZP9OZv20e
z+tjz2+j+29Q5sf5A8fzmOsjmPHZ5x/2+cY9bj9bZP5MZ/62eTyvjz2/WW6f
W2V+nK9w/oC5voMZn32+Y5/fNHJ/zm0yf6Yzf9s8ntfHnt9X7vZhh8yP8yPO
X7D8fYGUGZ99fmWfT5VNXfdj/kxn/rZ5PK+PPb+B7oJ2yfw4H+N8CXN9zZ7O
8xkv03m9OH9jeYfdn3O3LI/pnF9hru9hXi/7fNA+/3vC3d7tkfkznfnb5vH8
fPb81rjbp70yP84fOZ/DXJ/EjM8+/7TPN+2/78505m+bx/P62POz//4056uc
P+JTqeurmPHZ57v2+a3993GZzvxt6783XXx+9t/r5PyY81fM9WHM+Ozza/t8
2v77gkxn/rbtv49pz4/r6syP83HOlzHXt+3pPJ/xMp3Xi/N3lmf/vSamc76u
H++Z18u+HmCf/9t/X4bpzN+2/feT7PnZf++C6wec72M+H7Cn83zGa1+PsK83
2L+vn+k3uvu/mJjPJ/Tz42J+Pvv6hf37xZnO/G3bv1/fnp/9+465/sH1Dszn
K/Z0ns94mc7rZ18vsX9fK9O5HoL5fMeebv8+Y6bz89rXX+zfN8l0rq9gPl/C
/LyYn9e+nmP/fjymM3/b9u+TtOdn//4urg+dSl3HwXw+Zk/Xvy8uWux6k309
yf79Q0zn+pJt/fu1Dsl0Pr/DvJ729Sz7+pT9+1SYPjm1HcVsp+zp+vcHHZLr
Xbw+9vUx+3qY/fsimM71Mdv695fslul83qnnHxbz+nG9jeXr++H9Mp3zYtv6
9zeskelzUsftev5BMePl+h2vJ9N5PZnOdRBtv5jlj3evE0Rk+ZjPg3k8rx/T
+fnt+42Zzs+rryfOLnZ90b6fiuk8377+aN+/wXQeb1+ftL8vznQeb1+/tL+f
ynQeb1/ftL8Px3Qeb1//tL9/w3Qeb18ftT/vZzqP//+vn8rn8+lM5/FM5/ol
0zHTuT7K9VM+v7WvjzJdP9/n43oh1zP155ve9c15h3xdgr4pcv2Q6436emjA
ul45W64/cT2N62v29S+uj3F9iutXXJ/h+hTXU7gexPUh+/oN13e4nsH1G/n7
EqmuuH5iX+/g+gnn/1yv4Pn29QauX3D+zfUCnm+f73P9gPNfztd5vn2+zfk7
55+cL/N8+3yX82fO/zhf5fn2+Sbnr5xvcb7I8+3zO87/ON/h/I7zE86nOL+y
z4c4v+L8gPMZnm+fj3B+w/E55xM83z4f4PyC42GO53m+ffzNdprjT/vv+3K8
y/GvfXzK8SvHZ/bfR+N4kOND+/iN4zuOr/TfZ4gW+332HM9wfGMff+jfh/uv
HE+cOzt71xuVDpkaX/WbUGGgt7/Wv89vt/X7yg5Yv29sjfX7kzZav18pp9j0
2l/ePeyvSyOyf9K/X2WRtX+abe1PZlv7i9nW/mC2tb2fbW3PZ1vb69myPebz
IPyiuz6Ud85UdK6q/kyWbJ/4fIDtC9sjthdsX9gesP2gd64n0jPX6+iV62H0
yPUmeuN6Dv3QG33QE+s/vbB+c37L+sr6zfqn/57e0WK/r/3Gt440OnTbYXOl
u37yedtI87b7PpR1kuvp72aju9wSTrK3jaaNO4MSzlJ3PdpslrsDSHMmuQPY
Yhz35/Y5H7gv8DbjzraOz+nt/vg7jLsavHQ61cW+1Otx1HR3B3rI9Ej92yTH
2XaqM8eH002u+/OxPmWkPk/pJ2b8yfXE+3mYbv+b/DzrG3Hy9ftBnBzXT+YD
dzvH51Pe9NfdN/ZXMePEyfdnhji5HswSu7mvmCPm9cbJLv8UJ9erBfL+2NPd
t3vAX+Lk5flF4uT2M1uc7HixucpdP0o7mOnJ/ddScXI9XSZO7q+Wi990O1kh
Tu6fVoq7uNujVaaum0lJBzM9uX9aLU53B7RGnLxeuFZ8uTufv1PreUkHMz25
f1onTkt+ui1O7o88J/c/G8TJ/Y9n1n9c193feH7E3fBukl7s6R+7XW8S0w8+
525mPd/irlBB6c2e/rK73QmK6Q+H3P3aVvFF7gq3VXq1p7d3l7NNTL94sbth
2S4+466Q26V3e/pNbt87xPSPf3S3wzvFu9wN307ZXtjTa7objl3iNu7+Y3dq
PT8rZvp7bieeF7rz3SM+6W4nPF/vdrA31VG+mOm93O3SXuv1ComT63vIev1C
qZ/njJjpyc8PPS9yX78ccbIPzwn39fac3L7tE7M9xWvdnjwndz/7ZPtrT09u
T/aL3dW1x/7U5+4nxUxP7mc8J3fPnpPnAwfEVd0Fe/7V7dnz/e77FzbuZrPj
cTHTD7jbP8/vuO+v5+R2xfPv7ut+UPyI+wN6jroD9vyxu73wnNwuHhIvddcL
z+yv8Fn3uMHzWHfFzJX9mz29ubv9yRWvd9djzy+526PD4nLu/u5wav9/WCw9
udsrz8kTNs+73O1Xnnig+0Lz+y23F5te091+5cl+AjOd/TH7IXv//K67wni+
3N2f/Cue727/PHd294+eT7jbO8+j3DCPiK9112PPK91/Pfd0t4+efe7+6j/x
1+720nMLdzvmebO7fTwq7uuul56ruNtTz9NT77M+PrG/P9XPmj7Msvd9Jft4
he8btXPfsPLOH/uvuuXd2T9Y073vG9nHK8l/s6zled8Pso9n9PeJeL73/R77
+EZ/Hyij2Pd17OMd/X2cjGLfx7GPb/T3mzOKfZ/GPv7R37/JKPZ9GPt4SH9/
JqPY91vs4yGuV3D8ZE+3v89iHy/p70NnFPs+in38pL+/klHs+yX28RPXQzje
sqfb3yexj6/096kzin0/xD6+4noKx2P2dPv7IPbxl/7+dUax73fYx2P6+xsZ
xb6/YR9/6e9nZxT7PoZ9fKa/b5FR7PsW9vGY/v52RrHvT9jHa/r7ERnFvh9h
H5/p73dnFPu+g338pr/PkFHs+wz28Zr+/ndGse8n2Mdz+vsHGcW+f2Afv+nv
h2cU+/6AfXynv2+QUez7APbxHdenOB60p9uf/9vHf/r75BnFPs+3j/+4vsXx
oj3d/vzePj7U3z/PKPZ5vH18yPUxjift6fbn7/bxo/6+ekaxz9Pt40n9eXlG
sc/L7eNH/X32jGKfd9vHl+6Pc5dn+/Nr+/iS63Ucj9rT7c+r7eNP/f33jGKf
N9vHo/rz5Yxinx/bx6NcD+T41Z5uf15sH6/q789nFPu81z5+1Z8PZxT7vNY+
ntWf72YU+/zVPr7Vn69mFPt81T6e1d/Hzyj2+ah9vKs/T80o9nmmffyrP//M
KPb5o338qz9PzCj2eaF9vKu/379Sjnfrpa4r6ONff7HjYf15X4Z1/TOr2PGx
/fmbfbysP6/LKPb5m338rK+vZhT7/M0+ntbXXzOKff5mH1/r67MZxT5/s4+3
9fXbjGKfv9nH3/r6bkaxz9/s43F9/Tej2Odv9vG5/rwuw7rfwS/XD5PH+Xze
1s984o67hqOP3/3W9UO/XC/E+nqg37r+57eu9/nl+h7W1+/8Rl+f88v1uGTH
9vGn37oe5zf6eptfrq8ltyOlrONDv9HX0/xy/YzjSX1857eun/mt62V+uT4m
2xt1/csv17uwvp7ll+tXWF+f8sv1KKyvN/nl+hLW14v8cn3IPWxpcs46fvBb
14P8cv2H4w29//db13v8cn2H4wW9//Zb13f81vUcv1y/wfp6jF+uvyT/+ylr
/+i3rr/4resrfrme4v7z2wlr/+W3rqf4resnfut6id+6PuKX6yGY6x09U4/b
sP6m4OygN11f3/Bb1zP8cv2C3vX2NZyurzeE0/X1hXC6vp4QTtfXD8Lp+npB
OF1fHwincz2AzvX5fzgds/3AfN6059P1M/6eu0w+n2d79KU7vwryeUNyP1De
YftSwh1XOYfzdT4P4Hw8uZ8s67A9Oelu98s4nB8n98NlHLYvee5ySjucD/d1
51tGXO7SO4dcu6OUM2DxgkZTnOXyeM5nOf9leyP3L3w7cnmdcqvMHrenUg7n
sz3d9biU81ZG3xsOdFhpOrvbpZIO5588HnM9nfPFp9/9/atNP5SQz+d5PtM5
/2R7xPVzzgeTHZRw2B69n3j4qbavpzlr4sdee2P/5tRxZprD9ih53JrmsP1J
vs4+h+0Nn6/f2WTRD0en7Uwd956X7Q2flz9Q5dM7Gi/eZVwOLpDznWTX58Tu
MOuflfMTHo+T11HOyPkEj8fLU9uX735Jq1rrp5Bc7+V8gOdjzifY/rir68KE
bG+Sx/Un5fjdfdmrJcTJ/WJcjrd5POZ4ne1Pci0/Icfb1dbXvvutznHj75W5
5ra/vOkcH3M8zfbnoLteH5Pj4ePu6xITc72V498fU8cZbH/GprrneHQkx12p
7dEDqe0ix59DUtsZzHaZ4836qe0426PdqfP26e6EPLn/kb6Tx2UV5XiCXucc
HPTb5ANzpC/27+xvh85ZX/bX+WtkfWd/zPrM9RHW30iHW8uGt24yy9aP9xW8
muaUfqXxqAHxoHxew/UCPm/h/J79GfvDi3ctLP9e/3zzzCV39VvSICTrD/uz
X1Pry6xgiZYXVfHWF/ZHvJ8rBjcqO/3jsLwfzT+J3/7UoEOy/eT4F+vtd5aY
6Rz/Yr19zxIzneNfrLf/WWKmc/yL9f4hS8x0jn+x3n9kiZnO8S/W+5csMdM5
/sX6enSWsfdH+vg3y9j7I9bHNqeS15PZn7C/4PiU7SfHc3yfCfN5IsdzfH8J
s75xPMf6xvEb2z+O19i+0Bm9cjyRPf3VXnc/edC021nx+I6a/P3KXearnSs6
zg54fy+Jn5ffj8L18+/c8VV0OA/geN+n/ldT+uT+X66HJ19X7/XCXH/n+27J
+c+W15Pr33x/Dr835LLcXoHSzrfPtx8yqcpS+T4ax9d8v4T9He8HvfN+YL5/
wvVQ3h+ub/L+YL6fwvVN3i+uV/L9Msz3V7heyfvJ9oTvl2G+T8b1R95vtjfs
PzHf/+L4mO9vcX2L9YPrVXwfDPP9KK6HsP5wfYPvW2G+f8z5e5PUcT7n99j+
e3f6+7hB8ZLUep/syrP+ftR0OV/VPUZl+8/nDxwPcb2f7T/X4zk+4PooxwNc
v2R7zfVFts9cb2P7zPWtOu7rXkHW/+R2tIJ8nyb5OpST49Hkis79yNNlf8b5
LuenHG9yvsnxIvsvjtfYf3F8xvEXx2Mcf3E8xvEWx2Ocv3H8xfEMxzecH3F8
w/kOxyfusE4dk+ON5M8RlfMd9l+c73CexfkK+3+OB/i+K+8nrwf7d77PyvvL
68P5Od9H4/3meID9P33x/vPzs//m+2WsD+zfOX/l+2asH5yfsn+nP9YXXj/2
73w/kvWH11N/Pp9lfR6cZX3+m2V93ptlfb6bZX2em2V9fptlfV6bZe3/wnK9
sRPXUVPHe1j//fQN0i/bbz6vZPvL509sX/m8iO0nn++wfeTzGLZ/fH7C9ozr
7WyvuP7K+sLnjawf9ud7fP7G+29/HmJ/XsHnCbyfXF/n/eN6NusvPz+/HwBz
Psn+jP0Prw/7G0zf7K/Y//D6sb/B9M/+iv0Pry/7G8z2gf0VffD6s7/BbD/Y
X9EL7w/nb5jXl/0V37/k/eP7xJjXl/3TqdR1ad5f7rfBnI+wf+J4gvef1x9z
vs72hOsLrB98vx5z/s32he0P6w/n75j9D9sbXn/WL15PzPrN9ofXn/WP1xOz
/2J7xOvP+sn3xzH7N7ZPbt61Tsv6y/EApi+2V7xf+n4+735BzmfZfvH6cn2V
14/rpbw+HK/x83P9kJ+P64OMn+Mbxsd+hOVz/Y33n+8v0Bvj4f3m+wNcj2F8
vL983s/2g/HyfvJ5LD0wft4/Pj9l/efn4f3i8062N/x8vD98Hsj+mJ+X94PP
47hewM/P68v1a15Prt/yenJ9dnegZK2Fc0+aGw9lVcnpud9sufO260qUPGEO
pL+++XzpsLn64V8nv3drWWfaltmP9K/0p5nx2qaL2l6a5tT/6tq5R8t413f4
fJzXg8+z/Y8//8qK+Qnjb/uZeWHUPjkeOLuo7LWDzx6S+1fokZ7ojeN7epLf
V5vqhfWdHjgeZn1n+8L6zP0HrK8XvJt7cd9j3vWGWInTM0q9Ud657Z2Fz817
JdPUueWn5zfXreh0azEqMdA3zky94s4mG6qXd3ZvPHWg9ZDfzHv1r65WfmsZ
Z1KNow3OVptn6ly18uLP23u/72Zl7JWtre/37ue5utW0Tm8f936/S7MVX0av
/K+U3K+z/vFvpz6b8K7XzX3j1ysH3l3CeSf1/Y6552cmJhnv/pn0YZcsG/Ze
mnPfP7c83uuXzSavf/tVrUZ698sc2fGJM3Kzzzl9evpD127cYv74/PFLjmz1
yf0xNw2Onund0Of07fBYi9DpbaZqZpem7zTw7oe5cF2tZ4/sP2dqfZ72UJMr
dpov7pr2WOXAaTm/CExvtPbmyxPm1dU7Nj82YJ/pkvHzCx8Wms+/b52QWdD4
W+/+6V6T/qk58/O4fP48+fou7Wtv9u4fXpFeOXZywb/m0i03mpm7D5k+X6f/
2ahSnqmyf8dC/wu5pvu5x8u1vnqvfJ75a37dTu1Xb5LzjU/OXHDvf2d3mAdL
vnw+PTvPXHtJpU5fjV1m4sMvr/P6I97fF519/6jTC5oXnm/MWLDJv6mSE/yo
zXdrTwwzb3Qf0rbTz+Wd+b/ldPmyxHfm/nfuq3VbpzJOjXfnXPJkw4Wm3V+j
Pv4ht4xzz/M12/zw+gLz66Sx18ypWPj+9jn6wog3F5tv+tyXu/l0KaduVt5T
rUYtMx884Pw1s3kpp392vfwdE1eZihsCa/77osDUnPlIm4W1d5upv5Qetafx
WeN//e8e9W7Za16s/XqVpleeNUtWZo6q0zBkvq5+3577s+Jm4EPZbz5U6YC5
9dYqJb8/GDMTqq+c+vbksHnlw1duDu2Kmbavzx3+8o0HzZZbLlz6wdg841/x
0rXd2uaal2f1emfjTYXnb+sPNVlxX665+sg3V942Is8sfLr9c09szjWtatRJ
PFsiZKZ3n73Tn3/YDN/Ty8xtHjSxzOu2pL2fZ7Lvv7m0/+9Kzt7Pkq/P8IrP
fTsnrYKzfPM9A8a++aO5vv663IYTyzi3jXrzWSfvL1Oiacvt/9Qu4ww4t2Nh
xj2LzdFlN/jfvL2088jjpTs1fGq5qTNk7MbwxsLXo1TGtyv7rDQ121Z+/Yvh
JZxjd3/beOnSjWZ/et93Jv6d5sQ/bJDX4cBm80eHNcdD83xOxzrLbupyxVbz
eCXfhYPL+Jx4lV6h3x7bbsZPCY558O1zZv6zW6+tm73L+I7Gbu9y4qz5oXHs
/Z3V95qh3y6pNrDZGePvN+2atA9yzOtp5Rp0WnXK/NLkkraPTt9nxowa9OWg
306Zfr0O+x9utd9c+uw1vU7VP2l+/WH4gxnpB8wj9Sb+9PXLx03/4PhoaG/Y
fNt4a8nLmsXMBRd9cNPJjw+aRKf6gx8KRUyO75UO/36aazb+unj09w0OmzZN
H/7+rYsOm7oTlpwY8kKOee3aD16/Z91hU/DDhirnt+WYS8oOG/PP3Xmmx8xB
a9K7fm1+mV7zjYJonslpVG3norsWmmr7dmaMPpRnRteLVf6hWab5ft/ipdf2
j5hZqfsPH9zS+qKX24wxl2/+xJn2UEUnb/ej/xva+ivz6Mf/6/Phce/3r107
4pa5M8p613Oyvm39/nclyzulGvT58dF7pppzC0Z+1394Oaf6f2l3vFtyhvms
Wtklbz9Qzum1vsaxcy/NNG83mfjH3I1lnZt3V/y125dzzOBIXlalP8s46U2j
m//aP88MbZnRf+t3ZZ1WdedUDQbnmt+H39l/deH+dk7TROsqT843pb84+mys
svf7sa689IqWQzK84/Mx0RuXd1lSynl0w6SBLZevNFuyKxz88CHveD380kc/
NfzYO17/ZlGP20etLuFc8FnNdS/v22BqVl3+8PLaJZwp1e9785mym80PR/7X
akmPNOeyWcd7fXvdFvO7v9Hp1n/5nIO9rj06rvE2s+PbPe88FvA50Z7tn+3z
yDYzov7GpT+dO28aHG9/aPPAHearj+49/NkR7/6/VqFx3ZeWLDBj3/y5/Zbo
btNi5nubflvh/b6UMxf0PNL9ce98IX/k5KV/7j4jx1+5W/vV+t8Tp01+xctn
9rpyn6nbpd35PbknzZivz4wbv2K/GdinUsc2t8bN4p3fDrhs6wEzY9GvDVe1
OmF2N9x2+Onnwube9wc3fy5wzEz78lBap3UHTbeu8wua3HfMzDjz/Mc1yh4y
bTZXOnJgQNTU/Pm9CQf7HDKNm5Wf0n3wvyazzCePdTl8yByZtvHlh2tHTYuh
5b/vWni8fOyBga0qPBMxD43feF9Gg8L19Z2Z++MrDpsnP+9TtvuAXLPokk/j
uwq3s3tH/5Dpm5Nrvni1fdPOX+aaJbdmXXLj1FxT7Z/w/JoND5rWrwz4vdI3
h82h32r8b9dDYXNJu0313vzrsLnh7gtf6X7ZfmMa/9Fs4wV55pHHB31Q+bI5
5qfbxvzxX16emXly0KjZHVaZId+V6LukTcTMP3Ow2V8vbJfrSROX7vv04ksr
OauO1xn66XsfmzJzs4Ljt1eS+3lPlK7c/fI+5Z1fuu7a+XbQu1/34Igu6a+0
m2hK5ZX847EfyjknZrUd7dwdML/fteXi3n+WczY88EWDvd9PN2t79Hw/+3hZ
ud5Y598/Dz9SuZzz/LaqwzvHZpnVS7o6X9b27tf9vPqGvnX/KZ3a3y4xS6/f
2Kv8NaVT968tNV9tHXFhmWHe/bWzfo6XLvdDKSdr6up36r20yvy3/asxTxwr
6ZRLrc9XXFp6bfUlJZ2qE5t1rd1ynbmp2wPXnLjeW793j2j72ba+3vnyd4/W
/XTZ7975csunLt22q5T3+6J61Ng4/9KO3vlysP2xtn3SvfV3TJOvp3eqfy71
/dTdpnWNaicG1vPW35b7Kg5yZp81a1PHqyv7Pzi58vfe/agDS056JPfBfFP9
jTMDBi0vXL/7N652c0Nv/b5kduMPx3zinY/v+Pt097MPePePVknf3XBC7ZNy
fpG+qM2um6efkOPXCZ2vubB59ITxrRgd7Z8WNgODw2JXtj8u5xdTTx19cO/i
Y/L9rheOjht8xzTvftAGby9t1eBQ1Oz9+J65R272rlfedc+8cdW+PWS6fHp2
Wue4d32A+zsnrH6rTsW6eabVquqPLh64X44nOr8T+bLDHQeM+eSGck3+PSz3
e44c3WfjL8vyTPvBC/7KLr3JzLr31e9+He/9vgH/8fZv3xjOM6/dO+HF254s
6zgP9rutz6k/TN2Wa+fc36Osc3RA5OZbFv0h16eWLnj3tG9J4flQYsn2S772
7o/cs7TlnpO5ac7vm84+X+fDzean/PuH+5unOas/nP9SeMEWc+0HeY+svSfN
Gd7n7bzbRm4x5+s9c+Cl4T5n2+IuV7wb3ma6dtt78+LRPqf0iq7Tz0zZZipd
fstF94z27p/k/OXpkqXT837cIecjt03pcucd87z7KaOBtJfLLtlr7u1QqdG+
aML8OTGt1PKX9plLx12x8niV0+a3Jzv+7/In9hnT9N5v2geOm6EVa37S6/aw
aXjuoflDLjlqpp5pXLnD9kOm64IbGs1vX8mpVntRlZ3DPjRdqndu+nDlWabx
Y+fGPfRyxLzZu2bv3NKVnfTJgydM/V9vs6zbR1kvfVzJWd7mwi5vNRxhNvc4
0bnC/h2mwoMDLmtyf555YVPWpfOyhpmWf6/78FC/iGk2r06Vv3fMMWUGl6zb
4sWIKR2b3L1fjV2mqv9Iy7E355m5gz59/lDbdabZ1Q+0azs/z5hvpj5yZ+sN
Zv690wPDfvO+f/ZJhbx3ysXyTIdJ329ZHv3VOC9VHls/6n1f4o22P9/5ymsR
U/2GGv1KDKngbBnYcfXNM74z1ep/M7TnnRWctyb9/EHT+d+b8nVPHim5trxT
IXbF0xXqTzL3bmpd6Y2u5ZzF3x/asXfLb6Z53TeX95hRuP3p3aPbpR1nmhsn
jM+c+rS3Pdq18aMpS7LLOB/Nr13xjskLzZacFre/P6CM89i4UVlNv1tkTj1Z
esGYH0o7fdYPaFi+8Pjq9m4///tikzLOTeO6PtZmdbYZ8Nxf/bJqF04f+fWl
g+qsMHu2X7XpuTElncaPXd10YdW/zf7Dlzywsmop56KaH7StPHytGTGxzYV/
hwr3n/fdFtz643pz20vfXHfmsZLON7dXuvv+duvN6u8za354YUknf3Bw7Z6z
603H6KETjVuUcKrv2dn0yOiNZteciT83vqaE80/+sBcbLS48fjvTbdsvz5Rw
WpxsffKdhptMZPw/ta76Nc3p3/SGW+o+EDRLR9R9qXWBz2lXos0dR57ZagY1
fOfuUm19zoJrvply5sPtZvT5yU36/HHObLitZL6/+y4zoE7gsd7PnjVTbzo4
PH3HHvNZeNCcQe0KzLJDg28ZMmKPGdlqeY3gmTMm6753v6nxRsjs+vTz3iVy
8s2VF59cGesUMqEVPT+b8EK+6T6zXMlbpoXMkLrb+zV+97S5f8/NPdu+n2Ne
Kvn58RpvnDF9Pm+/7duuOebLDTf8927stAmM/ufsJbNzzInAqoHBNxOm47T6
r85dsM88MvW/ZhedPGlmP7e4b96t+83Sb87fsPD4KVP53b9rvV99v5l57pm+
5T6Im3XfN7qiTv0DpkzasN+7Ph83P86ZP+RUiwPm3KrcUZ/1OWk2dJ17//na
B8xV7zcZ/Nb+uPl14/gj0/ocMI+2HLKp/AMnzM1XHAy+v+uAeeG6fzLPzjlu
ft1U8NPzc8Nm8JY2Hy2/7Lh5YPNjS7ZVOmgumXD3+fT+x8wL13ecNOmVg+bd
X/aue2J0zExs0TR3fOeD5uYr321Y6paoaT3ixgk7yhwyJRpfcH+v9/810+vP
axbpnWtqXV2te+tmEdNh7UOJBYFc02Dc7XuPZoTN2GoPvrv+psPmubHTfN9s
OGx6NXqx4s54rjm7f9WlFQvP48dXeqrqn78dNrdvfW1x5Q0hc/KqYeOrP5tn
3q50w8LMnC2mdu6UMq+eyDOLUp/nX9TmqQrHe/Y3V5XJL5s5r6Iz7sTJvk9P
e9Jc1arZ3gODSzvz231Q9e2Ky8yKtjPSZ71a0nkmu/vLY/f+Yz65enityT1L
Ovdvf+hH/1XrzdsXt3u1WuH5cd95T7aY2HWDOdum5F0zm5ZwnK939D4+c5O5
d8u4V5vWTXOCR97PDB4Pmvjxdc9M6u1zptQ8+c32i7aZF3YOrrEou/D8oere
010u3mamDokPK9X/vLmxXv1hs1vuMMP6NDnwywU+x2l01+gRhW5+55TW7+w/
a7Z9WTfR++o95vYPH32m4JazZuQbD60YVydkOgRvb1Vj9hkzenfrg+dvzDEf
1G048uxHZ0yFi7/YbdoXnm9MffHgnFUJ8/ovP//+ZKl9pl/fcbUaTz5tpj97
32W9ojlm0KTWpy6bfNKsvq97k+cO7zf3lpre6K1vT5qVVSL1/jq135QbcWHu
iuPHzb68Tqeqfxk2zU7uenxei/LOljmXZwzc/4sZ1qDfdZOe8D5frtHk641v
ZKU5fI6W0/r3Epu37TLhB2ddPuvXPFPvlueu/WJkRedE7ayHXh46Wj6P/aPf
Za92fuJnc/rTz8ut+bGk89GS39YOzV1nepQY13lqnTS5Ptzv/JnfVvTyOR1S
13+XHq/7YJXnvM8jR5nmlz5XOd/cW+buTrnHQnL95YvEFbXqz9hvOrWpcqRk
hT3momn3Tt1deJ56Teo6VMbmMeO+KTzfPDXr7/fyq64z/8QWH6ma7n0eWOK5
MouOVI3I9a2ylT8sseHfNWbha8vG3jGowLRvvnxz74f3mAaPXdpzwrQKzn/T
Ng9vmPeJGbDrqRd3zynntIzUuO37zMmm+wsPf1KjbDln4s/ZnR+5OGD6zwhM
axYp7dRY3uPp4MlF5uC+04PqjSvlbL106YCPPlxhHv3f+e6f/Jvm9MzYt6fV
gE3m1fpT27dqmeaEG9bYnTcxaJ4q/4PvyZE+p/vYDquGz9lqyl/x3+WtA+fN
hpevbXxy73az5USF0DNtz5nLRpUpk15+l6n0yHtbzp1PmN8n3tOm9e4cM/Di
trc2G37KXN5p6BRfeJ8ZtS10Z872E2ZgXb/T4qMDpmu807JtpWNm6K7PS2y7
7KB5Z0POOyODUbP64Sd8G/48aA4NurNl1wsPmJN17lvQqN9hM6HvuDaLG201
ne9eN6X1q3nm9Vt/z353+3pT44HR066/LmIOjuj7bMODFZye+3uNv+2N902t
d8uMOrK/nPPRC43umfzRT+arxbeOONy0nDMl/dG/avumm+3//DW0xydlnSPH
d42dMWqWue/IoCnbhpd2pix66+ZjRxebSV8vvWPMwJJO3Tat1m5d8rdptOPO
yRuzSzhLhq4KjT633vzS7ee/M1ucNTMXrunYtN5e8+Xy+R3K/HHG3JPfrtuf
PxVuj0N1Yz9efcyc6dB4VrmxB83PBfPWtN5ywAy77u3RuR0Om6eWf7J5SPXt
Zu6u3PQGT+WZ0F3Xf/x6tWzj/Lhm2pX780zP45ffsOzDcs6eRWPHN5v7i2lT
d9aIf3eVdXqMHvbJsVtmmKeXf/FHzVWlnY7f7hrXNivbnBo5bPrwQaWcG2e2
8/dps9Lc/cqLnfa/4HOuP12n38PXbTcXD71z6u7HfM6KZrdM7dh9u3l197X/
bH/xvNlZ/9d+A9vtNPUXD2n4dLVzJidwd+7UnrtM81ETe+6485TZ0fGxH9dU
2W8W925ycebnJ0y3RA3/wpkHzMdnM04H34ua0t+9V3VxzkFTeWXihapt95u/
x+b1r/vpYXPRku5DmgYrOq8NvaNg7vdtTYnzM0ftu827/rn5lZ71+k4qMHtG
fnPqryp7zNapwb4P1Sjr+C/otX5U6d9N9UiTjcval3J2T6n/1ZUVCx8f+OJc
57Q0p8GSapPmPbzFfNa945trHvI55TeOmjtv4Dbz/ap448gd58216/MSrSbu
MOP8XT/dtarA1Bs8a1+JtbtNqS7dr/2tcH+bf9n6vY2ie82qWL+V9d9LmHKX
37qpx637zJjF8XqX3XfCjFx7b51bCs9P6711cP5Hf5V0BqY+j73v2DPVT/5x
Vj5fLfFnk9ib9+TL56mnxl1fe2Yt7++pfLH70pvn/eX9fuqs/PZDzka8v09S
dtiYnPZNvN83lHt+bna9Wt7vE7qyWsuvS3T3/h5IerRbmW9/9X4f7oyFfZpX
Pu79vtmLWuUdrznknJmes/2izX/sMo3qf9j/9Qu8388z9Osb9w8d7/29i6r5
I9+7p7P39yx+73X41cdmnDJT9s3pMa/lfjPyqwPpTzT1/n7EtE93XbRl4zFT
NnX/Ss3yVW585mnv96V88GSNLzrXL5W6vrra3P7bsQ07u5Z0nkh93vD04e6f
t+tfYPJS52tX13tx6srz3u83qfrn77fNGOL9fpM/t11XrtVQ7/eZvBKedFOJ
9d7vM4mcSPz02vDC/WWP9z/fN3WD+Xr2sh1/PlXaOdf9psOtMpaYqZfXq3qk
c0nnn2pdjt/82jrzUuYzF34/sYTzxpHEC7c+u9G83Snc9YnDaU6rTW8/vmPE
ZjNmYGyBeeuMeXNwrZL9N4fM1o4fb/mo70mzoMONFTt/st+8/uPxP8cVHv8v
eGhB03sKj/93+NPq7B2xzNz+fbuLq+/IM6/+cd1Plz9y0Dz5yCXNn6h92Fyb
ui+h5KIv2l/+8CH5ftI1kcwnW9yQZ7LnD1v/aeHrHruw480vrDhsdqXuy7nm
mQOzGp7Mle8H3Zl3RYchbebL+d8t3z/fo2aDXDOv9ITPvitVxqm6rsVdJ79Y
bOKras8etrmU89+StJcjj680VRq1/ez9T86ZuSP/23PFdzvNhQsjY84+HTOT
bnr31m5Hw+bwddVXhRb8bQa2/aj19SZixgwpcTrrwjSnYrefXn+12lZz9onY
Ja/MTJjYwxN/qZmxz9y9bWOJWPUT5qp/dr9U8/wB8+OSUxXf3H3UHBz3tH/1
DYdMi7FfV1n1YY75Lefm0Met80zN+NYlVSpUcAp2T1417ZWx8vcSlvSJlMxZ
MMwsn9eoeXhleSdr+YevPzFvojmac+n5IXXKO8G7NvU+1DvLPDCuyuo9Pco5
naP7J65aOsMs33Pd5a/+UMZpMGbCqk1//mlafPTwhXfPKeuMPPti9Ew37/Po
6z7NrnN03YLUen3MFLSYM2vu1oOm60PHO1x4NGJO1J9Yv1zZXNOq+/ZTkZZR
c2rdiO/u+eCQef7ZB/uWbhgxZfN+//umpoXHgze91jej2WEz55WcuzaNypXv
Bz330v3b3j5+2PT+pdSMD74Nm6wdDRZMn8X30ZeZxZ3Hbfm/rs78Har/DePD
jF2UikhIlqJIyl7PO6SSNkWyZkskZcmn7ImSLSply1JaRJKoiBAhe/Z1hrGN
sWTNWOfrB825ru9/cK7rnOt97uf93K/7rmrF8gNxgQdiP/pheYH5ig9IN4Uw
fmi04WM6fnU+23nRceF1ByeSGXUmPZ2Ig8PXfKffOmB+su6t3OGvutiRYLmx
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
     "], {
      {GrayLevel[0.8], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxM3WXYFdX79vE9sTtuAbu7FWyxCAvFQFHBImyxFVFREGwRBLEVFRGxwBbF
FrFb7O5W7I7n+v7P83fcz4t1nPuaNWvNmlmf2TcoyjL7HLHz4WmhUDh8+UIh
i/yqWShQbxpty2jVaLVoW0SruN48Wtn1ZgWdz9huzjzaVh5Xj9bdx4rRtos2
X7QO0XaI1jFap2jHtAqFo6NdHp+3iRbLKERZ2NpzNKL1ctK3rfvbovV2Mm8P
X6cUraeTtW7va3K9/tEWj7ZEtH7RFnO9W7RFXe8UbYFoC0bb2blQtN09bslo
A6MtFy0eXWFAtGVd94k2v8fv6PujHuRzV4g22LlitL2iLR1tmWh7RlvK9d4+
xrx7+Jr0DYwbHxBt5fg80vfJnozw/VMfGq1LtLWiHRKts+u94gGMjsV8HQ9x
35hj9Th2YLSDCvq8RrTDPG5tXDjXiTY02obRurJf0TZwvUY8+Gq0eTHnUVGv
F239aAd7vjWjHeE51o12tPsZf1hsyoGxjgOiHel+xvf181442hDPwT1825TN
46ONKsglTk/2M6AeXpBLPJ7o7B7tJCfPaLTH4fQUJ9bOKsgoXs4syBb1Pt6r
laKdXpBRDB7r57FRtFM9B07PcD/jTyhozazpNPczfhff3yLRdnXi72xfn/fj
goK84u78grxSTyzIK/W4grzi9Fwnz+9Cj8MO7xVeB0W7rCCv1Ld4L9nb23w/
w6Ld6mPU4z0f672kIK/YvLggr9SX+hjzXuRr0vddU3t1R7QJnoN7HdLSOzCJ
Zxuf94+cHG2a9xuz++Ei8upoUwr6jNVrCu1mr/O5eL+hILuYvbkgZ9zbjIJc
Uh8Wcx7a0n6uGu/CKtEGR32e18Uzvd7zMddNBdnF5nQnc93o69B3ZxgeFnN8
H/f6jJ8X9/qU94Y9ua8go6Oi3VvQe0s9q6D3lvrOgp4VXu5yYvl+j8Ps7IJs
YfORgixSzynILnbGFGSH755znHwnzfR8vBMPFeQVjw8W9A5QP+xjzPuAr0nf
074P7u1uz8H79KjXwrWfL8glTp8r6JlSP+vnQf2E1zQ22pNOntELHof3Vwvy
hNNXCjJH/bjvjfGP/X/3Otb3xztwj9fFM325IIs4famg94F6ro8x74u+Jn1T
CzLF99YRsZ9XRr4ZrVsSP9ei5dE+8HnXRnu/IIvUbxV0/lXR3nZOjvaOE8Mf
ehzG3y20u/7Ix7D8eUHmsPZpQaax9rH7sfmJk77P3M+Yrwpyzzv9hefA/nu+
Dmv90sc472ufy7v+s58dHn/yHlP/0NS7+120eQV9xun3Tpz+4nG4/tWJ978L
8oTTvwoyR/2Pj2H5j4KcYXCFROvjPn7zHNj/0/2M/8br5bvqd/cz/l/Ph8dC
ovcBI4sketY8g1Iix7yjSaJ+TKWJEpvsM4lN9pvkPS4nGoflSqLEeDVRYr8t
kS3MNhLZwl0tUT/Gi4nmYx31RMc4b834Hloj2rHhrpXILnM1E81B/YOfN+/x
iXHe8Jbelf9839zzoonuFZsLJPKLzQUTJTYXSpTYXDhR8owWSzTug2iL2zpm
l0iUOF0ukVF8LZ3IIk6XTNSP0+NiXW9EdopjSyU6xnnzJzrOmpZNZJe5lkk0
B/WPvj/8LZ/oOphYMZELzHZOZBSzayYaQ/1TU05XiWOrJu1mV0uUmO2SaBxm
10qUmN0gkVHMrp/IHPVKia6Ju3UTmcPs6onmY0/WTjQHZtdL1M/4romsY3Od
RP2M3z4+d4jWMdoaiebgHjZKdC772TORV9z1SOSGepNEvvG7qRO/mznxu7nH
4XQLJ05PiX0Z3ZLTbRLZwtrIltazXbStE7nE74aJngf3sKXnwHIv9zN+40Tr
ZU1buZ/x3f19ybp3TGSB/T8w0X7w/HZL5BV3uyZ6V6n7+Fz87uTE785O/Pbz
OJz2d+J0QCJbON07kS3q6+I3KYdEOzTannaJ376ej/dgd8+B5b3cz/hBiSzy
/bSH+xl/kO+DPdzFc3APg30uZockMorZg30u9S9NOd0v2v5Ju9kDnDyjQzwO
s4c6MXt0IqOYPSqROeodEpniWR+RyBxmB/p5cA+HeQ7MHul+xu/j9eL9cPcz
np9X/Dzk12TH+Jq4GOrE+Eneb5weZxM4Pd6J0xOcOB3u5OfqCI/D+4k+xlwj
fQzL4+J7ca1oD8Zv8kYlMo3H0U7cnZrILjbPjNY7kecrY9wVHeX9ZM/H+NNa
OueMaGf5XN7LSxO5wdF4+2Bvx/j5YvkcJ07HOnE6zonTCR6H6/OceJ/oxO8l
iZxxvQsT+cPX+e7H9Sm+P+7tAh/jvLO9XtZ0cSLTzHWR56BuhvUXI1+Kdpnv
CQuTEpnG6RVO9v/XpjxeFW1y0m7zaic2pzh5j69x8h5MdWL8Wif2pzmxfJ0T
y9c78TgjkWNc35jIH35vcuJ0upPzbva5eDzXz5t9usXHsHl/IisYuS3asdGG
RbvdidM7nDi904nTu5w4nenE5t1OvN/jxO8sJ2bvdWLtPifruNzPnuf+gNfF
3j7oxO+4MDk22mnx+VbfB+teP35v/VDY/y32Z3xLZh+JNjvRZ7w/lcgfz2NO
ItMYecyJ38ed+H3Cid+nPQ7vzzjx+6wTvy8nsoW1FxIZxeNz7sf1k56PdTzv
Y5z3mfeV/cTihZ7rRc9B/bn72ee5vg7vx6uJ3kn8vu7niN83nPj9vSmzb0V7
O2n3+44Tv+868fua52Ou93wMyx8kcozf932M+kMfw/IrXhdr+sjHcP1JItM3
RPvUyT1/7P7/9eEd31/4XrGfpton9mdeIpd4/CqRdVx/7cTFN05cf+vE9fce
h98fnPj90Ynf3xO9Gxj8JZFdzP7kflx/5/lYx88+xnmz4ve5F4W/P+N5/5bI
N3P96jmov/Q9se4L4tzzWzL+aCKnuMxS3SsG/03aLf/n5Fz+oSKJ5SRV8ozy
VOOwVkyV2C+lSiw3UhnFVzWVY5yWU/VjfEKs6+HIv6NVUh3jvH8SHWdN9VSO
mauWag5qvj/4tRo/51qpTPN+zJfKLkYWSts9dkh1DMsdUyUGO6VKXM+fKnG9
cKpx+F0kVeJ30VSJ2aVT2cLdEqns4nSxVP34/aupNSwYxxZPdYzzlk1llPdy
qVSOmWvJVHNQt6W6J+5nmVTXYczl8dwua8nRqqn84WWFVKbZ/xVTJX5XSpX4
XTlV4ne1VOPwvnqqxO8aqRK/66SyhbUuqYzicc1U/bheLtV98P3ROdUxzls+
1THWtHYq68y1Vqo5qFdJtRbuYYP4/Jc97JBqn9ifzVK9n5jdNJVF6g1TnYuX
rqkSyxulSix38zjMdndidqtUnvC1ZSqj1HzXd7WtzVN5xebGqebjnejhOfC+
hfsZ3yuVe37m93Q/43f0feBrk1RzcA/b+Fz87pzKCGb/berzTtF6p3KA6+2c
WN7eyTPq63GY3cWJ2T1SecLX7qmMUl/c0nNePz73S+UVm1v7eXAPu3oOvPd3
P+O39XpZ027uZ/z1qX5df1i0PX1N3o+9U9nF+36p/LHnA1O5wcggJ34HO/G7
jxO/+3sc3g9w4vdA5+q+NrawNiSVUTwe5H5c7+v5WMfBPsZ5o7yXW/o+uniu
QzwH9Wj3Y+dwX4f347n4te1Mfo3Lvz9J9VyxfIwTp0OdOD3WidNhTnwd58TI
XR01z1HRjvcx7A9P9T7g+gQfoz7RxzD+aPw6ZXKsZd34fJKPYXZkKpe4PtnJ
PY9wP317ed/Ys1N8r7iY5H1if85O5Y939LRU7rF8uhMjZzjxe6YTv2M8jnfi
v6aMj402LtVn3oPzU7nE3YRUpvF4rvvxfpbnYx3jfYzzLkxlHfsTUxllrvM8
B/WpvifWfYGvw5gBqZzi8grfKwYv8XPB8qVOzr3MieXLnTyjKz0Oa1c5sT/Z
ieVpqYzi65pUjnF6tfsxfpHvg/dpio9x3sU+xpquTeWYuaZ6DuoFioXCm3n8
7Ik2LSxc25LZFyKbcWybaLensojB21IZpb6efw8UOT3ajFSfcXizE+N3eBxm
b/ExvN/pY5idlcofvu5OZRend7kfvzOd9N3jfsbcn8oo7+W9ngO/t/o6rPU+
H+O8B3wu7+hj9oHTOan8UT+UyjT7/7ATv4848fu4x+E0bcnmk9GeT2UIU8+l
ckn9go9h9plURvG4eRbf/9HK0Z5K240/637GP+j1sqan3c/4Fz0fNl9OZRoL
X3kPeN5vpDLHeznX/bh4xYnZV52Yfc2J2Tc9DuNvOTH7thOzH6byhK/3UrnE
4Dvux/Lrno91vOtjnPdxKt/8854PUvlmrvc9B/VsP2++Jz7ydRjzku+be/7a
98qe3xB7cVPkZ9E+T/UZn1+k7U6/dPKMvvE4XH/rxPt3Tvz+nMocTn9I5RKP
89yP5Rlx3ekt/Xz73sc475H4dfjD0bLo+ymVb+b60XNQP+r7w98vvg6Wf3Xi
9z+fh9N//Vyo/0hlGiN/OvH7lxO//It+xuE9yZT4rWRyhlP84ZJ68Uz7wd4W
7RJ3f3s+3oO8Je+Z/dLP+MUy7R/j80znMH6JTPOxh/94Du6hlumd4f3omMkf
XpqZ9hjXrUyJ37ZMid/5MiV+G5neB8Z0yjQH9hfI5Bi/i2Yyyvrqma7JmPkz
nct51UzPgzUtmGkc3hfOZBq/i2RK5looUz99W/g95rkumeleMb5+pn1if1bM
5I93dIVMLqmfiJ/Ft8cz/YRrx8/0WdFuifqejrK8bJy7UqZxeF85U+J3zUwu
MbVGJn/Uv9kO35GrZTKN2eWy9vdjlUxzYH/1TP2M75LJK/ZXzdTP+A0y3Qe+
ls80B/ewVqZz8ds1kxX2ecNM51Kvk8k061o3U/4ebb1MyTPaKNM4jG+cKbHf
M5NFrPXIZKvocff7HSi25LFbtM6Zngf3sEmmOXgPumc6h/FrZ1ova9o0Uz/v
R4dMprC4pfcTF9OjHRHtyGjbZbKIwa0zOcZULycet3FieVsnlrf3OK7T28eY
awcf4z3YNZM5rPXJZBqnOzlx3TeTUQz2y+Sb928XH2P8jp6P8bt5Ps7r73N5
1w/O5AZHAzP5YG/vied5d0uW58R32JNhtBz1rGjLxLG9ou2d6TM+B3kcrgc7
8b6PE78HZXLG9fbP5A9f+7of1zv7/ri3/XyM83b3evkuOTCTaeY6wHNQn+dn
x70O8T1h4dBMpnF6mJP9P9y5jveWXNd7TGLzKCfv8dFO3oNjnBgf6sT+sU4s
D3Ni+TgnHkdkcozrSktmh0c7MdNnnJ7k5LyRPpdfLwzw82afTvYxvnvGZrKC
kdGZ7G4V7RQnTk914vQ0J05Pd+L0DCc2z3Ti/Swnfs92YnaME2vnOFnHIX72
PPdxXhd7e64Tv+OdmB3l+2DdE3yMvZzo/cT4B9GuiTY12mWZ/PE8LshkGiNP
h9MH4pnuEZ9fiO/P+6PdG/V9HWX2kmiXexzeJznxe4VzsK+DLaxNzmQUj1e6
H9eXZu3vwVU+xnnXZrLOuzUlk3XmutpzUJ/ve+rv+znQY+6xA/Z/RiaLGLze
zxTLNzixfKMTyzc5sXyzx2H2Fidmb3Vi9u6s3d0dmbzi9Db3Y3ma74P36XYf
47zrfIw1VVuaZ2a0Oz3H8Znc8d3J9+Ms3xP2X4l2sffikUwWMXh/JtNYeMCJ
5QedWH7IieXZHofZR52YnePE7NOZ/OHuiUxecfqY+7H8sOdjHY/7GOc9m8ko
Hp/K9I4x15Oeg/q+TO8n637G12HMvb5X+l71veLlhUym2f9H47nNbsnvE/Ed
+0zYrUc9p6XnMzfaax6H99ed+H3Did/3MtnC2tuZjOLxTffj+jnfB9+Rb/kY
5z3vY6zp3UzWmesdz0H9vufmnfgwk1eML1jU7x3fjvZlpp+RmP0ik0XqjzMZ
wssnTix/6sTyVx6H2c98DNdf+xh+v89kFF/fZTKKx2/cj+tvnfTNcz9jfs5k
nXer0ZLTH6N97uuw1p8yHee8X3wuZv+xD5z+nckf9W/eY/b/dyd+/3Di91+P
w+l/TpwWcxnCVJ7LJXUp1zHMprmM4nF4fN402mb84dxcc2A8y9XP+F+9XtaU
5OpnfDnXfNis5jKNhWVy7QHPuy2XNd7LWq5+XFwd35mTO8rsufyzpmjPhdHH
4hm+nOmfEcyXaxzGO+RKzHbMlZhdOJcnfC2QyyUGO+Xqx3Ir15ysY/5cxzhv
0Vy+MbhQLt/MtWCuOaj/9PPme2KRXNdhTCXXfXPPy+a6V/Z8iVyOP4q2ZK7E
6VK5EqdL50qe0XK5xuF6+VyJ9xXsHr+r5TKH05VzucTjirn6sbxYrvvg59hK
uY5x3uK5jrGmVXP5Zq5Vcs1B/ZfvD3/NlvyuEf1r5vqM3w1ynYfT9XM9F+q1
cpnGyNq5Er/r5Er8bphrHN675kr8dsvlLLe/1PUuufaDvd3ELnG3bq75eA82
yjUH9jd1P+P75to/xm+cq5/xu3o+9nC9XHNwDz1yvTO8H9vmcoeXLXLtMa63
dOL3+Xg+z0Wrx+c+80UdZtui3jzX+8CY3p4D+9vbMX53zmWU9fX0NRmznc/l
vO5+HqxpB4/De59cpvG7k5O5dnQ/fSf6OfJcd/O9YvzwXPvE/uydyx/v6F65
XFL387k46u/Ezu5OXA/wOLwPdOJ3/1wuMbVfLn/UnXPZ4Ttyn1ymMbuH5+P9
GOQ5sL+v+xl/YC6v2B/sfsYf4fvA156eg3uYryWzB0c7ylbY5yN9LvUhuUyz
rkOdXaId5uQZHe1xGD/Gif0TclnE2vG5bG3icdwf78CwXL6xeYCfB/cw1HPw
HhznfsYPydvfs2Pdz/iTvIdYGOHE6SfRrot2fbQX4357RZ4abaT7MXWyE4+j
nFieGt+v13SU5dNyjeWfwZ7uxP4ZTvyOzWUOa2fncozHM92P2fExX9doL8Y7
cJaPcd65uazzLp6TyyhzjfEc1E/5GuPcdvKYybkMYeqiXFbY5/NyvcO4nujE
7PlOzF7gxOzFHofxS5zYv9SJ5atymeN6k3JZxNpl7sf4eN8H30mX+xjnTfAx
1nRlLt/MdYXnoL7Qa+EervY94eJN/mwkfw4vPt+Y6/3E9bW5/OJimvMQ7zl5
qPeexOxNHofx6U7sz3Bi+Y5c5jB7ay6LWLvZ/Ri/wfOxjlt8jPPuyuWeXyPc
nss3c93mOag7tLTmqdHu9HUYM8X3ynu8a3xPvhRGOvHPnXL5xvUsJ37vdeL3
Pid+32rJ+EPRHs71Gb+POPH7RC5bWJuTyygeZ7sf1zN9H3xHPupjnHe3j7Gm
x3NZZ67HPAf1g/Hr5zmx/oR/NunrYJef7fxalV+DvpTLH3v+bC43GHnOid/n
nfh9wYnflz0O73Od+H3FiV9+LYwtrL2eyygeX3U/rl/0fKzjNR/jvHdyWefd
4t/JTPJcb3gO6mdyvbes+21fhzHzvPc4+jSXP7zM39KefxDtQ+8/fj9y4vdj
J34/8zi8f+7E7xdO/H6XyxbX+zqXUTx+6X5cv+v74H36ysc47z0fw923uawz
1zeeg/rpXN813Of3vifM1oraG/ZkQnyfbRJtbuz3T7ncYORnJ35/ceL3Vyd+
3+bPuUT+Ee3PXJ9x+1fe7jcpyhbW/s1lFI9/ux/X18X1p3XUe/CPj3FeVpR1
DPIfuGGduf7zHNQ/5npvWXda1HUY84Pvlb56UfeKl1JRz4X9LxeV+K0Ulfit
FpU8o0ZR4/DeLCrx2yoq8Tt/Ubaw1qEoo3hsK6of13lR98HPgfmKOsZ5xaKO
saZORVlnro5FzUG9UFFGcT2vGvsY7c5ofSvxa6toC0Vbuqifl5hdqiiL1IsU
ZQgvC7Tkd7E4tnix3fIyRY3D7BJFHcP1skUdw+9KRRnF1wpFGcXjckX143r5
opK+FYvqZ8yqRVnn3Vq5qDkwu2RR12GtqxR1jPNWK+pczO4R36WvhM2F+Gf6
0T6O9lscX6OoPWb/1ywq8du5qMTvpy3ZXC+OrV9sd7pJUYYwtXFRLqk3LeoY
ZrsWZRSPt8XnodGOjbZBUXNgfKOi+hm/elHrZU0bFtXP+M08Hza7F2UaC7t7
D3jeWxVljveyh/tx0dOJ2c2dmN3CidmtPQ7jvZyY3caJ2R2L8oSv7YpyicFt
3Y/lLT0f6+jtY5y3U1G++ffbOxTlm7m29xzUXYp63nxP9PF1GNPN98097+F7
Zc93Kcr0wtF2deJ04ZZs9ovWv9judE+Pw/VeTrzv7cTvvkWZw+mgolzicYD7
sbyz74N/1jLQxzivr4+xpn2K8s1cgz0H9VpF3R/ff/v5Olje34nf8+I7rFu0
18LrjZE3dNS4g4oyjZGDnfgd4sTvZ/z5kcgjoh1Z1GfcDivKGU7x19X1GO8H
e3tMUS5xd4jn4z04qthuf6j7GX+294/xR7uf8ed4PvbwUM/B3h5f1DvD+zGq
KH94OdF7jOuTnPgd4cTvSCd+hxf1PjBmtOfA/qlFOcbvWUUZZX0n+JqMOcXn
ct5xfh6s6TSPw/sZRZnG75lO5jrd/fTd7ufIcx3re8X4VO8T+3NBUf54R88v
tnsc53NxdK4TO+OduL7Q4/B+kRO/k4pyianLi/JHfUBRdviOvLQo05id4Pl4
Py72HNi/zP2Mv7Ior9i/xP2Mv9b3ga9FWlr/xGhX+Vz8XleUFfZ5ms+lvroo
06xrivPAaNc4eUbzYs7voh3GOuL7+fXwvljUtxZlEWu3FGXrGI/j/ngHZhTl
G5tX+HlwD9+3ZP+maDe7n/GTvV7WNL3Y/n6cXJQpLN7h/cTFoqX4WRf5frR7
i7KIwbuKcoypmU483u3E8j1OLN/ncVxnlo8x1/0+xnvwaFHmsPZgUaZx+pAT
148UZRSDjxXlm/dvto8x/gHPx/g5no/zHve5vOtvFOUGR4u3tJ/PR3uyqPcW
y085cfq0E6fPOHH6gi3g+kUn3l9y4vf1opxxvVeK8oevl92P64d9f9zbXB/j
vCe8Xtb0WlGmmetVz0H9n58d9/qm7wkLbxdlGqfvONn/d53YfM85xXtMYvMD
J+/xh07eg4+cGJ8R38fTO8r+xMie0d4Muz/E87wxjn0a7bOiPuPw66Ic4/qL
ovzh90snTr9yct43PpdfLzzr5817/K2P8d3zZ1FWMDKvKLt3RvveidMfnDj9
0YnTn5w4/dmJzV+ceP/Vid/fnJj93Ym1P5ys4y0/e577X14Xe/u3E7//ODH7
ne+Ddf/rY+wl/9MJ9hPjL8dzfSzaIvx77pL88TzSkkxjJCsp8ZuXlPgtlpT4
XaIl49U4VivpM37rJSV+O5RkC2utkozisVFSP65LJc3HOpolHeO8TiVZ592a
ryTrzNVW0hzUSUn3xLo7lnQdxqxYkgP2f7GSLGJwwZKeKZYXKimxvHBJieVF
SkosL17SOMwuUVJi9k9+7cqvd+PzCiX543rLltqd7hffvW/FM14qzpu/pPvg
ffq7pXOWiWMLlHSMNS0fnz8vaq7lSprjc7vju5Pvx5VKuifs9yhpb9iTziVZ
xOCqJZnGwmolJZZXLymxvEZJieUuJY3D7FolJWbXLikxu2FJ/nC3XklecbpO
Sf1YXrOk+VjHuiUd47yNSjKKxw1KeseYa/2S5qBepaT3k3V3Lek6jFm5pHul
r6fvFS+blmSa/d/Mid9uTvx2d/KMNvc4vC/dktkto21Vave7XUm2sLZNSUbx
uLX7cb1xSffBd2QvH+O8TUo6xpp6l2Sdubb1HNTbe27eiR2cmN3RiffdSvLH
z8mdSnKDkZ2d+O3rxO8uTvz28zi87+pjzNXfx7A8oCSj+Hq5Q7xr0ZaJ5zE3
Mg2ry8bnvXhGJfkcVJJLjO/tY4xP+J/btOmdGOj5OG+wz+X9O7qkPWbPDyrJ
H+72Lckxe7ufk/3f34nfA5z4Pdjj8DXEifdDnPg9qiSXXO/wkuxi81D34/qf
lu5rz2iH+Rjn7eP1sqYjS7LLXEd4DurPot0Y7aZox/ieeCeOLckrxoc5MXKc
ExfHOzF7ghOzw52YPdGJ2ZOcvN8jnNgf6cTyci35HRVtdKnd8hklmcPgqSXZ
xelpTlyf7uS8M30u9g/082afzvIxzL4YPyseipbFfo8pyS5mz3H2iTbWidlx
Tsye68TseCdmJzhxep4T+xOdWD7fid9349qlaLvH56F+9jz3BztqPy+Odon3
Fr+XOjF7tu+DdV/mY7wHlzvxO8mJ92tK8sfzuLIk0xi5yonfyU78Xu3E71SP
w/u1TvxOc+J3ekm2sHZDSUbxeJ37cT3F87GO632M8x72vrKfWDzcc93oOagf
cT/7PMPX4f24paR3Er+3+Tni93Ynfu9w4vdOJ37vcuJ3phO/t3o+5rrbx7A8
qyTH+L3Hx6jv9TEs3+x1sablW7J8P3takulToj3k5J4fKLV75xje8T3b94r9
t71P7M9TJbnE45ySrOP6MScuHnfi+gknrp/2OPw+48Tvs078vhztopLsNfjz
LG0y+5z7cf2k52Mdz/sYxl8pyStOm22a56Vor8b38HtRrxjP41HfE+ueW2o3
fkVJTnH5ju8Vg6+XZBrLbzg5900nlt9y8oze9TisvefE/vtOLH9aklF8fVSS
Y5x+4H6Mv+r74N360Mc47zUfY02flOSYuT72HNR8Z/Bzj59zn5dkmvfjy5Ls
YmReSS7x+JWPYflrJwa/ceL6Wyeuv/c4/P7gxO+PTsz+UZIt3P1Skl2c/uR+
/H7n+VjHzz7GeX+VZJT38veS/DLXSi19/i3aF74n7udPX4cxrbL2HEdZWf7w
8m9Jptn//5z45X8aR+I3KSvxm5c1Du/FshK/pbISv4901LWacaxallE8lsvq
x/Xfvg++PyplHeO8f3yMNb0U88yO1gqjH0TrEO2FOJ6WtRbuoa2se8LsKmXt
DXuyUFn+eEc7luUGI53KSvzOX1bid4GyEr8LlzUO74uUlfhdtKzE79Jl2cLa
EmUZxeNiZfXjesGy5mMdi5d1jPOWLcs6P+eXKss6cy1Z1hzUHcp6b1n3MmVd
hzHzlXWv9K1a1r3iZYWy9h7LK5aV+F2prMTvymUlz2i1ssbhffWyEr9rlJX4
XbcsU1jrUpZRPK5ZVj+ulyvrPnifOpd1jPOWL+sYa1q5pXnWiWNrlTUH9vn9
Br+35vfS65V1Hd6PDcqyi/fNyvLHnnctyw1GNior8btxWYnfTcpK/HbzOLx3
d+K3hxO/C4epRuTW0bYoyygee7of15uWNR/r2NzHOG+PsvaMPXw9vks/jLlW
jXtdKHLBNtnf0/146VXWtXgvti3rncTvdmXtK3u+vROzOzgxu6MTs32cmN3J
ibXeno+5dvYx3oNdyjKN5b4+Rr2rj+F6G6+LNe3mY1juX5ZdjO/u5J77uZ++
9cvaN/ZsL98rZoeVtU/sz75lWcTggLLeAewMdOJlkBPLg51Y3s/jeL/3d2L/
ACeWDy3LKL4OLssxTg90P8b38Xys4yAf47wjyrKJ90PKcsxcQzwH9d6+J9a9
WkvnHx5tw7Kc4vI43ysGj/ZzwfIxTs4d6sTysU6e0fEeh7UTnNgf7sTyx2Fq
8WhbxucRZTnG6Ynux/iRvg/ep5N8jPOO8jHWdHJZjvE+0nNQz+mo9+DUaKeV
9Rmzpzsxck5ZLvF4ho9h+UwnBs9y4vpsJ67Hehx+x/gYc43zMSxfUJYt3I0v
yzFmJzixPLEsuzi9qCyXvIvn+xjjz/V8jL/Q83HexT6X9/J67zd2rizLHEYu
Lcsxe36ZE7OXOzE7yYnZqzwO45OdmL3aidnryvLE9aaW5RKDU9yP5fN8f9zb
NT7GeZd4vaxpWlm+metaz0G9eCV+tkR+GG31lmzeGG16Wb5xMcOJhZudOL3F
idNbnTi9zYnT252803c48X6nE793OfE704nfu504fSu+Jz8Jw2vy37yUZRTL
9zrxuGz0L9Mmp8tFnhL5YLQr/LzZp4fKOo7VZ8uygpFHyrKL2dlOnD7qxOkc
J04fc+L0cSc2n3Di/Uknfp9yYvZpJ9aecbKOm8p6/jz357wu9vZ5J35fcGL2
4XL7O/eij/EevOTE78tOvL9Zlj+exytlmcbIq078vubE7+tO/L7lcXh/24nf
d5z4/agsW1h7vyyjeHzX/bh+w/Oxjvd8jPNu5b+x66j9xOJUz/WB56A+P/q3
4r/Bi7392Nfh/ejcktnPon3h54jfL534/cqJ36+d+P3Gid9vnfj9vKw5mes7
H8Py92U5xu88H6P+wcew/InXxffEjz6G65/LMn1PtF+cWP7J/f/rwzu+l+e/
nYn8PVqHivaJ/fmvLJd4/LMs47j+y4mLv524/seJa/7n04zDb1JR4jetKPFb
qejdwGCxIruYzSrqx/W/no915BUd47xaRV5xWq7IN3OVKpqD+o+y7ot1Vyu6
DmPmluUUlx0rulcMNisyjeVWRcm5bRUlluerKHlGnSoah7X5K0rsL1BRYnmx
iozia+GKHOOUPwtDP8brFd0H7xZ/PoZjnNeo6BhrWrQix8y1SEVzUC9RkWPe
iSUrSswuVVFipEtLZpeJY8tW9Bl3y1WUWF6+osTyChUlllesKLG8UkWJ5ZUr
SiyvUlHid9WKErOrVZRY7lKRSzyuUZFjzK5ZUWKzc0XJeWuEydWj/RqfV69o
DsYMny/WHMfXjnvqXpEVXKxXkV/2fP2KErMbVJSY3bCixGzXihKzG1WUWNu4
osT+JhUlljetKLG8mRPL3ZysY4uKLOK6h9eF655ObG7u5LzObVrzuvH5kIqe
Bc9g3Ti+Tpue2dYVWcdILycutnFidlsnZns7MbudE7PbO3m/d3Bif0cnlvs4
sbyTE8s7OzHbryKLuN7Ff54L17s6sbmbk/P6+1x+/m/pZ8O7uLuP4ffAitzg
Zc+KHON3nZbM7h1tQKXd70Anfgc58TvYid99nPjd14nf/Zz43d+J3wOcrGMr
r5HnfpDXhcGDnfgd4mTP9vB9sO57op0UbUS09+LXEuvFPq4X93G1r8d1juDe
Ktr3I534PcqJ36Od+D3Gid+hTvwe68TvMCd+j3Pi93gnfk9w4ndkRS7xeGJF
jrt77WQP30MPn3eyz8X4cM/BmFE+xt6Oq8gNXk7xc8TvqU78nubE7+lO/J7h
xO+ZTvye5cTv2U78jnHi9xwnfsc6Wcd5FbnE47leF38OcbwTvxOcnDfa98G6
Z/n+eU5d2rRfh0e7oCLT+L3Qyf5f5MTv+i2ZvSTapZV2v5c58Xu5E7+TnPi9
wonfK534vcqJ38lOPF1bkUs8TqnIF+/TNU78TnVy3jSfy/fNRD8b3umv4h67
Rjs0Pt9ZkRu8PNFR931DtBv9DPB7kxO/0534neHE781O/N7ixO+tTvze5sTv
7U783uFkHed7jTz3u7wuDM504vduJ37nxpqf5L9ba9N/j8p/e81/63+v9xPL
Y6rhJ9qO0R6pyCIG76/INBYecGL5QSeWH3JiebbHYfZhH2OuR30Mv09X5A93
j1XkGL+PO/H7ZEV2eYeercglfp/yMcbP8XyMf8bzcd5zPpf9fN97z56/WpE/
3L3g54jfF534fcmJ3w1aMjs32mseh9PXnTh9w4nT9yoyx/XersgoNt90P36f
8P1xb2/5GOc97/Wypncr+n5krnc8B/UusTcLR1sk2ge+J7x/EN+rX+M11tsj
8vo49km0Tyv6jNXPKu1mP3di9gsnZr90YvYrJ2a/dmL2Gydmv3Vi9jsnZn+q
yCIGv6/ILu/QD07M/ujkvJ99Lj8rXqm0f0/84mN896RVWcHIbxXZvS/a706c
/uHE6Z9OnP7lxOnfTmz+48T7v078/ufELH+BDIm1pKpkHd3iOW/Wpu+PrKp1
sbd5VYnfYlWJ2V99H6y7VNUx3oNyVYnfSlWJ9/mqcsfzqFVlGiP1qhK/jaoS
v82qEr8dqhqH945VJX47VZX4xdA7trZgVUbxOH9V/bjeqKU1tMWxBao6xnlr
VLWX7CEesc5cC1U1B/WaVfVjYdGqrsP7sRX/PKxNfpeK4x9XZHXparvZZapK
zC5bVWJ2uaoSs8tXlZjt2aZ5loxjK1R1DL8rVWUXsytWdYx65aqO4XexqtbF
98QqVR3D8mrxeV5FflevKrnnVavqn+eGd3x3rupesdyrqr1hT9avyiIG16rK
NBbWriqxvE5VieV1q0osb1DVOMxuWFVitmtVidluVfnD3SZVecXpRlX1Y3m9
quZjHRtXdYzzelRlFI+bVfWOMdemnoO6S1X3xLq7+zqMqVblFJebtGRk22hb
VOWY/i2d+N3Kid+tnTyj3lWNxft2Tvxu78Rv36psYa1PVUYX8M8r+nHd0/dR
9s+wTj5vcx9jTTtXZZ25dvIc1Lv6OxWnuzlx8V246s0/w+V9ip+fz0TrFfXT
HWVt92h7VPUZy3s6sbyXE8t7O7E8wInlgU4sD3Lid7ATs/s4sXxgVS7xuF9V
jjG7vxObBzg57yCfy/u6r+dgzME+xjs6zFZwcUhVjtnzQ52YPcyJ2cOdmD3C
idkjnVg7yon9o51YPsaJ5aFOLB/rZB3Dq7KI6+O8Llwf78TmCU7OG+L7YN1T
/Cx4Btc4eWYjqrKOkZFOXJzsxOwoJ2ZHOzF7ihOzpzp5vzdtyfvp0c6o6jOW
z3Ri+Swnls92Yvbcqizi+pyqvOJ6rBOb45ycN97n8vP/RD8b3sUJPobfK6ty
g5dP4tcD88Jpt1hj38j+ceyCaBdW9Rm3F1Xb/V7sxO8lTvxe6sTvZU78Xu7E
7yQnfq9wso6TvEae+1VeFwYnO/F7tZM92ynW2adN7x//TQn/vRT/7dNU7yGW
3/D1uM60qhyz/9c58Xu9E783OPF7oxO/NznxO92J3xlO/N7sxO8tTvze6sTv
XVW5xOPtVTnmfbrDid87nZw30+di/DbPwZi7fYy9fawqN3iZ5eeI33ud+L3P
id/7nfh9wInfB534fciJ3+4tmX0k2uxqu99Hnfid42QdT1XlEo+Pe138XuEJ
J36fdHLePb4P1s2vy/i9Bb9/uNZ7yJ71j33u1ya/n4fVPeJzcYGwzJ+RiWPP
R3uhqs+4fbHa7vclJ35fduJ3rhO/rzjx+6oTv6858fu6E0/vVOUSj29W5Yv3
6S0nft92ct67Ppfvm6f9bHin3/Mxvnu+rsoNXj6oyjHP4EMnfj9y4vdjJ34/
ceL3Uyd+P3Pi93Mnfr9w4vdLJ36/crKOZ7xGvku+8bow+K0Tv9858fu+74N1
/9YpfpYtGL9+iL36virT2P+xKtP4/aMqf7j7vSqX1D+5Hxc/O3H9ixPXf3oc
Tn/1MYz3bMnp39GSmt4NDP5XlVec/lNtt/yvkz7+Mkf6GZPXZBTLaU1z4Pc3
X4e1ZjUd47xiTeeyt62anOGrWZM/6j3D6nORlThWrekzbmu1dr9tNY3D43w1
JR4XrMkWphaoyRz1QjUdw2OnmozynTcmPu8QbcdoHWqaA8vz19TP+IGxngFt
2ueONfUzfuGa5sPsojUZZW/XrulZ8wyWrskc1harqR+zi9eUmF2ipsTskjUl
ZpepaRw2l60psblcTYnNVWpyhq8Va3LJ+7F8Tf2YXaqm+VjHCjUd47zVavrv
ZnG3ck12mWulmuagrtf0vPmeWLWm6zBmkZrum3tep6Z7xeaaNdnFZueaEptd
akpsrlVT8ozWrWkcxterKTG7RUs2N4hjm9ZkFF8b1WQRpxvWdA5OV6/pPn6I
1rWmY5y3Rk3HWNMmNdllro1rmoO6UdP94W8zXwez3ZwY7+XzcLp1Tc+FejD/
LUdkz2ib1/QZt1vU2v1u43F439aJ3z41OVvA/jq53q+m/WBvt7dL3G3p+XgP
enuO+ey3o8fvW9P+MX479zN+f8/HHm7lObiHnWt6Z3g/9qjJH152rWmPcb2b
E7/9nPjt78TvLjW9D4zZ03Ngf++aHON3n5qMsr6+viZj9vK5nLeTnwdrGuBx
eB9Uk2n8DnYy10D303eOnyPP9QDfK8ZH/n/7c1hN/nhHD63JJfWBPhdHBzmx
c7AT14d7HN6PcOJ3WE0uMXVsTf6o74jfy9zeUd95x9RkGbNDPB/vx5GeA/tD
3c/442vyiv0tWxp7dLSTfR/4OsRzcA8n+Fz8jq7JCvs8yudSDwmrB0frHp/P
my/ex/i8FX8HZpuez4hop3gcxk91Yv/smixi7ayabFFfwN+nFO2nmOOMmnxj
8zg/D+7hNM/Be3Cm+xk/3OvlPTvd/YzfvSZTWBzr/cTFz9HuiTYr2vk1WcTg
uTU5xtR4Jx4nOLF8nhPLF3gc15noY8x1oY/xHkyqyRzWLq7JNE4vceL6spqM
YvDKmnzz/l3uY4y/yPMx/grPx3lX+Vze9dtqcoOjafbB3l5d03uL5SlOnF7j
xOlUJ06v8zhcX+/E+w1O/N5akzOut3VLpmZEu9H9uL7U98e93eRjOJ3s9bKm
W2oyzVw31zQP9Rt+dtzr7b4nLJwdRo5sk9NjIo9u0/5/Fb/uGRqfe/HfzUae
FMfu9j7zeYT3m+Q9vtfJe3CfE+P3O7H/gBPLDzqx/JATj3NqcozrR2ryh9/Z
Tpw+6uS8x3wuv1641s+bfXrcx/jumVuTFYw8WZPdcdGecuL0aSdOn3Hi9Fkn
Tp9zYvN5J95fcOL3RSdmX3Ji7WUn67jDz57vkle8Lvb2VSd+X3Ni9gnfB+t+
3cfYyze9nxjfsxHvZbSlon1Qkz+ex9s1mcbIO078vuvE73tO/H7ocXj/yInf
j534/aomW1j7rCajePzE/bh+3/Oxjk99jPO+qck679aXNRlnrm1a+vxFtLd8
T6z7a1+HMf957zHyS03+cPdtWD2Jf24VcxwbOTOO/RDtx5o+4/anWrvfXz0O
p785cfq7E6f/1mSO6/1Vk9GHo/3hfvx+6/vgffrTxzjvBP6dU5v2+Z+aHDPX
356DGnd8d/L9yF+ezj1hedG69oPnV6nLH+6yuhzgN68r8VusK/FbqivxW61r
HE5rdSVO63UlTjvUZQ5rrbqM8q406urHb7mu+VhHs65jnNepLot8r8xXl2Pm
aqtrDuq0rveQdXes6zqMSeq6V/oWq+teMbtgXXuP2YXqSswuXFdidpG6kme0
eF3jMLtEXYnZJetKzK5QlzPMLlOXRcwuVVc/Zuev6z54n5au6xjnLVDXMda0
fF02mWu7lj4vF8dWrGtunI5qk++V4tip/JnANhnpXNfPSMyOiGPfR64ax1ar
6zNWV6+3m12jrsRsl7rGYXbNuo4x11p1HcPvhnU5w+w6dTnG6bp1JTbXr8sx
Bjeq613C3QZ1HWP82nXNx/iudc3HeRvXdS77tl1dbtjPnnX5wOmmde03Tjdz
4rSbE6fdnTjd3ONwuoUTp1s6cdq7Lltcr1dd/nC6lftxul5d98e9be1jnLeJ
18uatq3LJXNt4zmoH4p2RrQzo23ve8L1jnWZYP/7OLG5kxObOzux2deJzV2c
vMe7OjG+mxOz/ZyY7e/E7O5ObO7hxOPYMHNOm6xt35K7vaOd1SaXA6KNaZP1
gdFOj88rR+4TrYefN/u0b13HV4l2pJ8dLvavt3s8wInHA514PMiJwYOduB7i
xOkhTmwe6sTUYU5sHu7E5hFO1rGDnz3P/SivC5tHOzF+jBOb+/k+WPdQH8P1
sU7MDnNiYURdXnF3fF1ecXqCE6fDnTg90cnzG+lxOD3ZidNRTjziCK+8H6fW
5RVro92PzZM8H+s4xcc4b3zs1+DIS9m7urwy12meg/qyus5hT8/0dTB7tp8d
Zs+pyytOxzpxOs6J03OdOB3vxOkEJ07HeD7mOs/HMHt+XV5xOtHHqC/wMcye
5XWxpgt9bM9oV8Tva8bPH2sKv9vFrzl7RxvHPw/ln4G35Jnz8M739OW+V8ze
6f3g+U2pyx/urrAD/F7pxO9VTvxOduL3Go/D6VQnTq914vSmusxh7fq6jPKu
THM/fq/2fKzjOh/jvBl1WcTgjXU5Zq4bPAf1JN8T657u6zDmuLqc4vIu3ytm
b3UfZm9zYvZ2J2bvcPKMZnocZu92YvYeJ2YfrMsZZu+ryyJmZ7kfszf7PniH
7vUxzrvFx1jTA3UZZa77PQf1ibGn82p6Px+uyysuZtflFV9P1uUPd4/6GH7n
OPH7mBO/jzvx+5THYfNpJx6fceL0lWgXR7uEZxPudghvE2Ndz7ofs094Ptbx
nI9h9rW63kXeuQvbNM/caH1ijh2jnR/HHvE9cT+v+jqM+aIuQ+zte3VZweyb
3nvMvuXE7NtOzL7jxOz7HofZD5yY/dCJ2c/rcsb1PqnLImY/cj9mX/d98D59
7GOc94aPsabP6jLKXJ96Dup3vRbu4UvfE8azhvaD5/dDXe8nZr+xD8x+68Ts
d07MznNi9kePw+xPTsz+7MTsn3U5w+xvdVnE7C/ux+z3no91/OpjnPd3XT/j
MfhHXUaZ63fPQf11XdZZ91++DmO+8r3Slzd0r5j9ry7HmC00lJhNGkrMpg0l
z6jY0DjMlhpKzJYbSsy24vNLkS/zbMPXpeGrb3wnVhrqx+w/vg/cVRs6htl/
fYw1NeP4i3XNdUmbPjca+j0Hv7fm99JtDV0Hzx0aek/wu3BDFjHYqaF3ADvz
N5R4WaChxPKCDSWWF2loHF4WbSixv1hDieVlGjKKL36fimOcLt5QP8YXamg+
1rFEQ8c4b92G9p59W7ohx8zF73WZg3q9hvrZ52Ubug6ul2/oPeG9XLEhx+zt
Sg0l+79yQ4nfVRpK/K7aUOJ3tYYSvys0NB9zrd7QMQyu2dD7gOs1GjpG3bmh
YxhfrqF1saYuDR3D+9oNmcbvOg0l97xWQ/30zdfQvrFn6zd0r7wffRraM/Zq
04Zc4nHDhkzzHnRtKHG0UUOJnY0bSlxv5nH47ebkXe/u5D0ohc8kfpbvwv9T
vSHTWO7hfrxv0tB8rKOnj3HeNg15xOmWDfnG8haeg3qDhu6JdU9q0/m9onVs
yCkud/K94nG7hkzzbLZ34noHJ+N2dPKMdvY4/PZ14m4XJ+/BHg35w2m/hkxj
eVf3431b3wfv7m4+xnm9fYw17d6Qb+bq7zmo92rILpb3dvJ+DHDid7+GjGJz
oI9hZ5AT14OdeNzHifH9PQ7L+/oYcx3gY7g+rCF/+DqoId9YPtiJ30MaMo3f
Ixoyis1DfYzxB3o+xh/u+TjvSJ/Luzvae8yeH9eQP9wd3dB7i+VjnOz/UCd+
j3Xi93iPw9cJTrwPd+J3VEMuud6Ihuxi80T343qI7497O8nHOO8or5c1ndyQ
XeYa6Tmof452d7R7olXjXUjjXdiVP1/QkFOMn+HEyJlOXJzlxOzZTsyOcWL2
HCdmxzp5v8c5sX+uE8vjnVie4MTyhQ2Zw+DEhuzi9Hwnri9wct5FPhf7w/y8
2aeLfYx/vjjV+42XSxtyjN/LnPi93InZSU7MXuHE7JVOzF7lxOlkJ/avdmJ5
ihO/1zhZx1VteuanRbvW68LvNCf7fJ0Ty5f4Plj39T6G5RucvBM3OrF8W0MW
MTi9oXcA1zOceLnZieVbnFi+3eN4lnc4sX+nE8v3NmQUX5jCMU7vcj/Gb/V8
rGOmj3He89HO897Oasgxc93jOahfcD97fp+vg+sHGnpPeC+ntOn5PRztET9L
LM92YvlRJ5bnOLH8mBPLDf5/SPEu7BbvwuM+husnGzKN5Sd8jPopH8P1/V4X
a3raxzD+bEO+cf2ck3t+xv3jXeMd3y/6XnH9pfeMvXq9IaPYfLmhdwPvc50Y
f8WJkVedGH/D47D8phPLbzmx/EFDLnk/3m3IMX7fdj/GX/N8rOMdH+O8jxqy
i9n3G7LOXO95DuqXfE+s+0NfhzE3NeQUl1/5XvH4aUO+cf2ZE9efOxn3hZNn
9LXH4fcbJ+6+dfIe/NSQP5x+35BpLH/nfrx/7PvgnZvnY5z3iY+xph8b8s1c
P3gO6l8asovlX528H7858fu7Ey9/OLHcFvbysNePv8e4TZb/jvZPo931v05c
/+fEdaGpxHXSVOI6bSqxnDWV+K005Q+bxaZ8Y7nUVOK33FRyXrWpc/GbNzUH
Y2pNHeM9XqgpT3hpNPXeYrnZVLL/raYSv21NJX7nayrx26GpxG/HphJ3nZpK
3oP5m0pcL9BU4nrBppJ1LNaUPzwu3NS6MLtIU4nxRZtKzqs3dR+su2dTz4Xn
sbmT57FkU3bxvlRTiZelm0qMLNNU4nfZphK/yzWV+F2+qcTvCk0l7/qKTSXv
wUpNJa5XbipxvUpTies1m/KHx9WacozZ1ZtKjK/RVHJe56bO5T1YvKlnw3vf
palj/Lpgs6YMYWftpkxjeZ2mEsvrNpVYXq+pxHJH/jxCGO7P3yXcJr8bRn/X
ZrvljZpKLG/cVGJ5k6YSy5s2laxjiabWyHPv5nVhubsTjz2c7NlaTd0H6x4f
n3eO1jfaFt5D7B/f1LW55lZN+cby1k4s9HJieRsnlrd1Yrm3E8vbObG8vRPL
OzixvKMTy32cWN61KaOLeL2YXtDrJnm3dnFy3m4+F787eQ7G9PMx7O/XlCHs
7N7UfvMs93BieU8nlvdyYnlvJ5YHOLE80InlQU4sD3ZieR8nlvd1so6DmjKK
zf29Liwf4Fw12oFOzuvv+2DdE/wseAZbeg/Zs0OaegdwfagTy4c5sXC4E8tH
OLF8pBPLRzmxvEAYLoXh3fm7uNvkd2i0Y5vtloc5sXycE08nNWUUmyc05QvL
w528Wyc6OW+Ez8XvwX42vK8jfYzvoXOaMoSdUU19H2F5tJPncYoTy6c6sXya
E8unO7F8hhPLZzqxfJYTy2c7sTzGyTqGeI0897FeF5bHOfF4rhPLJ/s+WPe7
8VovkoThaOd5P7F/fBy/M9od0S5pyiUez2/KOq4vcOLiQieuL3Li+lKPw+/F
PsZcl/kYlq9u6t3A4KSmTGP5CieWr2rKMX6vacooNif7GOMv93yMn+L5OG+q
z8X7TDtg/29qyiIGp3m/eZbXObF8vRPLNzixPN3jMDvDidmFw2o5rO4RVu9q
6nuN693elFec3twmv7dGu9L3x73d1mx3fa3Xy5rubMo0c93hOah7xN6MiHZS
tLt9T1ie1ZR7LN/rxO99Tvb/fid+H3Di90Enfh9y4vdhJ34fceJ3thO/jzrx
O8eJ36eaconHx5tyjN8nnLxPTzo572mfi9kb/bzZp2d8jJ8hb3i/8fJcU99H
+H3eOTHaC07MvujE7EtOzL7sxOxcJ05fcWL/VSeWX3Pi93Un67jHz57n/qbX
hd+3nOzz204sP+v7YN3v+BiW33XyTrznxPKnTVnE4AdNvQO4/tCJl4+cWP7Y
ieXPPI5n+bkT+184scz/UhlP3aPxV5tvFm1T/rcUYfn2Nhn/xPOxjtvj+ErR
9g7nC8d5u0Trq79y8f/m6Ka//vz/krkWibarz+N/UdfT1+M/n9si2ub6o7mF
raJtqT8WUNjaNb8E6eU6Ll3YxnVcurCta/43yb1dVz0H88YSC9u5L17Nwg7R
to/WwUlfp2g7uq/stbC++aP1cd+C0XaOtlO0hXyv1Av4GOc9Zu/4XjTq3XzP
60U7KtqR0ZaJtne0vaItHq1/tH7Rloi2u+slo+3heqloe7peNtoAj18u2kDX
y0cb5Hr1aAdFO5C+eED7RK4UbYVog33e0r4+865Y0Dn0rRltSLSDo90VD3Tf
GH8A14sHNzA+fx33tZjXy72t4XO53vt2isv1oz7a97xWtMOiHRpt7WiHu14n
2hGu1/Wzod4g2jEev2G0oa67RjvWdfeCvvNOLMjoCQX9vDqgpXM2itY52iG+
n7sCwarRDo7+Ll4Lfd08x/CCjA73XOz9yIK+W7Fwsms8jXKNr9GuMXqKa4ye
6hqjp7nG6OmuMXqGa1ye6RqLZ7nG5tmucTnGNRbPcc27NCHa+IIMjos2tiCX
57ru635qLJ7nMX187jney4nuWyX2ep94TlcVZPGCaOcXZPFC11i8yDWGLnaN
qUtcY/RS1xi9zDVGL3c9pKXPg9iT+DypIIeHx+fB0a4syNbUaNdE2y+OTY7c
vyCXU6JdXZD1a1z383on+r6fifa07/lZ1+z9ddGm2cL1rnF5g2tc3ugalze5
xul01/ie4RqvN7vG6y2u8Xqra2ze5npWeFw92lEtWb4n2t0F+buroF974XGm
6xPdT43LWR7D+3etnxFG73Uf+/pEtMcLMnp/tPsKMvqAa4w+6BqjD7nG6MOu
MfqIa4zOdo3RR11jdI5rjD7meoyvTz3Ez5u14u5Jrw+jT7k+13tFfbLXy/28
F23RRL9Oxehz3kvmTuNYkmjPX4j2fEFGX3SN0ZdcY/Rl1xid6xqjr7jG6Kuu
j27pM1YHxHtxTNTz4vttGH9HD3+XZ0FG34r2ZkEG3/d6J0d7J9rbBRl91/UU
97/rPfvAY67yuW/5GX3oPn79PS/adwUZ/TjaRwUZ/cQ1Rj91jdHPXGP0c9cY
/cI1Rr90jdGvXGP0a9cY/cb1/eG0c7QTWjL4U7QfCzL6vdeH0R9cz3T/D97z
j3w//FqM31vw+4eJ3qvnvMe/RvvFe/6ba4z+7hqjf7jG6J+uMfqX64ej/e0a
o/+4xui/rjH6n2uMFhLVGMURNQZLkcVERrNEzjCaJ6oxSj813ynlRGN4J3/2
M8JoJVEfPhaInD/Rfdciq4mM1hPVGG0kqjHaTFRjtJWoxmhbonp4S5+xOjB8
nsjf4R3PdgQ/B6N1iL414vhx8bljIq9cv1Oi74hfvFbMLZhofRhcKFGNV35f
SM0+sV7u539/Hw9/Bwl2F0v8fub6+3n5u3FxtlwcWzaRP3KZRA6WiFw8kYsl
E9U4XipRjcvlE43H9NKJ+jC6QqI+zK0WuWq0h8LmWtFGtWR3xUTnYXelRDXv
D+euksjmmjybRF5XTzQX7wxr5HrYpZ8+9rJzojHY2iBy/UTmyPUSPcu1Irsk
srt2ohq76ySqsbhhovFY7JqoxlO3aJvZGbmpbXV3Hy43ibZxtOOi3RHt9kSO
N0o0V+JxnMe+spbO9s24jWy6h+fF5ebRevr57hltDzvbJlov7/cWPo/939I1
XrdyjdetXY9uaSw+B4W9U6L+OUyeGjkyWm/b2jnaTra4Y7QdEnndPtp2idz3
8rwd3U8fHneJ1tdemaNPItd9PBffEesmeu4L+VyuV/K99vAe7+V7xm+/aLsl
ctnfNS53d72knw01Rvb2eFwPcI3Xga6xdkC0/RP52yfa4ER2B/k8fp7t6vtZ
wf30Leq10LeK59gv2uwwvk60M1r67sMd94ndA309vB7kmv6joh3p88gjbOKQ
aEMSGTnUNV4Pc43roz0er8e4xtcJ0Y5P5Iw8zvswLtrYRM6GRTs2kfvDPS/W
h3qu/zke5n1j3DmJHB/r89izcz3vOl47c/E+nBhteCIfp0Y7xXs7MtqIRF5P
do3XUa7xOtp1D597UrQrOmoezJ0dz/c0/t17Ik+sa0yid+YkX/vKOP9Mzkv0
vg73c8H3mdHOSOT17GhnJfI7xvV2Pnamn9+did5nnI73PbMf10WblsjdRdEu
TOSPvCCRmwkeg5XzXGNnomt8X+zxeL3E9WPhaL1o57Tk7opokxJ95x2cyBBG
L492WaL34XzPi/VLPdcgj+M8nF4dbXKid+Ayn4en630//b125sLrFI9hX2+M
dkMiKzd4DOuYGu0ar+ta10P8bK61i5s8HuPTXWOL78jbEpkib030PT7E82Hx
lmg3J3rHWPtVidzP8FxDPY7zDvRaWPfRHsd5fPdhcLQd3OV9/SDaEml8r6Qy
d3+0+xIZujvazESm7nGNx1musXuva+Z9wONP9hz3+poPug9bj0Wbw3j+O7v5
4+dPfPc+FL+XHx/7/HAic49Gm53I9RPRHk/kcY77xrY0J+/DGPczL+/okx7z
ZNjZMNrElvbyhWjPJ7L7dLSnErl8xjUun3WNy+dcY+FFj8f1S67x+rJrfL0R
7fVEnl6N9koix3N93hm+p0cSuXzFfeO8FtZ9ued4LZHN1zwX95bG/iSp9v7t
aG8lcvlutHe83++5Zv/fdz3Ve0yNxQ9dY/Mj17j/2DWmP3GN8U9dY/cz19j9
3DX+vnCN32+jfZPI3VfRvkzk8mvXt7qfGvvfecxE7w/Pne+aee7DxD/R/k5k
9odo3ydy+aNrXP7kGpc/u8blL66x+KtrbP7mGq+/uz6/pc9YHRzfnxfwc4x/
5ho5Idpfid6/d7wH7OW/Xh97+59rjPIPKanv9Hq5H/yyh/RhNku1r72y+J6O
dmqm+6/FsWoqE8XIPJWRUqoar+VUNV4rqWqeXz3VeLw2UtV4baaqMdUpsmMq
f/NFtqVy3Ep1Hu65PvNil376non3aaNol7bkkjk6pLJMMhfvHuvl3rA8f6rr
sd8rR66UytySqb53eJaLRC6cyu6iqWrsLpaqxi7fT9QYXSrVeIwunarG6DKp
apxxnRVTuVw+crlUdpdNdR7vz0KRC6ZyTD997CtroQ+7zLFCKuMkcw23v7ts
eZVU98YebB6tZypza0V2SbX3q0eulsrCGqlq7K6ZqsZu51Q1RtdONR6j66Sq
L2vp8292tlF87prK5QaR60fbOPbncv5fFU29A1yfeSfFsYujrWd/m3BuKrvM
sWGqd4xkLt491ruqHXMu1+Nd5dgq9rGF75n97hZtM3vt7hqvPVyX/Gx62PeW
Ho/XrVzjdWvXmNo+2nb2t220bey4l8/jfdrU99N0P32p17KpXTJH71SWe3su
/O7ga2B0R9fPxzPcNNpVLbnrH62fTfSNtnMqI7u4xuuurvG6m2t87+7xi3kO
+rC7h/swNTjaoFR294q2Zyqje7vG5sBoA1K53jfaPqksDnLfUh7HvCu6n3lx
uZ/HsM/HRhtqE4dEG+I9PiDa/qn2/EDXGD3INUYPdo2pQz0eo4e5xujhrjf0
dY6JNjO+S+/iv7ePz5NbOgfHy/qeuM8Lo//oaFNasrW/172B5zg6lW/yqGgz
on0Z7YtULof53nBwfLTjvPcnuMbCcNe4PNE1Lk9yjcsRrnE60jW+T3aN11Gu
8TraNV5PcY3LU13j7qxoZ6ayeXq001L5O8N1b/dTY/Fsj1nT+8Nzx+UY92Hi
kmgXR9sp2rhoY1O5PNc1Lse7xuUE17g8zzUWJ7rG5vmu8XqBa4xe6BpbF7ne
09en3tjPe5j38lKvj729zDVGL3f9crxb3aJNbcnvJPfh9QrX+L3SNfd/bbSp
qUxMjnZVKiNXu8brFNd4vcY1z2+ax+P1Otd4vd41pm6JdnO0Ofw/dflzHIxp
6Rw8H+TrM+8+4XQa/3Kvpf2bHe2RVC6ZA5tHOqd7Xx/1eVi+1dfD6+3RbvPz
uzPaHam83uUarzNd4/Vu13i9xzVeZ7ke5jmYF7v3ug+v90e7L5Xj+9yH3Qfc
N9RrYX04ftB9WH442kOp7D7i+hQf47xe7uNcLM/xPbMf70V7N5W/Z6M9k8rx
49Eei/ZqWOgR7aaWHD8V7clUjp92jdfnPB6vz7vG6wuuMfdqtFdSGX052kup
HL/o88719Zn3AvfTh8vXo72WyjVzzE3le67nOsvr5d4u9blcj+9WPOIVc+/7
nrH7VrQ33fe2a859x/VkPxtqbH3g8Vj70DV2P3KNJ77zPo/WM57ZjHhmWUum
P/Z5vEtv+H6mt3Qc55O8Fvpu8hyfRbs5zrmBv4s61a+H+B7hewXLX6X6nsXE
N9G+TuXvx2g/pPLyrfsw951rDM5zjePvXeP1J4/H68+uMfqLa0z9Fe3PVC5/
j/ZbKq+/+ry7fH3mvc/99GHzn2h/p3LJHH+kcvyH57rF98G9Pexz//Kezxe/
Bm/L5KMUWcy03/xhgf+8/0mm+o14/ltEu60lr3kcyzL5Kmcaj9dKphqv1Uw1
prhOK5O/RmQ9k+NapvP4vvjX94Nd+unjvfrPfbhkjmYmyyRz8c6wdtaE0Q6Z
7o09WD1ytUzuFolcOJOJ+SM7ZTKyQKYarwtmqvG6UKYa34tmGo/XxTLVeF08
U42t5SKXjXZ7PKMlM1nE8RKZzsM912de7HIOfRhfIXL5aLPi+/aeaMvE54si
h0a7syXfrLdjJsucy/V4LznGPeNjjUz3zJ6vHLlSJq+rZKrxumqmGq88G2p8
rZlpPF47Z6rx2iVTjan1I9fL5G+dyLUzOV4r03m8Pytmuh/s0k8f/lgLfbhk
jnUzWSaZa4Z/D83vP7C8QabrYbZr5Ibe4x7RumcysXHkRvbK//9/Y3vl7wGg
fifMbhVtZktGeno8Xjd3jdctXGNq22jb2N/W0bay4y19Xubrd7PdrdzHnu0d
bS+7ZI5ett7Lc+FjgM/Dcm9fD6/bR9vOe7xjtB1stI9rjO7kGqM7u8ZoX9fY
2sV1B8/BvLjb1X3Y7Rdtt0ymd3Mfjvu7r81rYX3Y3d19W8ezvCeeZYnvgfj1
w6zIPeP43S2dg2e+X9gr9g+jA33P7Ad/T8NxmcwdEG1/WxkcbZB97OMaL/u6
xu5+rjF7oMdj/SDX2D3YNZ6OiHZ4JpeHRjskk+khPm8VX595O7ufPmweFe3I
TH6Z47BMjg/zXMt7vdzbuj6X6/H9hUe8vh/Papto97f0PIZGO8Z9x7rm3GGu
N/azocbWidGGZ7J2kmvsjnCNJ/45yimZXI6KdnIm0yN9Hu/P0b6fzd0/0ntz
jPu28hyjMzke7bnwe3qmf16D0TNcY+JM1/gbF21sJi9nuQ9zZ7vG4BjXOD7H
NV7P9fg+noM+7I5338Xx/TeMv4u9JaPnRZuQyexE17i8INr5md69S6NdEu2B
lo7jchePY977Y777ol2c6T28zGPY55ui3WgTV0eb7D2eFO1y7/kVrjF6pWuM
XuUaU1M8HqPXuMboVNeH+To3ZDJ3XbRpmexe6/P6+Z64z4PdT98Ar4V1H+o5
rs/k93rP9XG0pfL4GZPL5XTfGw5ujjbDe3+Layzc6hqXt7nG5e2ucXmHa5ze
6frjMN472iMteb072sxMXu9xjddZrnF5r2vcPRTtwUw27492XyZ/D7ge7X5q
vD/sMft6f3juGH3EfZh4PtpzmYw+Gm12JpdzXOPyMde4fNw1Lp9wjcUnXWPz
Kdd4fdo1Rp9xja1nXU/w9amP9POe7r18weub3dJn9njf8Pho1LWW3rHZvp9n
4jt2Thx7OZPXV6LNzeT7Vdfc/zvR3raJ16O9ZiNvuMbrm67x+pZrnt+7Ho/X
91zj9X3XmPo02ieZ/H0U7cNMjj/weVf6+sw71f0feP/+iPZ7JpfMgc1pzo+8
r3/6PCx/5uvh9Yton/v5fRXty0xev3aN129c4/Vb13j9zjVe57me7jmYF7vf
uw+vP0X7keuH5e2jPdGS3Z/dd6PXwvpw/Iv7sPxbtF8z2f3d9Swf47yR7uNc
LP/le2Y/5o93tFMuf2lkksvxP9H+toN/XePiP9c45g/5UuM1yzUer3muGq/F
XPXkMFbLZQ+jlfhczuW4lOs83geuz7yYpp++p+NZPBatkcs181Rz+SaZ6yGv
l3u7mr+bKc6v5/puxeOrNrdArnvG7nyRbbn6OuSqObdjrhq7PBtqbC2YazzW
FspVY3fhXDWe+M5bIpfLxSIXzWWaPxPDebxLrchmLt/008d7xVrowy9zLJ7L
Mclc+F0613crRpfJVWNi2Vw1RpbLVeNs+Vw17lbIVWN3xVw1dlfKVWN35Vw1
dlfJVWN31Vw1XlfLVX8ZTneM9mxLdteMY2vk8rdO5Nq5jHaJ7JzL4lq5amzS
T43ZdXONwTrnMhfv5Hq5+nDQM1qPXHu8QeT6ufZ8w1w1RrvmqjG6Ua4aoxvn
qrG1Sa4aa5u6xu5mrrHbzTV2u7su+vrUz8U9b5nLIk439/qwuIVrbG7pmveN
9a7nez482mF+Rke4xsS20baxg96ucbGda4xu7xqjO7jG6I6uMdvHNdZ3co3d
nV1jt69r7O7iGqO7usbgHtF2z+W0X64/14XF/q4Xdz819vf0mP3iHXw+nlGr
Ja97uQ8fQ6IdnMvrgGh75/I60DVeB7nG62DXeN3HNV73dY3X/VzjdX/XeD3A
NV4PdP1NmN052suxtufjZ9wLkb1ymTvE68Pgoa67eK+ol/Z6uZ+To90X7d5c
do/0Xs7j/18S7fWW9vvoaEfl2v9jXON1qGu8Husar8Nc4/U413g93jVeT3CN
1+Gu8Xqia7ye5Pqa2ItRuRzid2S0Ebm8nuwar6NcT43z58baR+eyPsJzvRrH
Xox2in1MiDY+l9fTo52Wy+sZrvF6pmu8nuUar2e7xusY13g9xzVex7rG6zjX
eD3XdV9fnxp/F0Q7P5ff87w+vE503c/91L283lOjvdHSPnL/63qv2Eu8Xhzt
Iu/3Ja7Z/0td4/Uy13i93DVeJ7nG6xWu8Xqla7xe5Rqvk13j9WrXeJ3iGn/X
R7su1/tzLXuVy+s014e4nxqzN3gM7+iFfkZ819zoPnzcHW2m73l6tJv8DGa4
xuvNrvF6i2u83uoar7e5xuvtrvF6h2u83ukar3e5Hu7rU+/h581aMff/uDrv
uC/H941rfPa8P8/z2HunrCgrIkVlJqMIGWXzJVRWSYvsnVlJQ8NIlFCIbEpW
NmXLzB6/891xPC9evz/O13md1x7Hdd3Xea17lvMHBmdbBq+PWD7D+aU8vPfP
PzT4f0afwPDbnHcNOjAV2AkalRLmng6a77afFzTXWHjCMth90jLYfcoyGH3G
4Uc4DtzA6wK7gbOXg15qLrw+F/Rsc+H1ectg9sWgF5oLj68GvdJceH3JbqMc
jnivtfvLbr+FDkMbfxL0cXPh7K2gN11/rwUtai68LrYMXl+3DF7fsAwu33Z4
cLnEMrh8x/LdTuej5sLi+831LyHw+q79XekyUc4xdn/XbbnI+R7vOD4M+oE3
FYLe4zxI8F5Bn5eF36UuGxj9NGiZ2/gzy7T555bB6BeWweiXlsHoV5bB6NeW
weg3lsHocstg9FvLYPQ7y2D0e8tg7uegFc2F2R8pR3Nh9CfLs+yOPKEm/+D1
FrcP9T4x7N+Psv5iTKQCm82DHg/z70G/NRcu/7AMLv+0DC7/sgwu/7YMFv+x
DDa5zIcMXpukJIPRpinJYKtZSjJYI33kSa7vpW7LdEr5o20zKclgNJuS/GGU
4x3asLnwm0vJDbzmU5LBbyElmfLXgicpYaIUvJgSRsopyeC1kpIMXqspydRf
XUrhwWt9SjJ4bUhJBltrB1/L/7zi31erpYTjVVPyB+5Jn3jBLu640X5bB98q
aAV3zYM+LgvLa6QUF+26TUr+wPI6KaUHXtcLvm5K9bdB8PVTwuuGKcngdaOU
ZPC6cUoyeN0kJRm8bpqSTBsQB/GC3c1ScgOvLYJvnhKO4biB3S1ScqO/khfy
B45bpuQGlrcM3iol7FJWZPCNHf5mGtffG8vbplRm2mOfoK4p4W+n4DsG9Q08
L416WjVoccyplgXfPiUctw3eJiUc75CSDF53Tik8eN0lJRm8tktJBnMdgvYw
RtsH7WYc75qSP/oD6e9gTO9mN3DZMWhP9yvi2N343t1xfVJWuX42xvd0eoyt
4LFgzO3rMoPdvYP2sltny/jtYrnkuulibO3n8GBtf8tg9wDL4OmQoIONy4OC
uqWE6QPtj77UyeWptztuOecFt9UcR/eUcNzdcdEHegQdlhJGe1oGE4dbBiNH
WAZnvSyDuyMtg92jLIPdoy2D3d6Wwe4xlsHusZbB63GWwejxlsFsH8vg7+Sg
k1LC6AlBfVPC4omWW9kdGcye4jAt7Je46JOn2g0cDAwaEHRP4POLaO/TwvxV
8E85H5MSRv8XdEZKGD3TMhg9yzLY6mcZrJ1tGeyeYxnsnmsZ7Pa33M7pI4PB
C4MuSAmn5zl/YPF8y7vbHXlyTWXZxmUeH3SX6+Buy2BicNAg4+Biy+BiiGUw
eollMDrUMhgdZhnMDrcM1kdYBrsjLYPdSy2D3cssg9FRlsHg1UFXpYTTK1Ka
e4HFKy13tzvyHzG+HhX0TVl97yLXEXi9Luha42NM0J0p4fWGoOtTwuuNlsHr
TZbB682Wwetoy+D1Fsvg9VbL4PU2y+D1dsvg9Q7Lxzl95D1d3+QVzI11/sDg
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
uPUN886ea50cdNsqsjsBrPFdZgz5f3Mp5lEPVjV/OsnhCM88bcuqzMRDeU4l
z6vI7aww30K64aeV522zIw9nBL99Ffkjrt6raP6H/dvBzytrLsU8alZVc7sz
y5rrEQdzuYcT+ak20byCtN5YRfPHfs7bQ4ncsF8r6ueRSPuckJMm4rUmmnue
W/43/XOdN+al/cP8pstBPMxbCIN9XRPN+5hDLg/7RyKPW3tOOaeqeepA56uf
8/C6y7bY/HznnznR+Y6fMp1n+2G8XVQV5vcJ+aKw3zf4M7wL5Tkf880hrivm
d8wVmYs+XtUcd7DdLg5eDr5NTeauxB80lDEs+Lzwu91/5mFw5opPhV0bz2XX
jrAjg49gDK1qbjq8rPiGOM47a0oDP/OrmtuNImzwS8tKEzfiGRrmx/imeI77
q+fWzKvPMS7BZOO8ljkteb3K8cyz+YkmmqtfHea5TTQ/xvxn8AVVzcWvLWuu
fF3wx5poTo75N/u90WGxw+1Xm6+3H/J6eZgvaaJ59/WOD7srbWZuTjykPydR
PIQdUtW3kO/c6zWNsW2bag7O/B9dALvbPPY+X9WcfrTzcUvwX4Jv11Tm7c1v
tbl/pPVkxH97yA9H/GfWZP6Of2+F2zjGtbLm8czhn4u4d7bu8VJVesidZeko
tzrNF8NuV8+5SYPwpP9q2LWv/qsf4I4egd4wrSzdYbua8kS6U22/NOyfSKRj
TG6qfNwd5tOayu5u28Mn2LyKzfilTJPCfEZT6R6Yp1ofmRzme8L8SVOlR1ro
Iugm6HRv1uTn06bS68g7es1rUY49rMMsrErHGO8yEM/E4Iur0gmnOI8T7X5+
lOUZ1g1CPjzm+o8F74k+UpZug14DR14vzI9EHvrV5P+NiK/jf/QcOHrTU4nC
4H8JcwTrTuhJsxznwzaT5teR/k5lvf3T6LZO8Der0s3uL0vvIg50pZ72Q9i3
Iy+zw9wrzO9UpXc9VJbeRFluaKZ6JP/U60WJ9LFHQn46kb8bXG7M6FnvMa/7
jw4GRwd8vyo98NGQf+DfxxF+LriqKV7MTwY9FfRq+G9Tk4yZdpvu9v24Kh3v
ibLqkvyvH34+Crt9rMuRD8JeR97Czzk15RndDnfWRth/a1PSOmve6RIOnW1+
mF8Lvk5NutazhOV/ycFL/P840tnvP/ohHJ1xWVX65AKHISw62jph9/x/4sC8
MPy/FPzloL3C/vOqdM4XQ/4s+AHWV8fVVBfEhw6KHfoj/6bnP+aP8p/bmuIi
HtLDnG8u3RE/6I9lp4U7eu8rYe4SfEjQq2X98/xL5m//0W/h6LxfVaU/LwL/
NaX3GhitSUfFjE5NPHs3l7zY6WL3uu3XrcpMmt+E+eCq9N6S80P9oANjh158
scs5mP8A12SmvMur0sPfLKttaa8bm6kMSxz/L1Xpvfw3fFJN4fmvNvo4/6R+
rLn+S42ZfxF/V9U/x/+rz6PLb1CTTv6+CTO6+XpV/d+aOHar6Z/BrVPSrdGB
0X+J+0On9X1Vej7/NP+xqv9H4w9df6njhIiH/w7/VNX6Av+Yftzlmmv3pU6L
dYanjaUpNeWDf9miX/Mf2+1S+pctZv4L+nNV/1Jv1PnhrANsWJPu/YUJMzr4
+lX9E5c49qjpXjR3olkbYK3gWsf9ldOiHpe5Tn6r6v+t+EPPx57/6BIv8fAP
09+rWoPgH6+sWfAPU/4DeYbNpHt2pPt90INlrW/w78jJKf0/EjP/6Puzqv88
Nq41wFm7+KuqdQ3+/zi9pjLwH0r+u7fyf3n806Om9QvsN6jq/5TE/U9V/y5k
fWKVRGsZ/MdwXYdlrQMiLv7f94fjJU7iWlH+1x031m1S/tdbc69t8I8Q1jdW
lsHpsraCmf+8sd7CP0TWw1yTmX9qNfV/4hrXO+CswzRLtF7zj9Pj3yT8l6SH
zT3Nm9iMzo8Zv9Tlz67bv5w30r080VpMs6B5fNNrMi9KVC7KyzoQ9cQaDm/H
8Ubc2jmtkVBW1mFY6+B/WtenxZFZ91icyIx9zv9FalyjgbPGkk+0jpN3GP5l
xX+sXrb5FfOizaypFO2X/PKPpxvSWoNhrYY1n6sSrSWVg57iXmdN5qL/GYS/
UqI1o6rXQVgPYY2INPjvDul/UNN/T/iHA3asE7FG9EYic573v/2fl8Z1JThr
QT1dF7RPkmgtqcHh+W8K/0zpaHMn89VsZi1qNfsd6DwUwpxOtBbG/wSvTbQm
tUbQM+Hn/JrMdf7fx5rOb+J8vue64r9D9YnWwvgnSOOaEetFrDmxBsW6Fv/O
YN2KNau3E5kHh3lFxPN3ov9rdKwpH5hXT7SuxP8RVvO/EtZzeP5zwD8OeKud
N9t/tR3/QZiT0drYhvbLehP/IOAdd9bIeCubt41ZjyLso2HfqabwhF3T79s3
rpHBWTdbK9GaGu/eb1zT2txmJsys0W1Y1Tvyjflq4fjX8dvjjWttcNYn768p
beJYN9HaHO+Ts4bGG+LbZhUv5hXmW9qe9qFcF2e0Rril8/BeovD4oV62dn5a
OV7W5Vgz5K3m1mH+qCYz7+mu7zeuG9fs4KwHbpBorbC1w/O+M287n2Lzqebb
28y63vb2yxohb0OzTkg6bZzuzYnWENsGPRd5uLAm80Z+xxgM/VxDgdY7vRsn
Wk/c0Wnwbu8p5qwVsk64md+8bWfcgzn6BHoUdqwrsv7H2iDrh4Th7VTeTWUt
EfNHtmtvM2uQ7Sv/+sUf640fJzLjh7zz1uvErObWmHkvk/k272p+jH1NZt4O
3MLvau7pPrG2+0LLRLpfR6fB+PiB39TEzDi5eaL1Wd71Za1zL/sl7r2d1m3h
55swdw56MdIdVJN5S7+L2LiWCmctdKtEa6ZdnQbvIa5lzjopa6SfJlorvIa3
lCK+Jn6DkfVR1ktZX8Uf79MdYt7N/kmfN/EOy2nNtVvlX7/Eydrjtn5bj7hY
P8U/b5LtmGiNlXfOebeM98uuzWkdFpl3rbb3W2eN67Bw1mzbJFrPPdRp8DbZ
VV6bxfyi7XrYzDpoj//4xR/rt58nMuOHNWDyQPqtE61N8x4g7/zwBhfv3+zg
t9kb13zhrC1/5zKQf8p9oOuH9VXu/C/PKz3euuKdK97u4Q0f3rfY2e/nNK4R
w1mb3SXR+jLv6rAuzJtCvBXB2vPRzv+DtL/fJ9okeJ+KzBBm3ixifZN1Ttac
kXkjhvdhWF/mvQvu3LP+jPn8vPJEWuRxo6reG9rD4U6p6E2ZlW91VPSOAelT
rrTjO9vx7JFojZW3QXgzhjc+eN+DNWrMD9oOmfiI42jHwzo3696sn3+dyA/+
Sfssx3cX3696yayZ8w7DTOrH7z+wJs56N/bcR9/db5UQb8dEa+u8EcFaO3mm
Plj/JtznLt9Atx1zS+Z+L6V0B4T7INxpwg9tzPr58kRm/HOvmXv33MNn3f2C
/+TlAueTNXnu6nNPH3+YuWu+l+/1N67vw1mT3zvRWj/3/bmTzx1+7u+zfn+J
84Ad6/Ws1d9alZk7/LgNcTjWkblnzbla3AfbTxffy2Z9nzVn7rf2DvuuifYb
uK/NPeqRzg/r/5iPsh0yewG3V2XGnjvblzncHxWZuctN/rjXjTt7C5c7z9xh
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
SKI90xOba7/0INuzl9rd9t/azJ7qJYn2Pe/yGeCDbc/8jnF2iMc0zMz7vjGW
8L+iqj1B9ieHJtqv/KC59ioPM96+sx/shyXaZ1wzpbkqZWHMZN+xp+Nhn449
smtSGj/5ZjDHZI/yCIf91Wb2Nocn2kM8NKX9w162Z2/xSNv/YTN7jCMS7QMS
P3uBR9me+SnfGMZnxmrMzJdfdH+hT/3tvLHfODLRHh/rMOzvHWN75r/keeU+
bKIzl7yZ3CTRug37gZcm2svLprXfxfemp88ws4+2vue5fNuW+nuBmfkv+4B9
HJZvFGHZN2ueyJ6w7Mex59KRfahEe1WNe1/s97FHl7EfzKMS2Q/ynuDJNrNn
xXeUb+gVifbC5oT5skT5JH72xE5x/Hxv8c9+F3tK7DGxx3V1InPr+DaVE+1h
sZ92ZaK9rZ/T2t863fbsI/HN5nvNdxsz+0v8z5r9Gva+6mw+Lfxcl2jvZjL3
QBPtJWF/n/Xl6SXteZ3lPLDPhB/2vnLOD+VqsB/s2Qc6x2nxP2L2Zdhr4n9V
rJ+z3s8eC3su7OFcn2hPZ1lG+zn97Z+9ngG2X8/mbawT8M3me813GzO6Avs4
7IOs770S9iN6ZbVPwr4Jezsb2g/mGxLlAf83JvKD/5sS7XHclNV8Z+U/Msva
M8HM/Ie9xTNc/5s4LfZkVnN5qc9bEu0jlHP639/Kc9vhZ3SifZBFWe17XGz7
zVw/2LP3cInrij0E5ljMr5hnYWZvgf/dsL7NXsGtifcOvH8xzOmyTzPIedva
9uyxbOT8UMYtHU8Xn8Eebj81lxEc3p5o/X9oTnsAI50ua+msb//hc9qsq7PG
f0eiNf95Oa33Y2Yvgr2AUbZv57CswY9JtH7eNq+5OfNR5nLMiZkbs6bOOifr
oaw1tvf4gP1OjpN0WXe/0nGO9bz6zLzWEVkXZS12Z4clLdZLWW/sFfPDOxPl
n7IwJ7/WYZnDovMwn2TdmfVn1uNZi2b9eWpe7xVjZs17fKK168/Cflwi/1O9
Vkw8rCXz7ivrwKxVT0iUN/LQwekS/572QzzMb6kTdLu7E60tb+h15tE272Nz
43rzzY5/5VniMB/O99DlZW11aqL1vd/RaxKtbeaLeiuM9czuZc3xWQs+ymvF
mFmvnZhoffXlgs6Ej7V/1kjHOZ57Eq37DSnqjRrWKg8pay/pUmOJc+Osix5c
ls6E7sQa7WGOB/tDHHavotYSJzjOyYnCYs+5ccpyWFlrv2OctyPt/9Cy7oCw
9tijrLXNe1x2zqJPtB/WS1lrfbyo9yImOc5pidYz25Z0Fn2K4+Eu5HTX7fE2
n1XS/30uNeanJ1qTxJ7z8He7Hlgjneo4OdOOn55hPyVRfshDX/vBnj2NG4wx
9A90EvQR5iOco2J+go7yoO3RYzjXjo6Df3QbdJZNbeasO/NldBX0FMzoZsyf
W9qeOXUL23NWHD0DHQP9At0F/QTdZCubG3UadJ7lvt83x35a2p6z36zLojuh
72zjOBv1GPQcdBnm/sz7mfOji6B7oHegu6C3oLO0thmdhnged97wg/6DjrO9
w6LT4P8JhyVOdJ4V9oM+wNlmdBH0k8vsHz+ciyb/s1xXbewH/WUr55nz4W0c
z8+Oc77zzLyYc5PMjXdyuRr1G/QfdJwdbOZsMzoNukqD7xViRt8i7POuE/yg
C6EH7WQzZ4zRXZh7Me/azWZ0GuJ5yXHiB70OHaedzZwZRo9Bz0GXwYw+M8r3
KDGj6xDnwv/Ej//xrn/qnDPq6DfoMOgv6CKcSUXvIJ7FjhM/6EjoQbvbzLlc
dJQ37L+Tzeg66EBvOk78oBc1tz1mzseiQ7EGjT6FfrPEdd7Z5plu3wVuO/yg
L6EHdbKZc7PoOug56Dh7uizobV1t36gPoS+hE/GdZE7AXAw/6D+ca0X3Yf0a
XQa9B70FnWVfm+c5zo+dFroO+sz3vreIGR0I/8scFp0GXQi9BjP6DLoMYdGp
0JX2cR5yDos9Z1nRadBnGCuI/3On1c3xoDN1drk437u/0+IsK3oGegu6BroO
ulDiONGj0JW62bzIftB57vK9SMzoSd0dljOf6DroOeg4PWxGB8L8k+0Jix7O
eUvM3zvO7i7LQseDn3rn4SvXCboO+k+jnoQZPYgxjfGzl9OiXJzPZC7PPJ45
PHoP5xrRg4jnF4dFT0KPQlc6wmbOpqIPoYOhH2FGd0I/OtJmzkai67AP/ZLv
Y6KT/GJ7dCT0oGPtB92ot+P82ua/HD86EHoROtFxjge9prfj+dHpost95jg5
+/iS8/+zy3Wyy4t+g06D/oMuRd44g0ic6CvoSOvbHjPnEvHPGTV0GeoNvWgj
22Pm3Brxo0dx3m/lnc1Eeg/6F/sE6G7HuiycyTzFfuY43aaO/xTHg6608vyg
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
FvyyBs3N2ob/0Q1626dV+L+5QfPqNmF/U4Pebvoj+JAGzSuWBL+4QXPX34MP
btD9hb+DD2/QWfF3gw9r0Hzjz+BDGzS3eSf4JQ2ax25Zr+8r39at6jQvZy7d
tqZ+SB/8Kvxe0aC55evBb2nQXH1R8IsaNLdfHHzdOr39uSLMFzZorr5f2B1D
eL4RYT4qzKeFedtI99oGzdM2C/trGjRP2ybsr2rQPHP7MN/YoHeuWoafGxqk
z24X9tc36AxA6zBf16DzGBuHnysbNF/doV66BP2U9Y0RHgfWcbk427xTTfOP
1/yd4u0P5nu8A8O3iu8UdzSwv6mZOP74lv1gM/75PvIuwA2+p4D5xjD/WJMb
9typZ47F/Op7x4/+wvyKe9oX+94B5iEZxUFYvrnrOZ/creDOAnEVMxovGTe5
37FttOvkMG+T0psqfPc7eQyY6HGAd1butv0cuz3SXH7vdj1Msv85fiNlks0T
bWZ8PtVp8fYG74TcU1P6vFsx1eMPb4dMsf09NjP2TrZ/wk60/wkp1Q3lKvi+
/wWuE+bJ9L1JWenz/OedO5vn2w/zUu7h8S9t7ku2c52Qz//ZP2Mvcwrmo3xD
WL/CzLyUsZkxmvsIl9mM/0a5Mc3LbM/3BCzxTeCOKfoAc4+f3L7knzkJ9nt6
ztPPbc07HyfWpAN+G+YTanr/hHcITqrpbQHuKOF/g2Z6n4r5GXMz3mjpW9M7
LbzB06emt2u4039yTXf5uf9FmP811TtdhEVn4b7yaTXdTeZe9ak13Snmzvop
Nd1Px++Z9p+OMerSBt1hYVzl+8I7bNybZGzl7t2jNb2FRF+gL+5Rp/6I3aP/
6S+P2bzE9ty3ejf43Jru/jxb091+xlXmyMyVuSP2Qk33UriTsrSmu/HP13RP
BXvGZ+bThGnr+26vOyzx877J4+6H8JvSysecMN/cTOnPq/37Dslc+/24pjxx
p+bD4E/XdK8HvD3jvvlW8Nk13aV6xGbaC5oV5g1dXt7DmuP2f8R+Ztt8r9vq
YbcXcfKmGOEfcj1QPu5/vem0ZtnPp35/7C3bP1nTnSjuQ7EmsMj9gjtS2DPm
kO7L9s89sJedB+5gvep6YB3mFbcpbfWK22ttvin1emuPsXxEvcbzRbxvWqd3
Jx9yWcAqdfmq25c7fy/Z/mnXIXnD/0tuL94foL35FlNnS2r/3td722buOb1m
nKy8H+f4H7X/OW6Ht1yHc1z/vEV2oTHGGLLUaYEr+IvG0iCbyQP5XOR2Bwuv
GQ+4gcGeOeGEdzEW1DRWzzN+SAO7yVm95fKh43na5vlBT9T0NgrvotB27//H
7n23I/e5PnK6C5wW72+Q56XuC9h9bD/P2rzAbvQX3pFgrsK8B734E4el7HxH
PnDeOtgNe/KHPe/PsGbFe74b+PvINw9dj7U13l9mjYt1D96fZU2GMYRxBx2T
9RLMjCd8x/gWom8yRjJWoj82cd6YR7EOyXvorD2ih/ENYPxnjMfMegi6GnMy
5mMX2cw6AN955h2sE3IndWCd5oSsn629qtbQeP9k/XqNldT5U+4X71t+1eME
uOJNJDDMONJo967x9pT98/2FaLdSRvG853YEa88ab+CdtmfcgKjfSzLCwgfG
w0Dnh/g+jTxeWKc+umb0tTPrdG9pVpjvqtOZ+tlhvrtO59y/CfOG9RrTXw2+
e53OVa4S9lfXabx8LMxT6nRO+QXmlXU6l1AL8+g63bfMhfn6Ot1vZA7znuvk
4bC/o073K15nDl+n+7pLmMPX6c7we8yB63RnmPes1q3Xd25OhJ1Yp/Pv3L/j
H8PcubuXuVuddP93w+9Q3h0o6/4o90hZq2Fuhpk5D+tn3K1tfMePuemznqNi
z1xuB9vjh3Ub1no28xxvR8fJ3VDuiPKdxQ435jz4xZ41Md66w4050s72Q1i+
gXwL0S/g3H8GY+ANM99H4unk+Dfw+tEjvpe6l+2Xe52Iuc+eNa09MQeAI7Me
tYft0fvge9gPbxBSftb2KGsbl5d37JirMU9j/oOZucGuNcmYeRODtSTWkVgD
7un+xdpqj5rmLaydH1bTfJW1IPwzt0GP5T/lN/suZBfbw5F/dNzI6LZX2T93
J+H72gzfz+brjAfu78MPNDbu9x4G98O5/4n9debd7Kep0yUPu7iMzPdYe1y5
d1JRm2zrdmF9+giPM9xlZN+F9V7WvA/3eML+AGu+zOfZWzikpjkb+zP4/8rv
sx5Tk46Gzte7Jr2Pd3aPrklH4z3mI2t6n5k3eo+qSX/hLdvezg/7HqwpMzb+
ZDN6F+tmu9e09kiZaD/m9rzRx3yauXQ+xrOpdToDwjszy+q0Rv9FmN+t07o/
Z8V3rdMZ73KDdC30rBZhvqlO+/zNI57JdTqLVAj7E+v0Jsta6PR1Ohv7foTb
p07v6n4Y9gvrNKZuEeZb63S3Nh/mPnV6I6YzOmad8r8wzPPrtA/UBT20Ttim
jw+pU78eH/FPr9OdzLfD/EdNa8OrN6idWJe/N/i9dbo/WR/2g+q1br84+O/h
//SydMoh9dIrOc97Sb3uMt4f9kfU6bszo166InriDPTmen07+AYdU6fvI+PD
5XUaB/ZGR65T/U9v0PuzfNdeC3P/eu1FfYC+Xqe72d+E3bZ12g/6OMwt67UX
9lnwVvXaL3unXusFYOaLeune6N0f1UvnR99fVi89HB2cOSDzJOZIYAMMMP8H
I+1t3s1mdCvmkcwZz2yquRhhsaMuWHNhveWXyPOddTqj+ma99Gp06q/CvE2d
9r+oe9YvwPyf9XqLn72YNSLs8jrtmTQN/Eyq0xm698L+lzrtnfwa/tvWaV/p
lzBvXa89nb+D71SnfaX2rBfVS59o1iCdH30/06B389GbSmFuV6c9naZh3rlO
+0dv1WudhTWWTORhVIP2uWiHDVZVW6yyquYofPcrYZ5Yrzu9TwfvUKczKQ/W
6Yw/Z/0L4Wdmvd6Z4P8I9/hbSbmPr9cZrpGRznH1Ok/HfGdane5D8E+BPvXq
j/eF3f312qer0U/rdR+Yu8DT6nUfeB/WWxqEt85hfqpB+OwS5vkNmhftDb4a
1F861esdB3DYMcxzG/Td/BGM1One/U/Bm9Vp/Wev8PNEg/pgOfIwoV53m/cM
/niDvlnFsH+4XmeCZ9dp3sCc4ZNwX79O/8HoFOYF9VqnfzjsnqzXPXr6/RP1
6vv0iWfqtbfAf0PGeX4yo051TT3fHvGMqfu/ls419ssxjON/VMq09L+u65cx
MucNMbGQ02hMOlBJpQM1RUKzmQ0b3ji1MjNmqA3JeTOjFw5jM1MJL2zlDXOI
F0apxmrrX+5Pn+dFu+/fs6fn/zz3cx2+3+t7/66f331c0+Yvh99HXN/Gz9Pe
D0e1+/ko3ac4ss0/TvfMzWrnZ5qTpvC7CqnOc1f7v9+l/XpmE5fSHHZVGBeI
CZPb8c2pXjSxzTemugdxGd4CZ9nSxu9TTfwG1j6N+9XmFdZxec93pu/6ojZ+
UmLfy9r8nbLmcGmbv1nya2z2rdJuL27H15bc/K82vlHybvzgtdIXLmnnrCs5
+CZiZKlPY++vlzaPP71a+tTmNr5S9n/4g/Us9d/L23XeZd5nDJuYxjFi7Ydl
vCUnvF3mhU28l3Jv6jZiQtlvY4A6X/p7LwfKZ+Z5x6d8gNrFc+0668u8j6+A
L/EX3vPt6buekt4r98m9fFneD3nuqzLvrQ7xJdgSDE8NERy/LsSO4Ma1Id4F
63JfH5X3hh0tTW0JuwMfY3vXpXVJapJnh/GaWH19WrukbrmrHd9Y6ruT07Vg
HeaE+BhsfEg7/m3JOQ4lNpS5Ympa16amPanNN5T6L364pXt309rxreUeg4F2
zW9KTvMFMS/d83ZPacfY8CjWL+wJ9VC4FwIuTt+ZDeFeAZ6hL6ypLirrm9Q2
OZdn47n4+9gQ9/BgyCXgEVeH+ZXcem+I3cHt97f5bylHZ48Ga8e6zSCWlr2V
/yYWlj0zjsRGQo374TaOLnviLA99Bn8ZUdZzqeX2h9gCXPF8yDfgGsvgLmAF
6nalL+FHN5f1bnAUujrry9peE/IEOMLCslYOBhtK7kr7C//O+0z3Q/BvduoX
S9rxPSF+Zu/GjLTuvZjzwxx6a5v/G+LkIW3cnvZlHtvmM9PfEBrc4tLWcC/F
4238N62vnN/ms1Lf+bmNx4b7ZNg7g61gJwP9fmZPzb5+cRWYai8xI9yD8mgb
d6f1mCPgYWnP39tK38PvzmvHb0x7/d4X8i44F7a8M7Rnchr2hC390MbFKX96
sM3np30I2Bu1Jq1xPgSOTb8jAt7uT3E2XHx1x/vw9WdDfz+Oa6f9mE5t85fS
HjEnlX1u6HdzPb6YYv0FZR0fDIxedHuoGaFhDU11zSAupj3a9vQby4hjn6Xf
/WO/6entnCfTHoLg/+e6+1nejq9M+9ZhU6tSu0JvWZFqLqe0+Qtpn51BpU6A
RnAUObTsX/lUyJnhy3v7xcFg4JHRYdw2X9nmA2ktCt0Ofg43J+7uCO95Ulgv
o1Y2vc1PKPuzE/P+CePeA+E6soZDm139FO7doW5xME9Tly1zA3lhHJg9rWEs
CnU4NLhlZe4h77CPZkSoK90cfmZ/zZCSJ4znmcPP9O45EryW9qVdWuYq8tQz
YS2AOsAFbX5T2p/1kTb/oOTa1/JM6V6AqSE+BhvTt5N6BLUIsPmZZS6em2pI
6EfT2zit5HEndrwCTjGhXeeMUgs9PNSr0KrGtPGsUuuj7xF5hZzC/prBoRYG
DtpTxuADxJywdj2e/FVqrgtS7AvunRVid7DizBC/gl3HpBgI/IOf/VreY4Tc
Cd7EevxZrgl+v63Lm8SJn8pYQbzfF8b8xaHtYrcrQj/BR8ilv5T1tadDX8KP
2B+EbodmR845rcs744h7pR6Mv97W+Sw2tb3Lp4PasXPK/j3n43el5k19aHf3
XuA0YErwZF8bd3U5jvvd2eUpctqLXV6b0MYrS3388Hb+FaVGTn57qctxw9rx
q8rfXrg7xPdge3La5V0s+jqMd8Q66k//dHl2Veif+Obgdp1zy95paIn/lXiA
94z2+WnX02xsqX2BedE+wb1PhPZBfyzyJBokufJC7K7Uzue34yeXPZeJhUu6
eEjs3FHGz4M5P12T/f1q2+javG84Nvw6Qw4MBoZzH9/zOPyYeiP2PD3VaNFn
h4W6LJosnPiYnryY2H9szzVBgyVeE6uva+PUsk4Cf4UnwBHIP8f1zEH4Oloy
/j4vxZdgS+L98J7XWZjyfDj+j2GsIc7gH2g8+MjwkEfBoYjfg7vrE5NGd+fD
e+5Iuc9oYmZPu4UrHNbTX+BJy1KudEvKD+GGrEdfV4M9iKN7Ymk4E7UMeBN+
wHW55pYwl5PD56QaOfr4vHb8/bIOvCDk8PD3uSF3gjfB4+FXcCvqDfAoONR+
MFXJ76lPwJHgR8PJLWVPcfACeBrMwHMc3fNZwAvo5WCGC1N8DP4Ee/Z64k/W
ZlTP9ZnWrv9eWSenxglng68RGx7r4gO+mz39F7xcPTEznBXMDd7GNqOnff4P
tDrBhQ==
          "]], PolygonBox[CompressedData["
1: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
          "]], 
         PolygonBox[{{5041, 5298, 3564, 4906, 4136}, {4942, 3740, 565, 4892, 
          3581}, {4540, 3740, 4942, 3581, 4909}, {4978, 4021, 102, 4888, 
          3564}}]}]}, {}, {}, {}, {}},
     VertexColors->CompressedData["
1:eJzt3EGKU0sUx+Hg24M4dSXZg+5AcPzAkct84kR05khchb5kLgjprt+p+jIR
PpqbStU5/6p70+3rd/++ef/icrm8fnm5/PP730//3V7XD7fX9+vH2+vHlXO+
n3/7+v/r5/XV7fXl+vb2+swXe61OOOdy9TSv1RXnJ3stH7gc5nxXr+UAl8Oc
7+q1fudNr9Ut5xO91td8ltfqmfOy1/qX7+G1Oue84LU+5Xt7rf45L3itT/mZ
XusLzuUwP81rfcG5vOWnea1fOJfDnMtnvp/X+otzOcxP81p/cS6f+Wle6yPO
5TA/zWt9xLl85qd5rV84l8/8NK/1BedymJ/mtb7gvOC1PuV7e63+OS94rU/5
3l6rf87LXutfvofX6pzzstf6l+/htTrnfKLX+prP8lo9cz7Ra33NZ3mtnjnf
yWv9zpteq1vOd/Jav/Om1+qW8xO8lgNcDnN+mtdygMthzvnda/nA5TDnp3kt
H7gc5pzfvZYbXA5zfprXcoPLYc753Wt5wuUw5/zutZzhcpjz07yWM1wOc87v
XssfLoc5P81r+XOa1+qBcy6HT/NaPXDOO17Lq129tu6c847X8mq619aXc973
Wo5N99r6cs7nei3fpnhtHTnnc72WbzWvrRfnfD+v5Z685Zyf5rU8lLec89O8
lpPylnN+mtfyU95yzk9zuco558/j8pNzzjnnnHPOOeecc84555xzzjnnnHPO
Oeecc84555xzzjnnnHO+qz/q76Of+u+vp/w/G9OvM2Vdpn9e19/j+lPG6fp7
jHPX8TxqnKfVQ+08uepc6v8F2mPepoxz+viNx3pNHOeU8VivWeMxD+ah8L61
8ZgH81B439p47O+zxmMezEPhfWvjkWOzxmO9Zo3Hes0a55TxWK+9xz/9+4jp
8z9lvWrfP3J+stf6dNV4VuWk6+x9nSnjrF1n1+vX3vdR43EOnDX/tXWpPX+o
1cMUn/68aLqbT35CvXnfvd+XN1098HKdTK/P2nmeP/Z+h3POOeecc845n+i1
+3G+tz91fdb666n7tHb909ZlyrrXrlObnymftzbP/M/1UNsfn/r3FWu/b1Y7
h0z//eFV67KqH32utXVbm+daX6ya/9q61M4DfA+vncOd/5vrq66aPmX+a33B
m3XC9SPv+2n712n9VZtPPstr9cw5P8fl3h5ee071t9d51Hj8/GN/fnoO1Ppi
1X3fqn7cNf9Xfd4p8zmlnmvzOX38U9y8PU+fnpaTtbqqnQdq58/a/jLlXFd7
/uD8ttZXrVft89buH2v74JQ6qeXt9PqvrW9tv67N267vO6WPaufSWp9Or4cp
+/iUeeCPdes1y3ftx9r5bfo4a89VanVem//pXjsPT5mHKefbKetVe56/aj9a
NW9TcnvK/TVvem3f4Wf2XW3frO0L058/r1qvXfff2s9Pn//p8ywfZu2btZyp
3Y/X6nDK80b+PHU7xc0blz98yv5VO0fVzv9TPlftnL/r9xTTv9eo/Xwtl6af
E2qfa/p9dC2Hpz83mPJcbtX+VVuXWg6flgO180/Np9/Hue9rjnP6PvgLX+tT
ag==
      "]], {}}, {GraphicsComplexBox[CompressedData["
1:eJxs3XmATfX/+PFj3/ctPlJRKVkSLSLvgzaRRCiUIpTK0maJErIUZclWkRGy
JdeSUpaLiZB97DGDO5g7uC7DMMb8xpn7fJ3f6/37ff/5fB+dc89533vP8yz3
3jPu6tqnTffcjuNMLe84t/7X/r9dfdtcDQVWGu148Q/7hgx896ld1vQEcd5i
1T/qUuWINX+i+Leqbz22IOOE9fiQOGVto+xZzljLC4urdCpV/4d956zlR8QL
MqIHv5x10VpfVLyx+X9TN7e/bK0/TXxrat5iV63xpIuzZy7XZOM1a3wZ4luj
GzLwhjXeTPEDw0ZOWl0nyxq/4+Kc4fqe7z2fXOLa3/xSsFKr3OIV3gN8P+49
4Tzi9d7zzSt+2mM+8Xbv+ftu4z2h/OKD3utRQPya9wR8n/Jen4LiXrcWV66Q
OOK9Xr4/vrX19C0svlH01utXRDxsVtKc89t8F/Rez6Lir28Np3oxcVnv9fX9
3flt3R4YVlx8p/d6lxDPyx5N8/98T/Fe/5LuuW11U06808CMj0+eW3JpGbdX
NLNozdPt5H3y3uZOEwx9aMeL6UNPTxDTh54/UUwf+vEhMX3o5YXF9KGXHxHT
h15fVEwfev1pYvrQ40kX04ceX4aYPvR4M8X0ocfvuJg+MH1g+sD0gekD0wem
D0wfmD4wfWD6wPSB6QPTB6YPTB+Y7RW/4r2Avit7r4/v47cW37yUeLb3evnu
/tStd9j3fd7rV1oczp47aY7vJd7r6bvfreG2KSOu772+vmOVWqanOKunOKun
OKunOKunOKunOKunOKunOKunOKunOKunOKunOKunOKunOKunOKunOKunOKun
OKunOKunOKunOKsnxpsp1j3FWT3FWT3FWT3FWT3FWT3FWT3FWT3FWT3FWT3F
WT3FWT3FWT3FWT3FSU931Mz38Fc94wzHD6Zz/MAcPzDHD8zxA3P8wBw/sO4x
zuoxzuoxzuoxzuoxzuoxzuoxzuoxzuoxzuoxzuoxzuoxTnr8dnWd7DUtlB61
48X0qKcniOlRz58opkf9+JCYHvXywmJ61MuPiOlRry8qpke9/jQxPerxpIvp
UY8vQ0yPeryZYnrU43dcTI+YHjE9YnrE9IjpEdMjpkdMj5geMb1hjl+Y4xfm
+IXpE9Mnpk9Mn5g+MX1i+sT0iekT0yemT0yfmD4xfWL6xPSJ6RPTJ6ZPbY6X
Aet4GbCOlwHreBmwjpcB63gZsI6XAet4GbCOlwHreBmwjpcB63gZsI6XAet4
GbCOlwHreBmwjpcB63gZsI6XAet4GbCOlwHreBkw+ngZsI6XAet4GbCOlwHr
eBmwjpcB63gZsI6XAet4GbCOlwHreBmwjocB63gYsM4vA9b5ZcA6vwxY55cB
6/gZsI6fAev4GbCOnwHr+Bmwjp8B6/gZsI6fAev4GbCOnwHr+Bmwjp8B6/gZ
sI6fAev4GbCOnwHr+Bmwjp8B6/gZsD5HWGn+//8bL6ZPPT1BTJ96/kQxferH
h8T0qZcXFtOnXn5ETJ96fVExfer1p4npU48nXUyfenwZYvrU480U06cev+Ni
+sT0iekT0yemT0yfmOMj5viI6RPTJ6ZPTJ+YPjF9YvrE9InpE9Mnpk9Mn5g+
MX1i+sT0iekT0yemT0yfmD4xfWL6xPSpP7csa9lxJnnH09Wy3WjHi+lTT08Q
06eeP1FMn/rxITF96uWFxfSplx8R06deX1RMn3r9aWL61ONJF9OnHl+GmD71
eDPF9KnH77iYPjF9YvrE9InpE3O8xBwvMb1iesX0iukV0yumV0yvmF4xvWJ6
xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0qu047b33ba30
qh0vplc9PUFMr3r+RDG96seHxPSqlxcW06tefkRMr3p9UTG96vWnielVjydd
TK96fBlietXjzRTTqx6/42J6xfSK6RXTK+b4iekV0yumV0yvmF4xvWJ6xfSK
6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF61
uT4NWtenQekV6+vToPSK9fVp0Lo+DVrXp0HpFevr06B1fRq0rk+D1vVp0Lo+
DVrXp0Hr+jQovWJ9fRq0rk+D1vVp0Lo+DVrXp0Gjr0+D1vVp0Lo+DVrXp0Hr
+jRoXZ8GrevRoHU9GrSuR4PW9WjQ+vw2aH1+G7SuV4PW9WrQul4NWterQet6
NWhdrwat69Wgdb0atK5Xg9b1atC6Xg1a16tB63o1aF2vBq3r1aB1vRq0rleD
1vVq0LpeDVrXq0HrejVoXa8GrevVoHW9GrSuV4PS64VbT3vkRulVO15Mr3p6
gphe9fyJYnrVjw+J6VUvLyymV738iJhe9fqiYnrV608T06seT7qYXvX4MsT0
qsebKaZXPX7HxfSK6RVzPMX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+Y
XjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWo7zm7rcyTt
eDG96ukJYnrV8yeK6VU/PiSmV728sJhe9fIjYnrV64uK6VWvP01Mr3o86WJ6
1ePLENOrHm+mmF71+B0X0yvmeIrpFdMrpldMr5heMb1iesX0iukV0yumV0yv
mF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0qu04
y73ntVl61Y4X06ueniCmVz1/ophe9eNDYnrVywuL6VUvPyKmV72+qJhe9frT
xPSqx5Muplc9vgwxverxZorpVY/fcTHHU0yvmF4xvWJ6xfSK6RXTK6ZXTK+Y
XjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXT
K6ZXTK/ajjPZ+/xpq/SqHS+mVz09QUyvev5EMb3qx4fE9KqXFxbTq15+REyv
en1RMb3q9aeJ6VWPJ11Mr3p8GWJ61ePNFNMr5niK6RXTK6ZXTK+YXjG9YnrF
9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+Y
XjG9YnrF9IrpFdOrtuP073Jr4NulV+14Mb3q6QlietXzJ4rpVT8+JKZXvbyw
mF718iNietXri4rpVa8/TUyvejzpYnrV48sQ06seb6Y1XsfF9IrpFdMrpldM
r5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9Irp
FdMrpldMr5heMb1iesX0iukV06u247zivW87pFfteDG96ukJYnrV8yeK6VU/
PiSmV728sJhe9fIjYnrV64uK6VWvP01Mr3o86WJ61ePLENOrHm+mmOOrHr/j
YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6Zf
TL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+lX23FmWL9b0o4X06+eniCm
Xz1/oph+9eNDYvrVywuL6VcvPyKmX72+qJh+9frTxPSrx5Mupl89vgwx/WJ6
1eN1XEyvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1i
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
x+novW/HpF/teDH96ukJYvrV8yeK6Vc/PiSmX728sJh+9fIjYvrV64uK6RfT
q15/uphe9XgyxPSqx5cpplc9XsfF9IrpFdMrpldMr5heMb1iesX0iukV0yum
V0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0
iukV06u242zz/kDccelVO15Mr3p6gphe9fyJYnrVjw+J6VUvLyymV738iJhe
9fqiYnrV608T068eT7qYfvX4MsT0q8ebKaZfPX7HxfSL6RfTL6ZfTL+YfjH9
YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6Zf
TL+YfjH9YvrF9IvpF9OvtuPMjHVGv9rxYvrV0xPE9KvnTxTTr358SEy/enlh
Mf3q5UfE9KvXFxXTr15/mph+9XjSxfSrx5chpl893kwx/erxOy6mX0y/mH4x
/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+m
X0y/mH4x/WL6xfSL6RfTL6ZfTL+YfrUdZ7+Xpd+vdryYfvX0BDH96vkTxfSr
Hx8S069eXlhMv3r5ETH96vVFrfWlielVrz9dTK96PBlietXjyxTTqx6v42J6
xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yv
mF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpVZv7dZOs+3WTpFes79dNkl4x
ver5E8X6ft0k6RXr+3WTpFdMr3r5EbG+XzfJul83ybpfN0n6xfp+3STrft0k
637dJOkX068eb6ZY36+bJP1ifb9uknW/bpJ1v26Sdb9uknW/bpJ1v26Sdb9u
knW/bpJ1v26Sdb9uknW/bpJ1v26Sdb9uknW/bpJ1v26Sdb9uknW/bpJ1v26S
db9uknW/bpJ1v26Sdb9uknW/bpLR9+smWffrJln36yZZ9+smWffrJln36yZZ
9+smWffrJln36yZZ9+smWffrJln36yZJv097G7Lfr3a8mH719AQx/er5E8X0
qx8fEtOvXl5YTL96+REx/er1RcX0q9efJqZfPZ50Mf3q8WWI6VePN1NMv3r8
jovpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+Y
fjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX23H+dR7Xf1/V0s7Xky/
enqCmH71/Ili+tWPD4npVy8vLKZfvfyImH4xver1pYnpVa8/XUyvejwZYnrV
48sU06ser+NiesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF
9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6VXbceiIXrX9
v2NOr3q6fx8fver5/eta+3/pFdOrXl5YTK96+RExver1RMX0q9efJqZfPZ50
Mf3q8WWI6VePN1NMv3r8jovpF9Mvpl+5byPWL6ZfTL9ynhPrF9Mvpl9Mv5h+
Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mv
pl9Mv5h+tR3He9ojT0q/2vFi+tXTE8T0q+dPFLNe/fiQmH718sJi+tXLj4jp
V68vKqZfvf40Mf3q8aSL6VePL0NMv3q8mWL61eN3XEy/mH4x/WL6xfSL6RfT
L6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6
xfSL6RfTL6ZfTL+YfjH9ajvOvbcuf0udkn6148X0q6cniOlXz58opl/9+JCY
fvXywmL61cuPiOlXry8qpl+9/jQx/erxpIvpV48vQ0y/eryZYvrV43dcTL+Y
fjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfT
L6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1qO85r3rj9frXjxfSrpyeI6VfP
nyiW8zD1+JCYfvXywmL61cuPWMuPiulVry9NTK96/elietXjyRDTqx5fpphe
9XgdF9MrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+Y
XjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yv2o4zxXtd/H/nXTte
LPf7qekJYnrV8yeK5TpDPT4klvv91PLCYnrVy4+I5X4/tb6oWO73U+tPE8v9
fmo86WK530+NL0NMv3q8mWK530+N33Ex/WK53y9mud8vZrnfL2a53y9mud8v
ZrnfL2a53y9mud8vZrnfL2a53y9mud8vZrnfL2a53y9mud8vZrnfL2a53y9m
ud8vZrnfL2a53y9mud8vZrnfL2a53y9mud8vZrnfL2a53y9mud8vZrnfL2a5
3y9mud8vZrnfL2a53y9mud8vZrnfL2b61XacHbGO6Fc7Xky/enqCmH71/Ili
+tWPD4npVy8vLKZfvfyImH71+qJi+tXrTxPTrx5Puph+9fgyxPSrx5sppl89
fsfF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6Zf
TL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX06+24+Sv1Cp7U02WfrXj
xfSrpyeI6VfPnyimX/34kJh+9fLCYvrVy4+I6VevLyqmX73+NDH96vGki+lX
jy9DTL96vJli+tXjd1xMv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfT
L6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/Wo7
TmNvw/b71Y4X06+eniCmXz1/oph+9eNDYvrVywuL6RfTq15+VEyven1pYnrV
608X06seT4aYXvX4MsX0ql8Px8X0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZX
TK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK
6RXTq7bjfOw97rT0qh0vplc9PUFMr3r+RLF8z6ceHxLTq15eWEyvevkRMf3q
9UXF9KvXnyamXz2edDH96vFliOlXjzdTTL96/I6L6RfTL6ZfTL+YfjH9YvrF
9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+Y
fjH9YvrF9IvpF9Mvpl9tx1niPS+/X+14Mf3q6Qli+tXzJ4rle2n1+JCYfvXy
wmL61cuPiOlXry8qpl+9/jQx/erxpIvpV48vQ0y/eryZYvrV43dcTL+YfjH9
YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6Zf
TL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1qO05yrBv61Y4X06+eniCmXz1/oph+
9eNDYvrVywuL6VcvPyKmX72+qJh+9frTxPSrx5Mupl89vgwx/erxZorpV4/f
cTH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfT
L6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0q+04Vbxx+v1qx4vpV09P
ENOvnj9RTL/68SEx/erlha3lRcT0qpcfFdOrXl+amF71+tPF9KrHkyGmV0yv
mF71+B0X0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldM
r5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK/ajtPe2/DOSq/a
8WJ61dMTxPSq508U06t+fEhMr3p5YWt5ETG96uVHxfSq15cmple9/nQxverx
ZIjpFdMrplc9fsfF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6
xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV06u243zt
/T3XFOlVO15Mr3p6gphe9fyJYnrVjw+J6VUvLyzm/FgvPyKmX72+qJh+9frT
xPSrx5Mupl89vgwx/erxZorpV4/fcTH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0
i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+
Mf1i+sX0q+04f9/6OfMkv1/teDH96ukJYvrV8yeK6Vc/PiSmX728sJh+9fIj
YvrV64uK6VevP01Mv3o86WL61ePLENOvHm+mmH71+B0X0y+mX0y/mH4x/WL6
xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/
mH4x/WL6xfSL6RfTL6ZfTL/ajnOzaE4n9KsdL6ZfPT1BTL96/kQx/erHh8T0
q5cXFtOvXn5ETL96fVEx/er1p4npV48nXUy/enwZYvrV480U068ev+Ni+sX0
i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+
Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6VfbcR7x5vP71Y4X06+eniCmXz1/
oph+9eNDYvrF9KqXFxHTq15+VEyven1pYnrV608X06t+fhlietXjzRTTqx6/
42J6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yum
V0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpVdtxet+6fah+qvSqHS+m
Vz09QUyvev5EMb3qx4fE9IrpVS8vIqZXvfyomF71+tLE9KrXny6mV/38MsT0
qsebKaZXPX7HxfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0
iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdOrtuPMK3jr
B5B+r9rxYnrV0xPE9KrnTxTTq358SEyvenlhMf3q5UfE9KvXFxXTr15/mph+
9XjSxfSrx5chpl893kwx/erxOy6mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9
YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6Zf
TL+YfrUd55g3rnPSr3a8mH719AQx/er5E8X0qx8fEtOvXl5YTL96+REx/er1
RcX0q9efJqZfPZ50Mf3q8WWI6VePN1NMv3r8jovpF9Mvpl9Mv5h+Mf1i+sX0
i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+
Mf1i+sX0i+kX0y+mX23HKR/rgn6148X0q6cniOlXz58opl/9+JCYfvXywmL6
1cuPiOlXry8qpl+9/jQx/erxpIvpV48vQ0y/eryZYvrV43dcTL+YfjH9YvrF
9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+Y
fjH9YvrF9IvpF9Mvpl9Mv5h+Mf1qO04r7307L/1qx4vpV09PENOvnj9RTL/6
8SEx/erlhcX0q5cfEdOvXl9UTL96/Wli+tXjSRfTrx5fhph+9XgzxfSrx++4
mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX
0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrVdpyRt1aT4verHS+mXz09
QUy/ev5EMf3qx4esx4fF9KqXFxHTq15+VEyven1pYnrF9IrpVY8vQ0yveryZ
YnrV43dcTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4x
vWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1qO87aWy/LRxek
V+14Mb3q6QlietXzJ4rpVT8+JOZ4q5cXFtOvXn5ETL96fVEx/er1p4npV48n
XUy/enwZYvrV480U068ev+Ni+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6Zf
TL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL
6Veb/4tIv9rxYvrV0xPE9KvnTxTTr358SEy/enlhcRV1nh+RfjH96vVFxfSr
158mpl89nnQx/erxZYjpV483U0y/evyOi+kX0y+mX0y/mH4x/WL6xfSL6RfT
L6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6
xfSL6RfTL87537Li5kd/PddtSDG3THRXqclPfm5e9DbAYu633u8lvzN3fXTr
i6WCbs52PtesuPWfKxV216zqXu/bT+bK9HHv/fHbcbPEFLr1dnTi7/suN+Vu
/RmO3/KL+3vjy+N+6H1f9ZcZPunWivKKL3rPL7ebs12vN+94rwf/HsAG420O
zXO5r3uv8ybjPewHx23qhfm3OL/X1TYzx1vxTXPGe9y/Zpn3/mWJp3nbQ6bZ
6u3Pdpovve2Hf49kt0zHOeO4bu7znvc+mR97L1O5a6aw9/dH9sv8+E1v+79q
Ur3t/qDMj71hdLlicv5g9hGZHz/n9Zdmqnrb7X8yP27kzXfJPO7tyBJlfvyg
tz1FjTec307I/Dhn/xExG7zuT8n8OGf/k33c8V7XZJkf5+y/Us1qb8FnZX6c
s/87a/Z4L1xY5sc5+8/TJsXbDs7L/Jjt0Ht7O30uxx+8PLZ9/v89wTTwthN/
+jrvBSwifsrbYRcVb/MOV77Zf+AD3gZWXHp59dbLcdD3SW+7LyHO6aekeIC3
ffh+3Buf75zfTZUSr/fG63uEt/35ftobf2lxYe/19b3dez6+x3vPp4y4jfeG
+K7kbVdl3D49z7Rpd2CY2N4/2M55feLMz973Wv70Wl7YhcTs3zHvD+8z7w/m
/cG8P5j9Octjf8Z09n9MZ//EdJwzfaH5/tbL262ATOf4hXl+HbwOl8jzwxyv
mJ/tkensL23nvH4B8403jvwyneMrZnzsXzmeMp33g+nsb7H+++z+dM7jWH/O
fnOV9ffZ/f0709m/2/YWW3C1ycy69X/+dM4vMOcTmNfDPj5gzl/s6Tn7xbWy
Po4nPF/7+GMfbzDnS/b0nPcnKOdLTOf52scrrP99G3/6Be/13Gj9+zYb5PnY
xzvM+Z49fXfsvJvxM53xc7zkeIg5n8SMFzPeu731bpHH257svd9bZXxM53jM
8Vn+3pt1vO7vPZHtsj6m8/zs4zfmfNme/oq3PeyQ52efD9jHf8z5OGa8mPHm
/HuOu+TxtnP+vbjdMj6mc37A+QXXA5jl2+cjv3sv7B55vO2Itz3tlfEznfMN
zle4HsEs3z6/+c777wnyeNt7YtdxjJ/pnL9w/sP1EGb59vnSYK+jA/J42yu8
9+2AjJ/pnA9xPsX1GGb59vnXa94LdUgej+Xvg1vTd3j3IxyW8WCmF4hdx7J8
pnM+xvkc14+Y+e3zv6XeceaoPN72WW97/k+eL9M5v+P8kOtXzPLt88mJ3udz
x+TxmPVhxm/Pn9s7ziaK+feJWT7TOb/k/JTrbcz89vns+97rlCSPx6wP83zt
+Rd6+7UkWR5m+gkvPP/8GDOdf4+KxzOd82HOp/k8ATO/ff7tDa/JSXk85vWw
p+d0c1LGg5nO3/tn+UznfJzzeT7/wMxvn/9f914e//wfsz7M87Xnf8hbUUiW
h5neyzsuhWR5mOn8PUcez3SuH7j+4PMdzPz29crh2HUGj8esD/P62POXvlXb
1NOyPMz057wdxxmZjpk+zDvvOCPrw0zXf08iItO5HuJ6is+3MPPb11/R2ON4
PGZ9mNfPnr+G9zqmyPIw07t61z0psjzM/Jj5v/POW/3rP8x0fT/DBZnO9SHX
i3zeh5nfvr4sHPtfHo9ZH+b1tOdv6v0/52R5mOmDbq32G386Zvoy77zfv57F
TNffl6fK9I2xDvX1b0jM/Pb1ctXY68DjMevDXJd08V44//NczOMxj7en83kS
67fnt6djrieZHzNdX7c5jr5+n2C+n/pJ9w3Z14f/c0o8nrvoRLmeZjrX05jr
acz1NOZ6GnM9jbmexlxPY66nMdfTOL383g8e3lHGHdjD3ewMfkmeL9O5nuT6
WX8eEWd9HhEn17dYX18vlOtN/MnolI/GFsgv15dcP2J9/e5ff3I9qK+XV8r1
1bmsPn3aRv+Q6zX7eo/rMa63MNdLXE9xvcP1ENcrXM9wPbDcO93ZLOfzXF9w
vWFfL3A9wfk+1wOcX8+IfS/B+TLn55yv2+ffn3nb2R453+X8msfb589v5CxI
zlc5P+bx9vlvM2+79c+XOb/l8fb56z3e8/bPdzlfxZx/yt/bt2yfbw7wXq+j
cn7H+STLs88XO3r/e0zOtzgfxJzvsTzb9vldzuvvnw9y/oY5X2P5mOmcjzHd
tn3+xfdKnL9wvoU5f2L5tu3zJfvfK+J8CHP+w/Ix0zm/Ybpt+3zG/vvRnK9g
zk9YPmY65ydMx0zn/IPptu3zDfvvB3E+gTl/YPmY6ZwvMB0znfMBptu2j//2
/WMc3zHHc5aPmc7xnOmY6RyvmW7bPj7bvxeyj8f6+BeS4ynr08frsnL8XBf7
PC3l/p6t+jb9S/Z/fB7D/ov9Hfunu3c+Muarwf7nB1zPs39hf8T+gf0N5nq3
5XMVvn+n6xWTErsepWf2D5jrQfqjd8y/z4253qIvesX638Pz/30wrP/9noj1
7w1csP6e+QXr7yNfsP5e4wXr78WlWn+PKtW6vz7Vur/3rHX/4FnrfqSz1u+j
z1q/xzxt/d7rtPyeo663g+D7gC/NZW+/43uV94KWFudsx76f8F533473OpUR
b/SOG77v9V7/om7mW1Ur3ntjhlnsvcBFY58/zzTFvf1ModjnuT+bY95+OK+b
cxxfY1zvdXfczt4L9Y/xZt983Tzi7VgSjHdaUCrd9PI2t8Ox/fYV09J74v/F
vgdKM629MPidwGWT7q0gSZyznZwwl7wOoyYnx5Mm2RvHRfO712ty7Pzggpnm
bZ9nxLu87fNMrJ9zZqn3PFPEZ7zzFf6d9hSzxQvnnDjndczu/WrJRSPWnDYd
S3auc/jFC+Zbbz18PzDZ9PW2u2Ly+uX2Hsfn9z/F9mv+65nzwAKxz5+Xmvre
+5/fzel+Rew48f++3jnH/60mZzdww+TyXqddxns6H2XEjpd7jLeZrU0387zl
7Jf3p7d3PEow3u6j21Uz2jseHJT3a473348Yb/P65bJZ672+x+T9G+lN+M94
L0+bS7HHJ8r7mXN+k2i8yVcvmpzdzQl5P7d74z8R279FTEmvs1Py/uZ8vn8q
dn533kS8/54s7/dL3uubHNv/hU1Bb71n5f1+19vvnY3t/86aO73nlSrv94jY
49rHlvOY97qcl/f7h9h6X/bG57+/OccBv48y3uvh97nf69nvb7r3Ovru7O2A
fN/hjcvv8YT3uvnOuZ7wzfudc77lv9+VvXH473eiN44D8v5u8PYbh+T9vOI9
j2Py/uWcf2e/X5P2t+uU7cw+pX5p/n/1l7P+E/J+5hwXT8r7t9hb7ynxs17f
IfEp730Lyfs51htosvg+b798WrzJe16n5f3M6eKMvN9zvPOos+KcN8j3UW9B
ft+2W3o75rBsH395x91Ucc777jtnP5xqCrfdk/rsbWfN0MItJvZa5u8f3vRe
l3OyPe3zXv8LsePraTHTc/YTvnP2s5w/TI511M8M9t6wArK/6Ou9oPllf+G9
vQ/clO2B7YPtwXvbKl2X7YHtg+0h5zrvimwPbB9sD2wfvN+8//b7bb+f9vtj
v768HjzfpbH3eZy3nDIu5vxmTdVtc28bv1eul/k84Yr3vuR3P/YGstikePvZ
fLHv35bFtqt8bs55w+/mZe/xedyc5/OnedPbL+UV7/Fev9xuTlfrTEvvuJTb
zTmfCZq/vf+ey825Ptwk++Oc6z//+7eXTtV8vHr1bbHtw3Ebe+cP22L7wZux
67HtsffHcXHOcSLL3OmdP/jfh10dmmf/qG47jcchmbHrsx2m28gffyh9+Ka5
+2p8q0qpO4z3tle9Ebue2i3zY7YPjg8cD8Z6r/NeOX98+JPtb02cvU+Wx3T2
N5u893Of8Xbb716T4wnbG8cbjic5x/eDMj9me+T4w/GF40+7k4OOvf/aFbme
ZX921NswjsjxhuMR2zPHK/ZfHI/YvjlecbzheMT2zvGK4w3HI7Z/jlfsnzge
0QPHK/Y3HI/og+MV+w+OR/TC8Yr9B8cj+uF4pX8/009+zyJ9eJ/f8PlSP/O7
974VF/N7F+bn9y6Y37v0XHP+rxn/ay59cjxKKfvhzid33DCtt63bUaHsbtle
XvL2r3tle7jpdepvL7d5G55/fLruneAcku3lIe9877C8n2W9Bx6V96+21/Vx
8Vve63RctgfM+7ne298liXPOV/3jG+b9zRnXSdk+bOdc1/jHv6HeQEKyvVT2
wvOPd6/H3kd8w3tf/OMb5v0fENsucFnvhfWPX5jtYXzsv+Oa3uvsH58wxxv2
r1x/YB6Pc/5uW0HZv7K/4nyf95PzfT7fwvTM+T/vD+f/fH6EeT+4HuDzHszr
z/UArzfXA3y+Yl8f8P7wenO9wOcf9vUD7xevt339wPvD62tfP/B+0C/XD/L7
Zq4nYsc/Pi9gOq8/nw9gPb/j8PtYfs/G71/5fRS/f8WNvde5hJzP8ntYpm/y
/rs/nd/HMv0eb3klZTrm829+z8vnIJW8HWlhuf7h971Mn+W9X0VkOubzcH5P
zO+hRnv7H3975PNgPk9m+8zZ32+R4zHm813Oj/h8hM932Z7ZX7E92+Z8is9P
p3gr9q9v2X/xeSvm8xOOZ/TA/o0eMJ+fbPNWdFz6YP9GH5jPU3J+r5IkvbB/
4/NOzPx8XsP8nO8zv23OB/k8Juf983tj/0iPmPXxeQ77W64PmB/zeQ3/nid9
sn+lX8x4+PyH/TPXE8yP+XyHfz+Fvtkf83kkZn4+T2J+rk+Y3zbnwzwf/p4t
xwOuT5gf8/kRfz+T/Qv7fz6fxMzP51fMz/UO89vm/Jznx+dZHH+4/mF+zPGD
v5/A/o7jDfszzPx8Psb8XD8xP2Y/x/6P58fnZRyvuH7i8ZjzFfavnA/zey7O
V/i9Ff3z+yTOR+ibPuzt3d4+7e3Jfv94vR7yuvDPz3K6yCOf9+ScZ+Z2c87b
18fej1w5X/dkbIi9H7ncnPXEy/XGIG/73yzXh1xPcD7G+TvnV5xPc7zh/I7v
13i9WF7O9zn+92m8flxfcP7H9QSvJ+vn/I/9L68v1wOcD7J/Zf/HeDn/Y3/K
/o7zQc732H/yfnH+x/kc+x8+r2D/Y39+wecT7D/szyv4/IF+7c8j+DyBfuzP
F+zPA9hemY45fnK8z+mkiLxfg73nX9xtvKd7u0DkW5Pbm88/nj/pPa+S/4+f
+OD3RScGTJDjLcf7nP1EIfm8K2e79Y/X/J6Y43nO90j+5xWY76/5fTDH85xO
8snnGZjvr/l9Lr8nztnP55Hrecz31fTJ58ccrzDHH3rl/ef8kOMH/fL+2+eD
fL7M+43Zv9M724d9vsjnz2wPmP0v+we2H/t8ks+n2d9hzn/4Pp39Gd9Xc37C
98ecf/D9MOcXfL/L68n3s5jvY9n/8X0q+z++7+T14vtIzPePvB58P4j5PpDn
y/d1mO/n2B/xfT/7H77PZ3/D9+/sX/h+nf0J33ez/+D7avYXfJ/M9sL3vWwf
fB/L+833obx/fB/J/pT3h98jYz7/4XyV7+d4//i+H/N8OD9lf8j7y/kk5vly
Psr+kfef80nM68H5KP2wfdAXls9PYuej9MT2w/4V83pyPsr8bF/Mj5mf81F6
Y/tj/4x5fzj/pC+2T/rFvH+cT3K+wfZLr5j3l/ND5mf7Zn7M/Jwfcj7E9k/P
mP0/53fMTx/Mj5mf8zt+30U/fB+NOd5wfsb89MX8mPk5P+P6i/7YnjGfd3K+
wPZPn3y+iTk/4/yBz3/pl9/bYD6/5HyC8w365noNsz/k/IK+6J/rNcz+kvMN
zkfYP9AXZn/K+Qc9sv+gL8z+lvMRemT/Ql+Y/S/HK3pk/0MvmP0zxy/6Yv9E
L5j9N8cr+mL/RS+Y/TnHJ95vvo/g/eR6m/eL62feD76P4PXm+wheT76P4PXi
+pPXg+tFnq/9/ZH9/Q/XL2y//J6C/S/jZ3vl92Icb3g+bJ/8voLPx3l+bI/8
3oLjEc+X7Y/fV/B5KM+f7Y3fV7D/5vVg+5K/YxPbX/P6sD3x+yXM9Tf7a14/
tid+f4S5nmb/y+vL9sTvgzDXt+x/ef3Znvj9DuZ6k/0v7w/bD99vcz3G9wVs
H/bn/Xy+z/Zgf15vfz5vfx5vf/6uvx/2v3/n/eL7Cl5Pvk/g+fD5P/t/Pu9n
/8f+kc+n2P+x/2L/xvGf/Rf7H/ZP7F/Y/7D/YP/C8+H3SmxPHO8Zv328tj/f
tn/vxv6F/QP7D15f+/dh7C94vdmfcPzi+MR4+P0Qrye/3+H15Pc5vB9VB/af
EFfmsGyvXP+xPXL+z/I432d5nL/TK7/vZHn8XpDl8Xs+ni+/p+P58Xs2nh+/
J3v1vlrtAofOm1bTl4y7bftp2Z7ZH7A90z+vP7+PYnvm90+R25YV7d0rRX6f
xPvN743yffp182Ifl3EjN/ouanjqZdkfcD5F7+w/MJ+n0yv9Y65/OL/ieobz
IXrGnD+wv+B6m8dz/cz8XC8zXrZvPu/+a9OpRw7P/9AcmHVk781dxdwGtc9k
bFg6VaaP7fDGBy99Mtn/++Hlh4zs++UkU+erO5LvuFBQrk9XrTv5/nPvFnY/
eGHZV5demyOfZzeaP6lGnvtmm1ChzK6N3yjojmv0fuWswGJTvWHzX5895d9v
23HRkxVvL+m4mR3uvPBX0a3myJNFqy+8O0vuh6ywdnOD+LJZsfd3h8maXvdQ
+XL+74uj39w/Neu/K2b0PUlfrax+xOTqGHg87pT//WeVgeWXT+vqbx+j56z8
p3vfNNP89hKDf+h+3Gx/7fZ/Lxb0t5fKG6cXebTkZVMi9vlIhVY12i/YkX0+
8cAHWzt+cMIU21L+2pUj/u/xqpQv8s6xtv72VbDDxu033rgox4uP77oUetLx
f6/aYkTNF8aU9j9vvX7lmftGfH/OlPmoUeM1V7Ov9ypEG7Z41P/3657u9fzj
i86mmJdv5n/0wSVhM/Hi9odWfJ8i+/8LLUu+eqbUGTMqtr0m7//ZrD/o338Q
KTWje+6/i7glltV7/9ON402Vk51ezjOhpJv19o/3vNLoa/PMiS82TzhR0r23
5v9KDb5nrPl5xe5rXz5cyq3ZK7z/jx+/NNVrFOk7NK6Ae3Nhn0Z/bJ5vXngw
V7XujfO7090ri0aMWmree2eumzWpgDuzY6TBI28uNSvnDGk16Wpet857/as9
8nr2+3v40KrLj+R3H3mz341fl6wwDQ8+sDxfNK/79b8n3v9g0h8m/+0V37/3
vizT68vZ91ysvt0MfGO0s/Eux21U1S1yKbjN/Fq13zcNxmWaxFLNfpxTbJd5
KLNbZH25dDMma8jVrOUHTcECtc7V/jD7enxwv8c+fuiYqbey8sTGFS+bg+3O
fdR0daLJ++7crNPZ78elo1eeXTPylLmwe8ioYkUj5kjt5g9eXp5stvyS79Kp
yhHTYeMn3z3e9LQ5vDnrqTcfPGfKVt/6443OZ82WEvl/Gj08xWz/5PlTTSum
mmC7/q1aVDljes/rnLLryHmzam2Vr5a3PGM+q7at18I+F8zoT9eVmF+8sLu+
SKcvIw98b3JnHU/o+mExd/hnm0cml59unvvpzsC0scXc66NG9V/09TRz7o15
5Uyegu73PSY5Q3vMM8VmNJt3plphN/e1luc/qzfXrBtUvN7+8gXdQu2TVz1f
cYlp8oJbeHWDfO7JB89+9mjnFea7hg1a35if363w1/3fLau73MwovOPtgmPy
upXW93yr5XN/mqy3f/+nzrIs021PgdD2vP+aMY/fczljXIa5NGZyje3H95q4
eWOXVVhU1A1vaZC2YOto81293R9euvXvgYTqzCt7friZ2rnXtUlFi7uzKm1o
Fbo0xdSpVSzrg5eKu26Lduajc5Pl7xlcGb2uXP3qM0yDBQ8eqfljYXdn5L+m
Yxf/FLsOy+8+OvLcE7uO/yJ/T+DXSsf/u3H8Z7m/f36uNnPWFFtqkvo1uvnO
7Pyx+yWWmD/Hnpo+vXIB9+rxb+cdWhuIXRfmdfONGlI2+affTL96u2d2jM/n
rvr8ueq9av9miq8veHu7Dnndrs32jKl83+9mytDqJ5u97d9v/4i7utvkDXnc
wqUKN96Sa505Nvzr224b5N/P/sxTS14O5M3jDupatVa+AUFTY5X5uudK//70
X/6ofOm5l3K7K+98I/nF7zaavnk63dk/n3+/eY/xjcYsmJ/Lrb+8cHzStnhz
/VzrfaV653Jn/Hqgaq05f5uhp6v+WrJALve5X7oWGnf7FvNS3a7vdD+TvX9r
/+HTdQduNXPaDgqs2eu4J6q1r3g4ZYsZkfp4263js8y0Nn17nH5km2ly/5Yq
L/5+08w/0nzS9FY7TdkFRY+X2ejfX73w8fGda9T1P8/5o/7OqqE1182q6clr
f7onwfTblVW37JyrZtT63GX2fXPI/Fn78g/HGvmf71we1HhvhRVXzfz9X69r
//Vhs7133mLrll41Cx4fv7HPtMPmwZY/D9w++4q5b1fxSouyz386fDX/QLtH
08zvo2sXGxY8ZhYlzy23bq5/f2yDTVdW9382zUypN29n6qbjpk+3L9otPnnJ
XDm0s23rm9n72xo/VqnxnP/50dA/3+m18uIl03t5q8/ODEsyw4a+GP/yu5fM
rFXN2m+tf8Ic31xz3GsPR82hMsubX3/upGn5UvoP/Rb494s+3Pb6zTefiZqv
RtfbZ/45acq8PuW9956KminJKSd67Dxpfn+9zL0vmYvm7vtbrSu/8ZQZvXHO
Py9P8O/f3LHk/LRDGyKm6bJXX2kxLGRKNO/Q5JETETNlT4myMyIh03TFxUWZ
RyJm/Po79o9wks2FqndPur/sBXP7S08sfX3GadOg/JAJwXYXTNngK7/9UOSM
adKtx31PTcs+X6q1+UD/38+YlJE1pz5/INVsbrjl/JClZ82+B34JD/nUv/9w
19j+s369N9UMbt/g8+pvpJjTf/7Sv1fPVBP9Y/GwdgnZ1wNjB80q1TXV1BjX
vMHs/1LM0RXrdu7bFzaR0sMWHuwdNs8GWx6MfybF/B13MvHGa6nm2eMPbVh8
JEWuH44VnHNp1Nyz5lD8/g3Plz5ndn30zooVl7PPr4LdJv026Jyp/bbJnfxh
9vnD0mNHOxc+b+r8XGfpNy+eNf36HA3GP3jeFGjz0fPmkH8+vPTXJ0a88elp
s+2VR587/dOF2P1nhd2zC95pFSwzxRSsOq7ab/n877v7zJ6SFu1T0u1Tt/Zn
yW99Y6pdfjB8YFNJd1beFom33z5O7lcL7i+2aMB9X8n9ah9N3DUlX78xcr9a
+5G77vjt2ii5X633hG+euWP1SLlfzSky6IN/Fn4Ru3+stDvq7W/DleJHyP1q
j+4b3K9ZnhFyv9qB5bUi970+XO5H29zovWadds82R50D69t29b9ffzp2f9ry
RUMaHfh3Zux+uKLu22kbly1f8r157Km3F/z9sv/5fc3Y/WlrysddXlVyvnmo
aPlCbz7h33+26ZtH7nmzawH3YrOn//ns9FJT4WLuEYvD+eT8aFeJO4aPK5Df
7RN8olnT51aaKwmTDve/5H9+X3vdKxVans7jNnx91unbnlxrvm57fdQzN/O4
lfd8tfP942tMo95jHitZ2r/fjPvPJnZZOm5qYL15MM+Bar918u8/4360Hk9U
Tnx89gazYGVTp/cy/360XrH708ZXXzev1OZN5s5zx7/fekcud9zIYqPabN5s
Ep4x17JMLrdM7Xazd7fabK4GX1vb6Xn/8/XVMwc2aFbDv/8s4eNFTWr3vWl6
v19w4sM3dpp8q/v9lZrl34+28fmRrw756Yap3+j5csU77TGDG0YzOwzx7z/7
blOu/03e798vdtfNKnl2jks398Y+P5i/pczB4Uv8+8PyTqlW5s5q/v1hf7/d
8tWdp/zzw2e3P1Rl70Np5kLljrkmXD1uZjUtNn76MP/8cNaLI/e+cPySCbZN
aPjAj0mm76+/DmqYy79fvnrFlE9KGX9/dKlWuSrrjvuf909d3DO6/k//fLHo
iLxfO3v9+6MSB0zqPXmIfz/UtLZxxbt3jZgnYuePT/fu0bpZhQvyedWRJ3Ob
vw/4/qBXr8FbBp2Xz1uLt9qxfuqTF8zrxzJrJlQ4YxJWTDpxeO85M/nRsbum
9jlrOv4S/vPphqnm/tj1ZpkfSzaaF/DvRwrMyazfq1JYro/Gj7x2rln2fovr
z9/+G3z6g1PZ+4+qu6stG3XO1O/30vq1a/37gxJ+nvTuH3+cMV/Ezk8rPB+d
8GxJ/36ePINLLRn8teNuKD3w5WbX/zFvbM3178LvHLdbNLlfo+3/yPelj8fN
nzR98i7T5YN2Tdb18u/X4fOgeq/VrFmo5yHz8U+13+n51tXY31c5YnK3T52a
evmy3H/z+RvJH3xRwb9/5sluG/fvW+HfH1MylL6o4/nz8nuFKmXvPvvtXf79
LWXGzqqV9IB/f8onP7x4te/Xpdxau+rvXTRttHkpXKlizzOl3OPXuxc/0maU
ua3+jmLRZqXdvq/3aFP5nS/MR6ty3zf0h9Lu2AtnJrdaOcK8cu/UWgmXS7uN
B7vJ7cqPMM1yrS065fkybrG973Zt0HK4+b3jaw8Nn1fGTfyqR9mefYeZXe/N
L3Nf+6Lu32M3HnYnzDDLirYJNpxXyA0tH9711Xt+Nl0WNkic0b2wm2fP6f2F
UqaZOtXzns3bsaC79ecKrR7OnGPujJb7/ODuQu7H81LbLXp3nuk+96MnD+wo
4H7+Yn73YNdfjbu8danOvfO7Ax94dlZSaLkJnArOOPdFYXdy/YN/3J061XTO
/2NWl2uF3cKPHv2jWfHJ2fvP2jV31yvi/nujU5kKQyeZ2+Mifad8U9T9t9G+
re0b/2CSZ509fff8km6N5me/GHphnFl357iDZ/OVctv8vPftjdW+Mt8Fkwe2
DpRyD62pcXlCydGm/tp8v5zIXdqt/MvBDx/J+MK8Ma/mGzs7lHbL9vs0vskT
X5isFzc8HV1c2u01ee5H178dYdZMWjb9ydxl3E9r9lm6KGu4mdi4/LJI++zX
69+uFY9XH25qj7ljwC+LyrglL9Z5bW37YabofTtXDxhZ0C3X1YlMqzXHDG3Y
8upzZc+Zg6NTu/5UPcU06PzevHG5zpjDHbu33nPzvNl1d6f37kop6r759ZSx
VUaNNF2LvPdy+W8LuU3rHD9x7/qZxnnrr0Y9Rp0xby+sXrpB1Qvms4GNNnxa
xP+9Q5Ma/SfPnet/fjJozKCRGZvPm8Wxz08+6l+hz+tp/ucn1z6sm7krJb+7
o/TLi5cuWGziJ1WaWOv7fO7kAXWfqJi2zFy9cXxs75PZ5/t7577TrPsy063O
7qOd7svnTlwbN+2Pn383j665/MOM7/O4wXvSB2Yd/dN0eaTbtrxr8rp7t9dz
Z76z2tyY/kXeLSdyu4cPvFhsZnidqVV9f5cWD+V2B10b9c2+ChtM/geGlto3
KpcbXRnuUuX5TeaTfJ1OvH3Kca+cq/Jt+rS/zYi3rwRPlsgyv7V9Z2HuntvN
k31KXht49qYpef2rk50ObTeNv33sxzLXs8zF+/vfdVfX7abtjRK5976VZdJW
X9/3+uJ/zSeDpz566MJN0/TwxZEL43eYBY2fXZP04g3TrcHO87XW7DZXi/9Z
r4GbaXrP/+bNu4buNj0OlqreJHjD5G75/OoH6uwxd/464WCP+BtmZFauvwJV
95jQ7VNfXJh83fw87I6Ht57aaxLHjAxNfjHDLL6jzuyWDfeZdX/caNtr/DXT
4JlBs2aV2W/GzG69vn76NdOiwr/v/6/nfpMQfuqNai3SzcJf/ysSaX3QXHlm
w9WGd10zo9yleb9IPmDun/jTzOlL0s2zVZ+NG/PbQfNWk79SS65MNy9WL1Ru
ydyDpse2+XXqrrtijq3Z0rNYlyNm9As/lTvw5xWz/cRjPZ9564hJ3nHi4xGV
rppGf/5Y8b3NR8yvY+/56OK8NNOo8eppB7f9ZwYsf+BiSq4r5uKO9XtnVjlm
Oncqt3xt3ismvfkvD54sfyz7/Kh14a7PXDa1V19pu3REollSp/XYF6dke+LW
559emWjuLNat9H2zL5u/X33zy6z5ieblx647jf+Kmg7di6VGvjphhi9d0GFY
IGryrn502qRpJ8wD77Ue+H7uS6bpubontm04Yf6d8UyeOl9eNAtXX2gx+9lT
Js/b5uLQ7RdN+kf/++xq9vXyrjtGXx129KKZsTbUd1PvUybxx/hD2x6MmLij
f6dP+zDZlE4OfPZf34iZ0OmFCbdlX0+nt0uel2toxGwevaHpd9OTzRcvXxk7
dsQ5s2BmxdMLCp41wQffX/vA2+dMk/rdGoernjX1N5UNzs6VfV6Z5/NPtjx1
1sS/n/jCfdnHnc0J99ddtiZsSpSpP/2NtSmmwNhCld8/Ejb/1hj0R+7WYVO7
QOm5ZzPC5rmX/txqXjpjxlVZWG/I9PPmt5I1dkz/54wpUOvkzu/2nzej3jn3
buujZ8wTW55Jv/2v88bMOFHyx7NF3Nsa5o3WXfuj2R/7/ffcVc2fXXp1gPlp
Y2rw4Ili7j1J9/bslXeImbfrrcxL3Yq7n6X231pm1sfm9uoJtZzCJdzrP5QL
rqrd25yI/f67zPFR1Zrt6mq+alvHbG9Vwr3jriarLxx+y6xaubzl2K0l3HFl
652IZLxqsmY9Wq/p+RLujfEDvqxYvZPJnbvWiqotSroLSr3baPEj401w1rK7
W9Uq5PZ7O1+D/ofnm9wDfph+4a8bplKHI8H779ltuiXOXvVK4Rtma7sfBk2r
tddUblF7a8/yGcYtOHTEv1P2mcqb2357x0/p5r4Sk0tVXHLAbKq+N7Vn+2sm
evLr2Q+PPGA6Jh2r5ta/Zu7ve1f6gU0HTI1iPQsd+PSqqd9n6ISTBw+Zzgej
P7VIvmpajkz4uVmdw6b1lJk1fzl+xRzdfOVq7yZHTYX01+q8eemymbtnf81p
PY+b68UfXT/m2GVzIGPE4jcnHTeLa+7Z8GmrNJNcp0ejQUuPm9u3rOvacfYl
8/YblWp0eTnJvDiiTr05Uy+Z/A1/+vDerknmriUnSm26fMnsrpbWqP3AJJMV
7PD48YpR83GZIwdn9DtpnJSUzPFToqbIsJtlSr920tTq3HjKzS+jZuCQmUUv
v3vSDN7x3vHX+0TNO/sKTG0x5aS57f66q5zfIubmmmFTPp8eMpXHhl5Zmvei
ORZ3pUvrdSFT++yGGz8sPm+eqv9W0rCrp03Hrl1WdRhwwXRYvOVqIPW0SRq+
4OC9xVJNtcPXhx0ZkmJaDJ71aLX9YTNqdI2GD61IMWO+/GNo6x9TzXfJd11s
NSvF/Fzq422bRpw1360ulNXsiXPmqX/uKnTh9bPm35Rpzd579Zz586+/LlQp
lWLylmyRv/0r58ycjreteayV//vxSPLAZ4eNLui2PT9nQPGfF5nvJz7UPPfc
7ONTw296PvPSIlNlTnKbian+78ObturQ77E8/v2g+eL69q8zxf+995p/+n+/
IN7/Pfey55/unHXvRbN30wfxz3weMh82b/fogIrZ56MFdnQtMzNk8qbPmprR
w/8998ZcbUe9G7hgHrr8+y//Bk6b2YsGRx+ac8HUvLf9x5/Gnza3B8t0PH8k
1fxdqku1rdnXpzMbrKm+9K9Uc3B390ZZn6eYlfX61+v+dIrpOTJab0KVc6ZZ
o+Gdl9dLMd/P+j3rqXrnzDv9a7RpNtv/PfeaNp/eHJB22lRc8Pz45Yf9vz9e
fMqoYlXXjzGZh15rXvSpou6r94967PGDX5nj/5YZtOlCdo+nW8948qdJ5qd7
Pyz83sQS7sxZp36pP3ai/L76zQKV9yaPHG/y/rtk7Nrjhd31hSuvdcfPlt9L
J+/eNGPyb7PMs/G5Bi7YXtANbJh4evbvC82IgguL/vr6DXPmwD01+y7bY/qP
OzV3zI/XzEOd7i1bo8ABs6Ljl/cvftL/fXLzy/W2razofx+wKnVs4YvxUTPz
h2qV2lU6ac6MGP6L2+aiuVKqyrx6bsjUfGJRl3yT/N/fbt2db8syJ2IG311q
/4bep83EZ6tf+Tr7upvfO8z4N9Luepz/e9jiuwIlO7Tyf4/auGTSwmevp8jv
UUf8M2zFC0NTzPALZk7lQ6nmg1EzRlX+z/996Pv31A/9+sAZUyL2e8/Ose8L
5y5/4c9v6u2W7ws/aJteP3DkkNlQuNXvW6r4v7/c+2jW6uVbi7mn6h1Nmbvu
U3N1ZdKQ4U/kce9skvbcyENrzN4znX7cMCa3u/De0hteyhs0+Xc+eLD10Vxu
0xHdF5R/cKM5WGLuvefr53KLPnp7oUZ94k3RuW9N+3WK487ZtOdQ3LbNpsj2
fNPrdrxpHnR2lfvsjh1mwE/737w86KKpdL52k4Q8IbPyrnyzhlT3f0+47rHn
i2V0PGd2rJg+LT3prKly8egXb/2ZYtq9/uDnBb5PNQPzf//mzP5nTOLabgVP
PJ79okw70O5c4aKuU7vY1Q8vjzOt830xs8Bvxd31xZ8pX/zQt6bz4sxCQbeE
W+71a3mvFp9kfqy7MyXXgBLuv9dTCry8Y6J5quFzFfu3L+TmWtn+nh5NZplX
909q1/SBIu78xz67WcKZLb/f+3zB/5pMWbdQfp/34V/Vvlx7MyC/v2t6rkvH
O5esNlOLl/niaIfz8n3Q0KbbPxkwIWyWxb4Pav/nqpa3vevfn3/og6t75s46
bdbEfs/7vx45nw9fLD+gR7H0uebpZ75K6/xGPvfJ7+6+Y+CS5eahz+uUe+Pd
PG546QNlyxz+y1y/c8JrPZfndn9/Kd2EPlhvPs8qO/hq7tzute1LfigzZYNp
VrVFzd6vZV/P35E/d4djm8zfD+3t8uIax/0679bG39TdbNY1vG4+K3HD9G35
4vd5K+8xX40utXhBx2tm+IB/Roc/2G+mtD27evF96ebGMy0/O/3dQfNcxjsv
N56YZi59MaXihXP/mXEtMtxgvctm5ZGqg49MSzRvdn566873L5ruRxbl6fbu
KdNm15Frd98eMfEth32Wb0qyOW/695mTvd/4YOcLEy91OGuG3TMw490JKWZA
vW0PxRVKNVUTh7Zs3yx7f/L+Z0UOLDtvGn1XIblFqTzuqp77A6ln15ojZ7qN
/O6V3G7DgWPWpn4WNO9evT1Y99dcbve1bUt3X7nRTFnYc9g/RXK5xY9X/uSp
XH+brwvc8Wuvdx13x/h6cR9+sdXcV7B3vncq3zS5kh9f8MqeHabv2uDuii9c
NRW6VO33RNsj5sDj307d0+SqObr1txnXP8o+vxv56KTWdS+Z5r3Xvf30yBNm
xrcFS6/43yWTOvijsr/OPmEe6bZl6oUm582Xj4yvdij7fGhiZrMps6udN19N
WpO/2z1nzZ1NTk05OCZs4tZ/UnDV2rCZ+cqDkSK9w6bWle8n1zoaNvsLHHdy
Tfa//06dmr968dv977dfDBTKv+/LNDO53KPPP/3AcbPqSpNm2+72P499/606
tbc9eNkkVPm+y75HkkyLb4Zfu+eQ//cDW6x+rchfNfzPQ+860eboN8v9vw9X
+oHybuQf/++njZ3QvMGztfzPFyckzn5z8DL/85XErzLvHfG/K+bzEn2X7l17
VL4//+/uGQNzpRw19WvlObWr5yWzaFWh6rlmJZk2eaqvLdnX/zzlrgUFh858
zP/+fH7++jv+T1nnHY/lG/592TujMqNSpDKiiHBcyCqVtGSlZSWppJBVWZnZ
hOyMUiEKEVL23nu79+22yXg8r5/vff2e1/PnyT9ernWcx/k53m8uhAKeZTz8
1TcnwX7N2dx1eAZstvslLkXPJx6mkMBrOz923SPl5ZkZAvU8nVLApnV4BOWp
FDWIyUeYoefpQb1vS5Xv4SD2Nna69B8BXj4VkD9/Cgt7yxLVEwKJMPP3MEXN
FuWZdfR7fs63nd4+zyeD/q39v24NLGzzWAdh7+ZG2fIztP+gr/6VYHUK5X2s
v6SzsUXmgIlJ/2HGozHI3R8q5Ko3B7dCje6J3fu/35M1xoVcCrVfEeoorHzx
BNqfeBCZ/zj/GgkePFn5NjyPAb+J+1ZHbEgg3KqgaTyOgdMn0n6FPcZT+xdi
mgbnad/hoXAq2dA+Bw8v8x7/UMrFQ4Ixvem1aDwYt5bt+ruK+hNh1vhmn+IM
0AR2rj7imYblfR/NK87SILqSlpfZ6GuhOlipo6Z2HQI4aC7H/22BDzoYoveF
ZVj6KiZz3aYXsrPfHDkqugSP2W8ts6X0QZN4SWzthwWo7Km0Vhwbgj/HOUXP
6s8D24u0bx7co1CXhre8SjMHe9lnzmhIjUETH658NpwCzPWnp6MGtvYfGQUv
6q7OwN4VeqycwhRIPnEhLCrPwDPW8EudzNPgKNQ5w7aPBFJ5sjuVtt771Q/D
nrpiibB6mMn/dhYGYrmu6fGMEaGxSNoK+YIBS/34Fa6t69r4ubGrrAALrU04
kZGt+2LB0mtd6xgeTKNq9KRl8UAKe31ExQIPKe8cdf9J4oFcJ6gvYokH1ciJ
/gOTOBjFBF9ksyeAGeaKRFkQBpRkmLPJW+91ebfxC4sFGPh11U3OUpIE9DL8
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
B/JkJaM=
     "], {
      {GrayLevel[0.8], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxM3XW4VcX/9vGzYvfeBw+2iIKgWFgoiqCCCoqAIBaCpEUppSgiKoqCYHd3
InY3dnd3d3fr83l/7/t3+fwx171nZs2sWWtesw8iYvsxkwbvlzY1NU3t0NSU
Rdabm5qobxhl0yilKOUoGzWpnWu6OvMoGzsLUTZxFqN097hKlG5uY64ebqtG
2SrKElFaomwepcb9o2zhbETpFSWW1NQqyi5RYplNHaNs6TbGb+b5GL+152sd
pbdzySh9nEtF2TbK0lGWidLXuWyU7ZzLRennXD5Kf+cKUQY420TZxvMx1/Zu
WzHKoChto6wUZaDbqO/gtpWj9PTz8WyD3dYuyk5R2kdZJcrOTp55R/fTd7Tv
wXy7+n2sGmW3KKtF6cS8MfHqkUN5R/F5jchhTXo5LVFfMz7OjpfXOj6vxXNE
Lhll7fg8LkoXG5jm98v+jHcbFibaAfu/n/eefZ7cJDfs//4ex35OcRv7P9XJ
vBM8H3Md4Gt5N3P9fLybI7wHvPsDm2SC/T/IiaMZTvb/YCf7P9PJ/h/iZN9m
ObFwqBMLhzmxcLgTC7OdrGOI3zfv+kivi/2f42TPj3KyT9P9TKx7np+J/Xwt
ynlRzo9yn8ewt3NiX46Mskzsx3ybwMICJ+dg1Wbt/bFRirGnnZq1rqNj3FFR
lmXPMdAsF/OibW6U5aK+cpQ9ou3cKCvE5xGRZ0RpE59HRp4ZpW18Hh15dpTr
/Qy8+5WifUzkOVGWj8/DI0+P0i4+7+nnaR+f9/JzrRKf9468IMrFUcY2ydcl
Tkxd6sTCZU58Xe7cN8oVTqytF3N2jLJPfL7SbZOiLGySP6xd5TbqV7sNdyvG
uFGRZ0VZ5DaMX9skrxi8zskzX+N++m7wO8DdjU7c3eTE3c1O3N3ixN2tTtzd
5sTd7U7c3eE8PMqdTtzd5eQc3O3E3T1O3N3rxFAlPKxvO4ttivN0vxODDziP
ibJhXNulWb54x5xpzvOC8DI/yprR95LfGR7WjvoJkY9H6RyfT4x8Isq68fmk
yCejPNWkzydHedp5SpRnnKdGedZ5WpTnnFh63onJF5yYfNF5ltfNGeJsvOx1
YfIVJ7ZfdWLyuHiOY6Os1SwXfFfxPXVl/FCbGGXfKK83ySxW326SV5y+48Tp
u06cvufE6ftOnH7gxOZXTXKDlw/dhs2Pm+QVm582ySLWPm+SRQx2jbU+HPlv
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
t2F2vJ+PZ5vlNvweluqfATB7uJNnPtT99B3hd4DxI534nePE7FFO9vxoJ2bn
OjE7z4nZY5yYne/E7AInZo91YvY4J2bH8PvVzTI7qll+ToxyWiqLGDw5lSnO
0ClOzJ7q5LrTfS3nb7pt8s85Z7gN75emsoKRs1LZHRHlbCdOz3Hi9FwnTs9z
4vR8JzYvcOL9Qid+L3Ji9mIn1i5xjvU9OTecjcu8Lvb2cid+r3Bi9kw/B+vm
n+n5vSt+3+rNSqwjyoVRrkp1NrB8I+8ilcFFqRzj7honlq91Yvk6J5Zv8jjM
Xu82XN/sNszelcoc1m5N5RW/tzkxe0cqoxh8xnvJHt7pNsbf4vkYf7fn47ze
48TsvU7MLk7lFaf3O3H6gBOnDzpx+pATpw87cXqf52OuR9yG2c1a4py2yOmj
bsPvKtF2cvwzUudW8es1Px/Ptie/rx75RJSnUvnlu/BpJ8/8ZKpr6PvZ74V3
8KzfB5afT+Ueyy848fuik/1/yYnfl534fcWJ31ed+H0/lS1MveY2LL+RyjF+
30plF7PvpPKK0w88DoPvuo0z9J6TeV/3fMz1oa/l9+Z/8fNh5HvvMUY+TmV0
YZRPnFdH+dSJ08+cOP3cidMvnDj90onNr6PckMr7N078fuvE7HdO1vGc3zfv
+gevC7M/Otnbn5zs00d+Jtb9q58Jp1tm8euHKMUoa2a6N/f8J5VFDP6eyjF+
/3Di7k8nlv9yYvlfj8Ps325jLv7FPW34LWXyhLU0k12cjguHY6M8Fp8nNMsj
61sh076yh6yVdsYnmeZjfDnTfJitZErOazVT4rSe6d3htJEpcdqcKXHaKlPi
dIlMidOWTInTWqb5mKt1pjbMLpXJKKaWzNRGfelMbZhdHGdvnSjfNOLXO5na
3oyyXCbHb0dZPlPyzMtm6qevTaZ3gN8VMyXno22mxPtKmRLLK2dK9r9dpsRv
+0yJ31UyJX47ZEr8dsyU+F01U+J3tUyJ39Xj81f2u0amxNA6mVzica1MpvC7
dqbkPHXOlFy3bqZrf/K74ExzntfL1Mb3zX7hYd9medkg0/nEcpdM+VuUDTMl
ZjfKlJjtmikxu3GmxOwmmRKn3TIl9jfNlFjuninx2yNTJr4PZ4iz0Ta+UyfH
2r6LPZ0YmUd/zyi9Mn3G8PqZnuMX7zHfVXxP8f3Bzzp+vbaVzyLno08mx/jd
xom7bZ1Y7uvE8nZOLPdzYnnnTLYw1d9tuN4+k2n8DsrkFb+DM3nF5thM+8e+
7eg2PO7kZN4Bno+5dvF9OK+7OjE7KpMtTA3N5BWnw5w43d2J0+FOnB7vNXH/
3TK5Z/wI9+N3iO9D30i3cb8xmexids8onTKZHejn5pn3cht+98n0Pcgzj/Z6
Gb+3++nbwe+JdzTO7wbL453Y3zeTXfZ8PydmJzkxO9mJ2ZlRtshkZmKm88D4
Ke7H8lQnlqc5sTw9k13MTgt7U5vldFYmf3zHH5L953FKs+51cJT9PQfnoF0Y
XjnK92H4RO8xdk7wu6c+L5Mh9vzwKFtH6R1lthOzRzgxe6QTsxP8bni2wzJZ
Z/wc92P5KCeWj3Zi+RjfE7MLvH+Yne826of6WZn3OO8TbuZ6DtZ9rMfR91aU
C6Jc6HVw5vgZ8oDXwf1PzmQay6c4sXaqE4+nOXF9uhPXZzhxfXEmQ/g6020Y
PzuTY8yem+mcjPa69shkdn78mm18lAOatVbaMHuRk3nP8nzMdYnvw9m91InT
azJ5wtEV3g+sXenE7FVOzC50TvLe8m74Pro8k3XGX+1+LF/m+9C3yG3c77pM
XrF2vfOAKOf4uXnmG9yG5Q3iZ+P0eNaD4vO1Xi/jb3T/gVHO83vifI9rkeVb
o9yW6TPn6c5MZwAXdzlxd7cTv/c48ftYJlsYuSPTmWH8ve7H9X1OXC924vfB
TF6w9nCmc4LZJzJZ5Dvscc9N/dFMdrnf/Z4Dc494HH0PeT7mOinTWcTiy5kM
sedPZzqr9D/jxOyzTsw+58Ts7X43PNtTmc424593P5ZfcGL5RSeWX/E9Mfua
9w+zr7qN+pN+VuZ9M8r5mSy/5DlY9+sexx6+nck0lt9xclauzsNelElRPs5k
FJvvZfKN6/eduPvAic0PnRj/xOOw/JHbmOtTt+H34LA2o1m+Ps9kl7PyhROD
X2VyjN8k1x6zV1+7Db+feT7Gd4jv0S7h+Mf4Lp0Zc98Sbd9F+T7TZ6z+mMkr
e/KTE3c/O/H7ixO/vzrx+5sTvz9k/9n/3W2Y/TOTV5z+4Tbqf7kNd1/6+Xi2
v93G99+/mUxjkD9kS/LM/7ifvjTXO8Bylis5Q3muxHshV3IOirkSI6VcicFy
rsRyJVdiuZorsVzLlViu50rMNnIlZptzJWZb5UrcLZXLK+5acp0fLLfOlfhd
Mldy3TLx+Y1MflfPtffs87K52vi50THXfuNl+VyO8btCrnw3SptcidkVcyVm
2+ZKzK6UKzG7cq7Eabtcif32PgNYXiVX4rdDrmQdB8TnTaJ0i7JqrnXhd7Vc
yT53ypU8z3K5noN1L5HrPfFeNgqzs8LrN/F5RK57c8/O+X9+18mVuFs3V2J5
vVyJ5fVzJZY3yJVY7pHLFqa65GrD9Ua5TON341xe8cvz/GWb2+faP/Zt01xt
eOyeK5l3w1zzMddmue7Ded3cidltctnCVK9cXnG6pROnWzlxurUTp1f71+n8
PlTPXO4Z39v9+N3C96Gvj9u4X99cdjG7nROzXXM9N8/cz234HZBrb3jmbb1e
xvd3/xLe8z99pie2aI/WjraBfk+43jGXafzu5GT/d3bidxcnfnd14neIE7+7
OfE71InfYU787u7E73AnhsbYJR5H2hR+Rzk5T6OdXDfIa+fsLojn2jfKIfzZ
Yc+BZX4+4AxfY6OslevZxzkxO96J2QlOzA6OsrTfyxHNGrtPlInux3Kn+A7v
Gufh5/gO39dt3G9yLrtYm+LE7+yY5/BmfWdMdRt7u38u0+zVJK+X8dPcT98S
hfi+inwpyvRc7jF+UC7fnJtDc3nF6Qy3YfxgJ8ZnOjF4iBOnh3kcrme5jbkO
dxvG5+ZyicEjcpnG75FOzs1RuSxi+Zxc3xHs59FuY/xsz8f4eZ4Ps8c4cT3f
yZk+NpdX9vz4KDt4f05w4vdEJ35PcuL3ZCd+F3g+5jrFbVg+LZdj/J7qNuqn
uw3Lc/x8PNsZbsP1WblMY/lsJ898pvvpO9fvAMvnObF8vhP7PcPvFi3y2yHy
9LC1Sdg6kj+jHm0XR7kk12ccXurE9WVOXF/uxPUVTlxf6cTvVU7MLnRyVq7L
5RJ3i3JZxPI1Tixf6+S6630tfh/w3rPPN7iNnzn3er/xclMuuwdGudmJ31uc
mL3VidnbnJi93YnZO5w4vdOJ/bucWL7bid97nKzjQa8Ry/d5Xfhd7GSf73fy
PDf6Of5v3Zw5zttDngO/v/ne3POpXC7x+Egu01h+1InBx5y4fiLKcblcP+1x
+H3Sbcz1jNuw/HIuW7h7LpdjzD7vxDLfE9jF6efeS/bwJbcx/lnPx/hXPB9+
X3Vydl9z4veNXHYxOy9Mzo1yAe8hjHaL8mt8Bx7TLKfvRHk3/8/se07Mvu75
mOt9t+H3w1x2MfuB26h/5Db8vuDn49k+dhuWP83lmH8m+MzJM3/ifvq+8DvA
75dOvH/lxPLXTvx+42T/v3Xi9zsnfr934vcHJ35/dOL3Jyd+f3bi9xcnfn91
YuivXC7x+HsuU/j9w8l5+tPJdX/7Wszya0n+2Yh//vnHbZzLekH7jRf+IzjO
AH6TgvLhKGlBidmsoMRsXlBithifH89ltlRQ4rRcUGK/UlBiuVpQ4rdWUD7r
+3FuOBuNgtaF3+aCkn1uVVBi+V8/B+vm9wD4vSh+P6ulINOcia3LsaYo5Sht
Cv8ZnNSizytE21IF+cb10gUlHpcpKDG+YkHjMNs9XC8I02/G57YFtWF2lYL8
4atdQXZxulJB/fhduaCkr31B/YzpWtC+sp8dCpoDv8fGOidHmc9/P1RQG5ZX
LSg5x50L8oe71QtyjN81Ckr8rllQ4netghK/nQo6A4xZp6A5MLteQV5xulFB
32Wsb7WC7smYdQu6lus2LmjtGFy/oHG47lKQaSxvWFAy1wYF9dO3dkFr4Rk2
KWgOvJ8Qz3x8s/Zhi4IsYnDTgnxjuXtBiYUeBSWWNysosdzT4zC7uduYa8so
hYL89i3oPOBu64Ic47e3E7/bFGQXs/0KconHbd3G+K08H+O383xc19/X8uu1
q6JMjLJvlLXj53mP8PR7fE9uX5Dd1lEGOpeMMsiJ0x2cOD2RP9sSuVOUnQv6
jOddnHjfvSCLWNutIK943NX9uO5W0PvmnQ5xG9cN8HpZ07CC7DLXUM9Bfbjn
xv4IJ35HOjG7d0H+cDe6ILs4GuPE4B5O/O7pxO8+HoeRvdzGXGPdhv1JBTnD
1/iCHGNzgnM9v2tc4u5I7yX7tp/bGD/O8zF+sufD/hQnZ3SqE+/7F+SV93eA
E5vTndg80InNg5zYnOHE4zTPx1wHuw3vs6L0KsjpTLdh+VC3YW2in49nO8xt
+J1dkN0+UY5w8syHu5++Ud4f9mOO3wfn4OiC7GL82IL84W6u27A8z4mRY5z4
ne/E7+bh+mT+bGt8Pi6+w6ZFOYl/z9AisydGOb0gl5g6pSC72Dyp8J/rBZ6P
dZzsNq47yutlracVZJe5TvUcQ/zcnF3O7Rm+D5bPKuhs4Pecguxi9lwn7+Y8
J2bPd2L2AidmL3Ri9mzPx1wXuQ2zlxR0BrB8sduoX+o2LJ/pdbGmy9yGxysK
Mo3lK53s+eXup29hQb6xfLWTM7HIieUbCzKKzWvchutrnbi+zonH650Yv8nj
sHyD25jrZrfh+u6C/OHr1oJ8Y/k2J37vLMg0fp/xXrLnd7mN8bd4Psbf4/mw
fK8Ty/c5Ocf3F2QXCw848fugE7MPOTH7sBOzjzgxu9jzMdejbsNdx7B6dnxH
bxGWt4rPW7boTGwfbT2j7bTwfEfUD/GzncGfh4l8IspTBRnH8tNOnvnJgq6h
71m/A8w+58Ty807OxwtO/L7oxMtLTiy/7MTgK05cv+rE9WtOXL/uxPUbTly/
6cT1W04sv1+QS9y9U5BjXL/rxPJ7Tq77wNfi9+eC3hH7/6HbsPxdQYbY848L
+rmI5U+cWP7UieXPnPj93InfL5z4/dKJ36+cmP3ayTn4xonrb52s4xevEY/f
e11Y/sGJ5Z+i3O7n+cjPwbq3KsbP/SilKL96Ds7EmkXdm3v+U5BRbP5ekG9c
/+HE9Z9OPP7lxPi/Hoflv93GXPwlFbThulyULdylRfnG8llh8kz+bAwummWT
tbYpai/ZQ9ZNO+OTouZjfKWo+fBbLSo5u7WiEr+NouxitrmoxGyrohKzSxSV
mG0pKjHbuqjEbL2o+ZhryaLa8Lt0UXYxu1RRbdSXKaoNv4/EWewV5c/4ddSy
RbVhefmiHL8dZYWikmderqh++lYs6h3gt21RifeVikosr1xU4rddUcn+ty8q
8btKUYnfDkUlfjsWlfhdtajE72pFJX47FZX4Xb2oxO8aRSWG1inKJR7XKsoU
ftcuKjlPnYtKrlsvPv9os1vbJkbWL6qNc9knvs96t8hLl6LOAH43tOPfomxU
VGK2a1GJ2Y2LSsxuUlRitltRidNNi0rsdy8qsdyjqMTvZkVl4vvc7bOxaqzr
vPie3Sr29ZxwW4j+XlG2LOozhjco6jl+8R7zXcV3U28/K35bSuENZ1EGFGUR
g/2LMkp9m6J843pbJx77OjG+vcdhdju34X2g2zC7U1H+8DW4KLs4HeR+/O7g
pG9H9zNmbFH7yn7u7Dnw28/3Ya27uA3Luzo5xyOL8oe7oUU5xu8wJ353d+J3
uBO/uxV1BhgzynNgdkxRXnG6T1HfZaxviO/JmNG+luvGee0Y3MPjcL1XUaax
vLeTufZ0P30jvBaeYbznwPsc7wf7MLUoixjctyjfWN7PiYVJTixPdmJ5msdh
dorbmGt/t+H3sXC2dZS/4ztkelGO8XugE78zirKL2VnF/zxeyO97Rdk8Ph/g
+Rh/UbOuOSTKob6WnxVvRjk/ygVRjvLzYerwos4qfmc7+0Q5wonTI528l6M9
DiNznbie58T78UVZxNqCorzi8Rj343pilHX9Tue7jesO83pZ03FF2WWuYz0H
9RM8N/ZPdOL3JCdmzyzKH+5OKcoujk51YvA0J35Pd+L3LI/DyBluY66z3Yb9
i4pyhq9zi3KMzfOcY/yucYm7PrHPl8TeHMzeuY3x53g+xl/s+bB/iZMzeqkT
71dEmeD3d6UTm1c5sbnQic2rndhc5MTjZZ4P+9e4De/XFWUXp9e6jfr1bsPa
+X4+nu0Gt+H3pqLsHhTlZid+b3Q/fSd7f9iP4+P7dnqUi/k1bVFmMX5fUf5w
d6fbsHyXEyN3O/F7jxO/iz2Oc3y/E+8POPH7WFEuMfVwUXax+aD7cX2v52Md
D7mN6w5o0Tpvj/JoUXaZ6xHPMd/Pzdnl3D7u+2D5yaLOBn6fLsouZp9x8m6e
dWL2OSdmn3di9gUnZp/yfMz1otswy88ezgCWX3Ib9VfchuUnvC7W9Krb8Ph6
Uaax/IaTPX/N/fS9VZRvLL/t5Ey848Tyx0UZxea7bsP1e05cv+/E44dRLi/K
+Cceh+WP3MZcn7oN198U5Q9fnxflG8tfOPH7VVGm8ZuWtN/s1dduY/xnno/x
33o+LPeNvd62RZZXi7wwfm2wTZzjn6J+mw387MTvL07M/urE7G9OzP7uxOyV
zZrnxyh/uA13fxV1BrD8p9uo/+02XH/p5+PZ/nEbxvkL5HCM2aSk5Jn/dT99
WUnvAL95ScmZKJSUmC2WlBgplZT4LZeUuKuUlFiulpRYrpWUWK6XlFhulJRY
bi4psdyqpMTvEiUlZpcuyRweW5dkGr9LlpSYXaqk5LplSroWs2uUtPfs87Il
tfEzcNWS9hsvy5fkGL8rlJT4bVNSYnbFkhKzbUtKzK4cnz8oymy7khKn7UtK
7K9SUmK5Q0mJ344lJetYs6Q1Ynm1ktaF304lJfu8eknJ8yxX0nOw7unxuVuU
TaOsVdIc+B1R0r255wYlucTjE2G3b5R/49cbVzfL3TrRv25Jn3G9XkmJ6y4l
jcPv+iW1MdeGJbVhuXtJtnDXtSTHmN24pMQya/zbTrcvaS+X9Lr/sc2NSpqP
8T1Kmg+/mzk5u5s78duzJLuY7eXE7JZOzG7lxOzWTsz2dmJ2C8/HXH3cht9t
S7KL2W3cRr2v2/C7SUnPx7Nt5zYs9y/JMf8cMMDJM/dzP30D/Q7wO8iJ9x2c
WB7sxO+OTvZ/Jyd+d3bidxcnfnd14neIE79Do6xUkt9hTvzu7sTvcCeGxpTk
Eo8jbQq/o5ycp9FOrtvD12KWXz/yz0P8c86ebuNcTi1pv/Gyd0lnAL/9wuY1
/P2K8fmE+L6dEWURf762RU7HR5lQ+s/sRCdm93XidD8n9ic5sTzZid8pTtax
MO5xFf9NRKxzmteF3/2d7PMBTizv5edg3QeW5JhzcJATvzOc+D28JIsYPKwk
o9QPdj+uZzrxeIgT47M9DrOz3Ib3I9yG2bkl+cPXUSXZxemR7sfvHCd9R7uf
Med6X9nPeZ4Dv4f6Pqz1GLdheb6Tc3xySf5wd1xJjvF7vBO/Jzjxe6ITv8eW
dAYYc4rnwOzpUXYryek5JX2Xsb4FvidjTvW1uD7Pa8fgGR6H67NKMo3ls53M
dab76TvJa+EZzvcceL/d+8E+XB5lXEn2LizJN5YvcmKhf/js1yLLnSIviV8n
9A/LV5T+M3tDs+a5LMqVbsPvdSWdB9wtLMkxfq924veakuxi9oaSXOLxWrcx
/irPx/jrPR/X3ehr+VnxUElW2Oc7/HyYurkkx/i9xYnfW504vc3Je7nT4zBy
lxPXdzvx/kBJFrF2X0le8XiP+3F9gd837/Ret3HdTV4va7q/JLvMtdhzUH/Q
c/M8D/uZcNqqHL9+iHwpytMlmWOfnyrJIvVHS3KMqceceHzcieVnPA7jT7gN
18+6DbMvl+QJa9wTuxh8zv04fSHKae57yf2M+SzKIu/tK54Dp0/6Pqz1Vbdx
Dl5zcl4/DVsDo9zEnwkoyS7v8i0nTt924nRgmNyef86Kz2+UdGYYc0uzPL4X
5YOSrGP205L8sb7XfU/GvF/S9Vz3udeOwQ89Dtcfl2QRy584mesj99P3hcdh
/0snZrOy9oY9+b4kixj8yv3Y/9qJ62+cePnWieUfPA6zPzo50z85sf9HSeaw
+WtJjvH7s/sx/p3nYx2/uI3r/irJIjZ/L8k0c/3mOe7xu+Pscm7/9H0Y80hJ
TvGXl/WsuPu3JNOcUf5SaBLXSVnJuLSs5B0VyhqHzWJZiR3+7AmJ9+ay/GGz
WpZp/PJnU+jnfPzt5+C8Vspq47p/3MaaGtH+fElz1cqaA+P8GQH+zBZ/lmWJ
snxzJlqXZRq/y5XlEo9LltWG5aXKSnwtXVZic5myEte3hc9bo7wTn5ctq425
ngr7g6Ik0bdKWeaw1rYsyzhdqazEdbuyjGJwo7L2iX1rX1Yb429v1tgVo61D
WfNxDjqWlZzXVctK7HcqyzF+Vy8rcbpGWYnTNctKnK5VVuJ07bISX6uVNR9z
dS6rDfvrluUYv+uU1UZ9vbLasLxyWc/Hs61fVht+u5TlFdcblpU88wZl9dPX
tax3wDnYuKzE6SZlJca7lZUY2bSsxEX3shKzPcpKzG5WVmJ2cydmt3Byvns6
sd/LieUtnVjeyonlvlHqZRns7T9XhdM+Tlxv48Tmdr4W+8PL2nv2uZ/b+Pmw
W1n7jJcBZdltibK9E78DnZgd5MTsDk7MDnZidkcnTndyYn9wOL2TPzcTn0/k
946i3BH1mS1aw5AoI7xGLA/1uvA7zMk+7+7kefr7OVj36jHP5fHrje3jPiM9
B36HRNtO0XYPf263LJd4HF2WaSyPcWJwDyeu93Tieh+Pw+9ebmOusW7D8qSy
bOFufFmOMTvBieV9y7KL0yO8l+zhfm5j/DjPx/jJng+/U5yc3alO/O5fll3M
HuDE7HQnZg90YvYgJ2ZnODE7zfMx18Fuw+8hZdnF7Ey3UZ/lNvxO9PPxbIe6
DcuHl+WYPw8428kzH+Z++o70O8DvUVG2Lcv70U4sz3Xid56T/T/Gid/5Tvwu
cOL3WCd+j3Pi93gnfk9w4ndwWNqhRX7XiFwYhnYMQ6eXdWaweR9/B1fkKVFO
Leszhk9zct0Zvha/nCd+JvDz4Ey3Yfmysgyx52eXdVY5B+c4sXyuc1SU85z4
Pd+J3wuc+L3Qid+LnJi92Mk5uMSJ60udYz0354azcbnXheUrnFi+0smen+Xn
YN1XuQ3jC524vtrJ+bipLJd4vLEsr9SvKcs6xq91Yvw6JzZv9jj8Xu827N/i
NizfWZZLDN5ellf83up+XN/mpO8O9zPm2f9vP+/yHDi9wfdhrXe7Ddf3OHH9
SFkWMXh/lDllWX7AieUHnVh+yInl+8r6LuAcPOo58Pt4WXYx+0Cz1vZMlHt9
T8Y85mu57jmvHYNPeBzG74+xi/m71xkfjneOkkX9Sfdj/3mPw/gLTvx+4f1g
H14ryyIGX3Q/ll9yYuFlJ5ZfcWL5dY/D7BtOzL7pxOz7ZZ0H3L1TllecvuV+
LL/q+VjH227jug/LMorN98oyzVzveg7qD/t9s08f+D6M2bISP3OjFKN86WfF
1ydlOcbvp85FUT5zYvZzJ+/oK4/Dy9dOjH/jxP5PZbnE3fdl2cXmt+7H+Ed+
Ds7Td27juo/dxpp+LMsxc/3gOagPib19NPa2FM/ys+/Dmfi1LNP4/bcsixj8
vSzHmPrDice/oiwuy/LfTizzP2R5yO/yH7cxV1JRG+fgwbj/05GVaMsqMo3T
vKLENe8aoxhcsaJ9Yt92jfU/FOOfis9pRfMx/pIW2a9GW62iz5zXekWJ/eaK
HOO3VUWJ0yUqSpy2VJQ4bV1R4nTJihJfjYrmY66lKmrD/jIVOcbv0hW1UV+2
ojYs44jn49mWq6gNvytU5BXXbSpKnnn5ivrp+837w360reh9cCZWrsgrxlet
yB/u2lXUhpf2FSVGVqko8duhosTvahWN40x3qijxvrrd43edilxiaq2K7GJz
jYr6cd2xovlYx5oVtXHdShWtl7V2rsguc61d0RzUf7FHLK5b0X2wvH5FZwOz
XSq6DrMbVpS8m40qSsx2rSgxu0l8/tNmu1WUmN3AZ4C5Nq2oDbM9KjoDWO5e
URv1zSpqw/J6Fa2LNW3uNjz2tGks93Ky51u4nz7+/Dj/DQT/THhSuD0symNh
emH07RtlvygDKnKJx/4VeaW+TeU/49s6Md7Xic3tPQ6/27kN+wPdhuWdKnKJ
wcEVecXvIPfjegcnfTu6nzFjK9p79m1nz4HTfr4Pa93Fbbje1YnrkRX5w93Q
ihzjYpgTy7s78Tvcid/dKvouYMwoz4G1MRW5x+8+FZljfUN8T8aM9rVcN85r
x+AeHof3vSqyjuW9ncy1p/vpG+9xnIMJTpzO8d6wJ1MqconHie5fz3tLru89
JjE4yYnrqR6H3/2jbFyR3wOc+J1ZkTlMHVSRUcxOdz+WJ3s+1nGg27huVkVG
sXlwRaaZa4bnoD7C75t9OsT3YcyJFTnAzlF+VtwNjV//Dovv5Sf4Xo7SO9pm
Rzmios99ohzp5B0d7XHYnOvEzjwn3o+vyB82F1RkGr/HuJ/zsTO/Bm/Rz+f5
buO6NaPt+ljT0FjTcRWZZq5jPQf1Q1t0jljTCb4Pz8bPbX4dyq81z6rIIgbP
rMgo9VMq8o3rU51YO82J07M9jnd5utvwfo7bOAf83Yj4w9f5FRnF8rnux/h5
TvoucD9jbvHes28XeQ78nuH7sNaL3YblS5ycj6sr8oe7yys6D7i+wonrK534
vcqJ38sqOv+MWeQ5sHZtRe7xe3NF5ljfpb4nY67xtVx3q9eOweujTKvI+40V
WcfyTU7musH99N3mcZyD2504fc77wT7cW5E/3N3hfuw/w689ohzK9eFj9yiF
qD/bLLN3R7nP4zjTi514v9+J30crcomphyqyi80H3I/reyr/nYMH3cZ1j1fk
EuOPVGSXuR72HNRPquic8f36mO/DmJPdhr/n/az4eqqi88m4p51c+4wTs886
eUcveBxeXnRi/CUn9t+oyCXuXq3ILjZfdj/Gn/BzcIZecRvXPek21vR6RY6Z
6zXPQf3//jw9f66YvwOIv++Kv5vtnYrsYvbjivzxs/GjilxSf9f9+HrPic33
nbj+xOPw/oHbMP6p2/D7dUW2cPdllOsq8viZ+zH7uRPjX7mfMWlVe8YefuM5
MPuh78Nav3UbZ+I7J2f394qsYeTHikxj+ScnZkeEzefD5Z3x+bnIuyJ/jfJD
ReeHMX94Drz/VZFdzCZVuWR93/uejPnT13JdVtXasfy3x2H834ocY5b/GSLJ
XP+4n77LW7T+36LkVc2B07ZV7Qf7UKvKH+6KVbnHS6mqxEi5qsRvparEb72q
cZzpalVtzNWoqg37S1XlElOtqjKN5SWqSiy3rsorNpepyiKul6yqjfHNVc3H
+KWrmo/rlq3qWv4u2zWrssI+r1TV82Fq+fj8VuTbUVaoKvHbpqrE6YpVJe9l
5arGYaRdVYnr9lUl3levyiLWOlblFY+rVNWP60JV75t32qGqNq5brqr1sqZO
8fmLiuZatao5sLxGVXPzPGtV9Uw4PTA+bxqle5TZLdrbDePzyfH5iCgvh8HO
VTnG1DpVJR7XrSqxvFFVYzG+XlVtuO5aVRtmucc/ttatKrsY3LiqfpxuUlXS
x7r+tsGBVe0re9ijqjlwOjLOy0uxxp+jvllVbZyDzZ2c1z5VOcNUr6rs8i63
dOJ0KydOt3bitGdVZ4Yx23gOjPetyis2t4/S4vVt4XsyZltfy3WDvHb8budx
GOxflWP8DnAyVz/307eDx+F0sBPXE6raD/ZhSFX+cLej+7G8kxMjOzvxu4sT
v7t5HOd4qBPvw5z4HV2VS0yNqMouNnd3P6539XysY7jbuG7PqlxifFRVdplr
pOfo4Gfm7HJu94jPq3nM2lU5xd+Q8Lhri3ztU9X5xPJYJ9eOc2J2vJN3tFaM
uzV+fTg6vLzK/wcp2iZFmVzVZ8xPr8ol7qZVZRebU9yP8b38HJynqW7jur3d
xpoOqMoxc+3vOahvUQ8XUfIoB1V1HrB8cFV2MXt4VRYxONNtmDrEicdZTiwf
6sTybI/rHeUwtzHXEW7jHBxTlTmszanKNE6PcuJ6blVGMXiu94l9m+c2xh/p
+Rg/3/NxDhY4Oa/HOrF/fFWO8XuCE6cnOnF6khOnJztxeooTX8d5PuY61W3Y
P70qx/g9zW3Uz3Ablo/28/FsZ7oNv2dX5RXX5zh55rPcT995fgecgwuijKnK
6YVOjF/kxMjFTlxc4sTspU7MXubE7OVOzF7h5HwPC7dDo0yMz2vz78fC8B5h
+Nsoe0Z5nT/n0CzLC6NcV5Vd3C2qyjd+r3Fi9lon113vazH7gN8R+3+D2zgT
91ZliD2/qaqfGfi92Tkjyi1OLN/qxO9tTvze7sTvHU783unE7F1OzsHdTlzf
42QdD3qNeLzP68LyYieW73fyPDf6OVg354DvdX4ePOQ5OBO/+t7c88mqjGLz
kap84/pRJ64fc+LxcSfGn/I4LD/hNuZ62m24fqkqf/h6tirfWH7Oid8XqjKN
38+8l+zhi25j/DOej/Evez4sv+LE8qtOzvEbUc6vyu+bTvy+5cTv2078vuPE
77tO/L7m+TgT77kNyx9U5Ri/77uN+tvh8y3+P0nx+Xk/H8/2QvjdK0op+j6p
yu/VUT518szvNKv94yif+x3g9wsn3r90YvkrJ36/drL/3zjx+60Tv9858fu9
E78/OPH7oxO/Pznx+7MTv784MfRnVS7x+FtVpvD7u5Pz9IeT6/7ytZjlDPEz
gZ8Hf7uNc1mtab/x8m9VZwC//E/LyYejJDUlZtOaErNZTYnZvKbEbKGmxGmx
psR+qabEcrmmxG+lpnzG9+PccDZqNa0Lv/Wakn1u1JRY/sfP8aD39v9+9jbX
1I/rJWo6G1heoSZ/uFu+JpfUl6vJK/XWNVnH+JI1JTbb1DQOm0vH59ersr9K
TY6wtlFNe8OedK0p2ZN9wuN7Ye7D+LxiTXNguW1NifF3o/+jyHbRdlWL5mwf
n5ep6T6crWVrStbaoaZ74nq1mhzjd+2aLGKwU01tWF69psTyGjUlljvXdC1O
163JKDY3rOn7i+fpUpNF6h1ruiffH6vWlNx745qeFafr1DQfc61fk29cb1BT
Mtd6Nd2HvjVrWgvnaZOa5sDvwJr2g33YoiZ/uNu8JpfUu9V0La43rSlx0b2m
xHVPj8Npj5raMN7LbZjtU5NFzsTWNXnF6Zbux/JWTvp6u58xfWsyis1tPAd+
N6vpPqx1W7dx3Xa+Fqc7eo/Z28E12aLeP0qrmvwOcLZE2d7Je9nJ4/C7sxPX
T4afH8PcuChjo3wYtlaK9iuijI8yIcqQmkzjcYcoS/neu3gOzspu7sdpP6+X
Ne3qfsavVdO+Ye6UuO9RUT6K+81pkd/hUfauyRz7vFdNFqmPqskxpkY7MTXG
iet9PI777OE2XI91G973rcnT+n42/GF5nPs7+7k7u2+i+xkz2/vNfu7nOXC6
p+/DWie5jXMw2cn5OKgmZ5iaVtOZ5xzs78TyAU6cTnfidGpN3xeMmeE58DKz
Jt94P7wmc6xviu/JmIN9LdeNrOk7iPd4iMfh/dCafOP3MCdzzXI/fUf4ubE/
pya7OD3Pe8OeLKjJHGdxfk0WqR/la7F/tBPXc514OS7KoJp8He/E+Kk1GcLg
KTWZoz6iJjM8z0k1+cb1PM/HmTjBc3BuTnY/44/0c/AMJ7qf8VfWZII9P8Zz
8Aydw+fi+HXv+Dgf5/tZcXdWlN1rcnu2k3Wd4+R9n+vkHX3arOvPjHKB58Dp
RTUZwvvlNVnE4Ki454S45yf8ne2+lutGxHqGt+jMXexxnJtLazoDeL/MyVyX
uJ++q/x8nIOFTix/E/d4MbI5/tnwhppc4vH6mrxSv9rXYnyRE+PXOHF3o8fh
91q34fcmtx0Y5faa7GLw1ppM4/Rm93NWbnHSd5v7GfO094w9v8Nz4PQ634e1
3uk2XN/lxPWDNfnD3b01nWdc3+fExWInxu934veems4YYx7yHFh7xFbw/lRN
5ljf3b4nYx72tVz3jNeOx0c9jnPzRE1nAPtPOpnr8SjHuu9Zj+McPOfkfHzq
vWFPXq7JJR5Hh5FRUU6Lz+tEPhieJvLfSEbZN8rnsedfNssje/+Kx+H3VSd+
X3Ny1t+pyRym3qzJMTZfdz/n46Wa5mQdb7iN696rySg2367JPXO95TmoP+D3
zT696/sw5kc7wM5nflbcfVjTzyrO7kdOjH/sxPgnTt7R5x6HzS+c2PnSiffv
a/KHzW9qMo3fr9zP+Xjfz8F5/dptXPeB21jTdzWZZq5vPQd1fi7y601+rfmD
78Oz8bOaX3vya8q/arKIwT9rMkr9l5p84/pXJ9Z+c+L0b4/jXf7uNrz/4zbO
Ab8H9FhNvpK6jGL5X/djvKmupC+tqx+zy9W1Z+xhoa458PuH78Nai3W1YblU
V3I+WtVlDSPVus4Drmt1Ja6/DpNfRXme68LpflEqUa/Udf4Zs0Rdc+C9dV12
MbtsXS5ZX7muezKmpa5ruW75utaO5SXrGofxpetyjNll6krmWqqufvpWqGsc
NtvUlbjuUtd+sA/t6/KHuxXr6sdL27oSIyvVlfhdua7E7yp1jeNMd6gr8d6x
rsTvmnW5xFSnuuxic9W6+nHdrq75WMdqdbVx3dp1ucT4GnXZZa7V65qD+k81
nTO+X9eq6z6M+dlt+NuwrmfF17p1nU/GrVdXcu36dSVmN6greUcb1TUOL13r
SoxvXFdif7O6XOJu07rsYnOTuvox3rmu5+AMdaurjevWqauNNfWoyzFzda9r
Dur8OxP+HTb/zq+nf08Uy1vWZRezi1r083A73kH4a0T2jbKV+/G1tRObvZ24
7lfXWLz3cRvG+7sNvzvUZQt3A+tyjMcB7sfs9k76BrmfMXvVtWfs4WDPgdnJ
cVa+i7XW4/OObuNM7OTk7O5elzmM7FqXaSwPcWJ2Nydmhzoxu0td54cxwz0H
3kfWZReze9blkvXt7HsyZoSv5bq9vXYsj/I4jI+pyzFm93Ay12j30zfMa+EZ
9vEcOJ3t/WAf9qvLH+7G1eUeL+OdGJngxO9EJ34neRxnel+3Mddkt2H/wLpc
YmpqXaaxPM2J5QPq8orNGXVZxPV0tzF+iudj/EGej+tmRtm8rt+zP74uK+zz
EX4+TM2qy26vKIc68XuYE6eHO3kvU/h/iYSNbeLzqWF7XpSf+HuaW2T86CjH
1mURa8fU5RWPc+u6Btdj/b55p/PcxnWHeL2saUFddplrvuegfpzn5nlO8DPh
9I0o50U5P8oZdZljn0+vyyL1k+pyjKmTnXg8xYnlMz0O46e6DddnuW2474En
rJ1bl10Mnu1+nJ7jHOl1jfKYG72v7OEFngOnp/k+rPVCt3EOLnJyXq+qyxmm
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
jfp9vvYP71VLrHGJVEb/9ly3eY3cD7//uI8z8a/rmCin+q7BbhaZpjKap6pj
tJCqjlG+k6jjnmuTVL4qqebCaC2ymsoQ62qV6oxxLb/hiWn6GYO71qmeAdP1
VOMx2hzZSGWWOahjmjauw+KSqcZjc6lUdd772pFrRdmVv2s2lTd8LJ3qOkws
k6qOkWVT1fG6XKr6e2F7CH9eO2wPjdwlSptUXttGrpjKUIfIVVJZbBe5cirL
K6W6DvesgXkxTT99eFw1smMqs8zRPpVdkrn43vw60XnDLNdyvxvt7mt76pzq
mblu9chOqfrWSFXn2jVT1THKu6GOj3VSjcfLuqnqGF8vVR1nnI+NUlnsErlB
KtPrp7qOM7NaqufBNP30cZ5YC334ZY4NUzkmmatzFj+XoozLZLRbqrPXJt7/
ClG+acjdllF62R/Z0556ROlui5u5js3NXcf3Vh6P6S3ch9et3YepvlG2tb9t
ovSx0d6+ruq23va3ra9jr4ZH2d1Gt/NcudfI/fDbz32cif6u7x6mdrQN7A6M
sr2NDnIdozu4jtHBrrf2tQMwGe9pOH+GuyGju0bZxYZY17BUZ2yA7z2S36OO
snMqdyP8DJge4vEYHRplt1Rmh7ne1m1cxznZ0WvC5UjPxXufEeWgVM72jrKX
fYyOMsomxriOkT1cx+ueruN0H49fw3PQh/Wx7sPQpCj7pbI7Psq4VHYnuI7F
faNMTGVwSpTJqZzu577OHse8G7qfebE/1WNOifJslGdSGTrYz4nX/aNMS+X3
ANdxeWCU6alcHuQ6JmZ6PEYOcR3Xs1zH1pFRjkjl7/Aoh6VyfKiv6+h3yXvf
yv30bey1sO4+nmN2KruzPRd+5/geeD3KdYwe7TrOjotybCo386LMTeXoGNcx
ON91vC5wfXSzxmJjkOeg74OwOib6vm7I0+lRTktl8aQoJ6aye7LrODvV7559
uirKlakMnua+PWK+UVFOSOX0DM+L/TNdx/dZrvO+zolytt/fua5j8TzXsXi+
61i8wHX8Xej6CM/BvNi8yH24vCTKxansXuw+bF3qvl39TDwn7i5zH2aviHJ5
Kq9Xuj7ebVzXz/vAPuF3od8LZhdFuTqVs5ui3JjK7jXuw8S1rmPkOtfxer3r
OL3Z4/F9i+t4vdV1DN0d5a5UFu+Icnsqx7f5uum+/w2pTN/uvkleI+s+zHPc
mcrunZ5rPT8/7wOz9/h+eL0vyr2pjN4fZbHfxQOu824edB2jD7mO0Yddx+gj
rs/xHMyL0Ufdt1lL7Cu/3x6fe7SoHcf7RNue/N59qrN1r9eHvyejPJHK7tNR
nvIeP+P6iW7jOuw+l+o7BcvPu47dF1zH4mtRXk3l+EX34fgl1/H3sut4fMV1
7L7u8ed4Dvpw/Ib78PR+lPdS2X0rypupvL7tOl7fjfKO9+bnKD+l8vqe+y7w
OObF6QeeF7sfuo7lj1xn7z+J8rEtfOo6Rj9zHaOfu47RL1zH6JeuX+U5mBdn
X0f5KpXdb6N8k8rgN+7D8Xfuu9jPxHNi+nv3YfTHKD+kMvuT67e6jetw+ovf
BX5/dR2jv7mOid9dx8gfruPsT9dx95fr2P3bdez+4zp2/3Udu/yhAOrYTTLV
8Zpmqo9t1me8Yq0cn0tR1mkV5yn68kxGi5GFTBbpp47RSqYx7GubyBUy+a1m
6mOfl41cJpPXemQtk9dGpjpGmzPVMdoqUx2jS2SqY7QlUx2XrTPVcbpkpjp2
l8pUx+vSmeo44/7UMbhiprXidblM62Nfl89UZ595DuqcN9bL86ztX3uOzeS1
baa5uMcOUQZl8tcxskMmuytHrpTJXLtMdQy2z1TH8SqZ6nhdNdN4TDMHfdhd
LVMfptbJ9GthjK4RuXoms2tmquOSta7lPdsySq9MFjv7OXDPuE6ZvK6baV78
rpepjtf1M9Ux2iVyg0xGN8xUx+hGmeoY7ZqpjtGNM9UxukmmOu6Zg3nx2i1T
H0b5ux75Ox+xS3az1x6Z+jiHPBPPuW+z2jE8OT5PjLJFJq88a0/ef/z6Yb9o
/7Yhr1v5XeB3a9ex29t1vPZxnf3exnX2f1vX8drXdbxu5zpe+7mO1/6u43WA
63jd3nW8DnR9SdsZaH87R9kpk9fBtoXfHV1f1v3UMbqLx/DP6pum+nUlfnd1
H/u8V5Q9M3ndLcqQTH6Huo7RYa5jdHfXMTrcdYyOcB2XI13H6SjXsTvadbyO
cb2T779Hpu/3lXx/vO7t9bGv+7jOPo91vY3Xy/NgdEKmfw7E6ETXn8hjXwux
zwU52z/KtEz+yKmZXJJTMpne1+OxuJ/rWDzA43E6yX3YmhnlYO/B8VGO8x6c
4PrUZv29pVjF7nTPheUDXb+fP1sY130fJvePnBJlRqazNNn329BrpI7jQ3xv
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
JWENd0JJ8+b+zg8sjg8aV9I4u9Ttwvi4ynkd7nTI7eu6UO9uToccmL3GbQc+
JgddS/sHhv4s6duxx4V7c9BNJWEQ98aSMDTFacDUdebB7vXmS7GGtoq8WpaF
4xscB3ZvC7q1JGzdFXRnSdi6I2hqSVi83XInOwz+FMve4f57LGhuUOuy8gGv
vV1Hyjs26nB2xLUJ6hP+c8JNl4WJ2UGzShoD9wVNLwnTM8yD0Znmwej95gdY
9l5j4gHnBcYfCnqwJBxRrzklzS/ITisJRw86DRic52cA6w87PRh9NOiRkrA4
x/x5DkMO7D/u9PT9E+bpg7eDFpeEs6eDFhojT1oO7D5lHkzMNw9GFpgHp884
PWP6WfPge5F5cPRy0EslYfeFoOdLGgfPWW64yyffMY4nDmy+GvRKSVgkjxdL
wu6Lzmuw+4d2H29Zytsh5rdPwv2jhXD2jp8ZHL8R9HpJuH7TPJh+y/xktw08
WHzX6cHKEvNg5z3zqwVWPqJNmFqj3B3qMf54pawsGcYDY/Q1P08SGPsg3I1b
aBy/7rh1I+1S2iPCV4m0H9IeLaRnMMYYW2tG+Mfh/t1C68S1fo4HQqc9D3tu
+I/iP6rhHhR66Z7h/yz8J7WMtSPiPw//7eHfL8K/CP8t4d/M6fgX+sER/iXP
FuEnNulf6K34P2TI/FjSf1SnRVnnl/VP6s3D/a6k/13383+q+c/6Gf5nKf8J
nuN3kXl3foj/0cd/MdGdvwr/Cvz7PfL5uaT/ql3if1jxX4PJ/u4v36m+lzPu
sv6XsXO4v5f0D5fx/uY6/xR4ENuJ56YR/rcG/xmajl2lrLxu8/cC+QbmAcw9
/l7KDuH/taR/ZnVEZyvpG8UzIu0VZT3DfeEfVlb6mf4WC98ReijChzuvvVlf
S/rGYNfwt/Z73M/6PRX2ExtF0mr4Nwy3T8hkfIdqZuQzpiy5I8NN+X2Wxb4n
xb3B+0NmXFn8F7blYweYFeETy+IfCf+E8OfCvxUm3HC3Dnc23/0uS7fs53hs
sA9zJut6/G7dk/3R+jxi+NcL95+IL5SV15n4rdOuzVlquNsEZtonkitF3Lrh
zoyxcEpLYb3WpOd+sKxxcnj4NwhKmlROsSz/ES3ULpUmxTNW6k3Kg/HQ4PsM
LUTN4b+ScRdpV6TNwn9V0PKcKbdQ3HJNCqPMJpfbJp5334bkCCOOMUuaFcI/
nucuy9+9hXT64z0OiaOsCdQ9ZFYK/1HUK/yrh79X+K8JWi3814ZbL8vfM/wT
g1YO/yT6P8JXCf/RLSRH2sktFEf41eF+Eu25V9AWdc0JmzGOIvyZFvI/y/NF
+Jrh7017hH+N8B/bQnnhn9JChMx1LZTfCiG3VvC1cFcN95gWKg8/dSd+7fD3
aaF5aZ2gES00t23gtiKMOOarh8vyI9MtaL3wH9pCc+KG4V/QQrRR+Be20Ny2
aZP68+mgTZr0TNSPcq9vofSU0dVhmzs8G323f+O/vDZuUh4rl5XPqPCvVFb4
FeG/PGiL8A9roTWhfZPWBagdeG+h+XQb5oUWmoO39nNt2aS0TzgP+MfBZiI/
4atGWduG/8kWSo//33DbNmkdohxc+D9baF7kn87MjchtzzzSUuVt1aT6sp5s
16T2m+e8HmuhsndsUhjrDmmfAo9ltfnI8P8b/i515dUi6rl6WWkYh7sx7lvq
uTswN7TUerJLk9qA9WVX5lyeo6X827XU+N69SWOc8d6R+aSl0u9Fu4RbT7Te
nNxS//LmGb9prbA9HF5N1Ba0A/Ugn/4tFY8c6xRl7Nyk8rd03BbUIdG/vGe2
Fv7WbxLWmGP29vN9ENQl/B+G25xonbu1pfLtHP4TvfZ1djjuvvazNu7fpPWR
NXNf12efJoX3Df+B4R4U9H5LrZ3wN3ttPSD8t7VU2fiXttR6eqDlx0R9jgGT
rbT2ks8trsN+Tf/lRxrW3+US+Ul7SKQ5grHQSuvmoU2yO+F2s591u5vTEo4c
a+syfklL8d3Dv7zdIymvlXQF6nZguCsFdQ3/yq2kS3S3zO1ui6kttW4f6fxX
SCSHzKigo5mjnD/hy/Lu6Wd/OuhYxnsr6QunN0lngD+pSfHHN0n/QPfYpaK2
6x388eH2aZIfwr+wlXQX0qZaS585Ofytw9+3SXoJ+aPLnOI8WZv2cZ8Sj9zO
ET6Vu6CuAzoN+bRzPqdYBt2qp5+rleNa8n/swOE6ZY2HhX6GBa2kH/VvUn6n
hjsgaJfwj6uIP6u16nda+HdEd7L/TLun24+udarTtmRNCH6g4wY1KR3/Gh/s
cUfd+7sdTqpo/CC/eqJn3tl6Gmln8G/zRDz++5zP9GV5NykMuzx2IuxGEyoa
j/x7nP8m8Y3Q40PnuYo9nf9dPidk9rZ/nUT63wZtFI9OeQ7tGjKfJ/KjF/IP
af4fzTPwD3WeCf2Qf+/25v+KiXS75finT6Tt7H8+olde4DzGJcrnWOd3gf2U
w3+lN2wjXRM//+ylXue6brhDnA//+qVc/jfLv7bQTdFL+e8q/1p9m/9AJgq/
Pvx3lPWf4GXphrrO6LOXOe2kiv7Nyn8y+Q8mz4KOijvcz9W+omegzBOcP/6J
4W/t56VOw1zWqSH/ZYRf7jqRD//WRBa99nKXwT/2+L8e/3Th3y78Q4O9PP42
4R8Q+XwdacbAJ9Kz8R/gtAfaHWU/+vUo5w0/1rKTEvlHppQf//m6IqV/f6Gv
o6ujP6E7oROdlCiceJ6D/zMuz/+eGqoH/7+7syzdfpzT808m/se0e0XlXfX/
+oZ/E15TUT78E+/aRPKt4xlPTrSv4P83e1YUh589xCTnzX+d+H8T/ybDxoGf
f+MgR1r2I1s4n13T2ldc73D+aYL/rPBPruhfJ3xTf1kc/zohX9qEcu4q6187
9Mlgy5CW+k5ynemfKe4jvsPLWON7pYv9vPR5KtG+5cbgv030bfxZfPs80Z7n
+7S+/Y+fvQ9l8I+K/5WZyH9/Wt/TJy3fR/+orH0T/8K4rqJvp/NdavY9fIuS
vQ/fluSbk3xDle+68z32jTMqA/5bf9t+qsPZO93hOlAGeVLm3hXVgzqe4jrj
TyfaU90F5hN9C/u4yGf/kL8l0bdcPy5rX8b3tPetSI7vDlctg79/oj3bfaaZ
rv8sP8sKWX3HcJb9Z1U0r93lelMuz3FDRc/LtwmnlbXvm+Hn51uytMeyfPlu
5y0Op98yifacDwb/eVn7Sr6hxDdo+BZSJtyDIv+pib43d3uiNHzz8NwI/zFR
WurHtxepL7L4Dwn/qYn226T9lG8vR/4jy/q+Et8OW5TVPhw/3xCrlLUf6dFC
efPtu64R/gnnyxE3oqy8yJN0fBcPGb5Vxn54nsO3c7ljsppTbjCen+A7jq4/
afimGXlMS/T9nd1yeuYFboNsoj0z33q6K5HLt6IW+VtRPMfdieIWBn9+5F+v
yI/LO3q78z5xov32eeE/o6LxwLiYHnmPDnqmSW0wz23StaI68V0SiLT/O/dz
nfnO0wDnSTz/s+Rfa/x7bcNY9yc0x3zQQueEfI/iIX8DgPf/f86Jx893ANpY
hvx5n5BvVvB+4cP28y2Br8qyA/CtgFwiW8CLzov3t8n7sKjz/YnefZ3BOAh6
rUlhyGyRjz7k/6GRdizrZ/ibK5LhHQnejVmVO3fg2fmQB+Xw7YbP+U5ypLuy
rHS8D7tlXjYI3u/i3a4zEtkmeKdxRlk2hLfME44s7yfyriLv0nZ3WcR/6HyW
5mXLeNfyS/3eDvGkodx+ln3X8t+VZQPhnR3eL+MdNN6FzCeyp/Ae0COJ3GXv
CCHD+zFTXR/SPZwoDe8OcdeHO2d7ctYd9ZwZ+YwPmpvo3ZLDuSOaKN+Pgh8a
MitW5O9RkRx32QnjbvkR3BEL/+MO56454dwLxl7DvUzuZA5OZMfhPsf9Zdlt
Prfcl06HLPc2i0XdLSacO5s9nT9puSf3lWWylqec4xkXic68fy7LRsQ9Ouw+
3P/kPl0hkT2Iu3DzE7nczyu6Tcj7qURyP7iNfnSbPZ3IfxHnvRXdCbk4/MMq
4n8K/kvO3CP/SWVhbqkxuCBReT/5eagPz7e668zdlN4VlYGfuybkz/n82Yls
VTwXdg5sH9hA4AnHfrWrZf70mf4fzuMv+zlTRY5z2d99Bot/W2yqkd/kcov/
nZcR9pfDScN5LnkUE9nC/nEc52rkMSzCL0tkY+rv8FOxR5dlf2thG9xfrifn
HZyBcMZ3Vll+zj7+TXQmkcUWWNYZxt3UwXVr4zDiONt4ifGb6PzisbJswuxl
KBs56kJexE9zma1c7j+JzkIywTcxLsqyYUP4sWVj7+PZOQvFDog9sJVtdaWy
bHecBZEGuzf2POx62NyoF+3EWQd2NexrR9qWhv0OG9ohda1JPWwnw4997K2y
7GVH2zaGH5vV4rJsWMfYdoUfO9vbZdndetoOhx+73Dtl2el62d6GH1vZu2Xh
51jbmrB/HRf+JWXZ13rbfoYfm9h7Zcn0sa0L+wu2L8bhFx53V6CnJ7JVYUfB
toKN5c2ybFWjbPfCj03vobJsfKNt28M/xjpy4jbBtoS9CZvPI2XZgJ6yDQk/
9qKmGC+liuw+2FHWKMue82hZdcA/G50/6Lcm2YTWKsueM6cs+87Wts3gxx6D
LW0l13leWfZ/9p3oaOhq6JbYXdYrywbC/n7jsuwBc8uyj9xmuwh+bAnYGDYo
y2aDbWPDsmwPV0Z+8wIHm5RlS9ioLPsHZxSblrXXZ0+6ZVl71ZUS7flbe8+7
mWXYK7NnZt/NWQH/fee84PKK9s6DbTPY1GPk/bLy5Lk469iqrPMO9rj4Z3o/
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
t9lPnps7n818F/qIyn97n+72cyeY7w5zh5DvDvO97HF2j7K/h/2Hef/Sw37m
M+Y12uEwp1n2nW1kmLsok7LYZ41zWVf5LvExzp+1oKf9h/p5qRvxhDOn8V2t
Xn7eo52WOl/ocL5Hx97wMLcVe8CD3He93VbIkp5vdZHf7/b/Yfc4+4+3H1nW
r+PtJww/8+T4it6pO8GYwJ3ld99OdNh4+7n7h0sc8+3EcPtWdB8PP++2nVyR
Lo67cRu9p9bXYeyxerv+rTyWW6YVjxzzKu9SnV6Rbsz7Wf0r0v2utp/7eLjE
XW7d8FTL0DbkzxoB3y/8K/IeU0XvNZ1WUT68S9bPZRA2OqUyKXuMdfMBjmdP
cIrrz1zBu0kDK3o/gnkD/fxa15n7afDEP+DnYw5ivhrkNMveMzrDaU+I8Xwm
7ZvRuzODKwq73n7usOESx/qCPn+WZW6s6L2asyv6nzLvdbC+oNMT1i0rmXMq
uiOHns/7MMSjI/L/Zf5Vy/czuXfO2nG+8yL+Fvux55zrfEhbd1nI3B7ubRX9
6+7Oiv6pgJ2BcP6Bh20El/coXrMOiB89EPk7KvoHA/1zrdvwIqdFBn2OeL5t
D085/ENsqMvqbh1vqP33hHt3Rd8Dpb7Um3UT3Y4wvsWIDM+MDeESp2WdHeZw
ZHn2mytqo1XdPoSD/8s9FjirGm7cgskRxifnjyOMT3Ax0s/F/mis2wHMD/fY
4exppLEHTrCPsx5hI7/CmOFZRrsf6ZMx7hf2WVe6/jzLlW5/2m+s2x/8jDKW
2MeNMU64RzrZZZ3u9mc8cG92kp+F+8Dj/LzMDfjP8nu44yv/zQn4ieeOMO0z
0Pu4q4wr9t0T/LzMDfh5BxZ3osMZk5S7xGOcsbos7GrXh/65yn13mnHDu4p9
nQ95s2e8xm0+MehVv3eEno4uit0JnY098zS3wRS3wyD7GcPcfb3O7cYYxc97
fLjXV/4bm/jP9Fi5xZjhDu0N7i/cG+3nnaibKro7epMxlvMYvMe4HeJw/n9+
s/NEhjFNXrxDx/tO/C+W+5+MP/z8Z5LxdKcxQPjtlf/GIH7Gz//e56nojiXy
+Pn/yfV+xjMtd5vzJP4O53mrw8nzYoeTlvdh+D419yQZf/j5du85fvazHXa3
++5uP++yMUidL/bz3+20PPtNbgfOi/mGDmfEiyv6ngtnr+j/2GvQ87GhYavC
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
gcyj3IlhLr003LOrerd5nQifU9Wd+m8ifJuq7pf1jXw2qOrdlouYb6u6j7+E
O5pR7h7Mh8x1Nd2hPS/8u9b1zsgakecjVb0Xci5zUk1tOyT8u9T17gnvyKzv
/NHNf62pv9Gtvq+pX09q1tzNvP12uDsFbRl0X9DOVX1H74PwX1TV+yjMPXtX
Nf88zRpV1Z3eZ1ira7qTPD/8m1d133gh/VjTXd+ezVobWBem0+81vV92P++l
1XTPmXv6YIx54/0IH1zVu/TctWf9ZN0d0dDazl3xoSFzVlXv2O8bcR1rukPB
u/bnVPV+1W4RvktN9yb2QG+q6W7F+SGzaVXvc3F/nDwZ71Nog6ru9D0U/rE1
3dNG79urJt3vUTBZ011u1iXmNea02eCzpnvjxzVrbWZd5n2xzap6P2tIhO9R
053UTuHvUNM9DtaWiVXNXbtHWefXdN67bkPrAWsBut7vNY3PC0L+1are3zgu
/M9W9V7TCeFfVNX7Tuxj2P+wlznZ703xHtfWEb5VVd8e7R1hz1T1ntibvHtU
0/3jXuF/uqr37rYJ+W2rutf/BDpdTfcst2MMVvVuwXLhv7GuM727w/2hou9g
3hv+3yq6x3pK+J+v6j20FZnv6zqjY56+ua5zvLFVjfn/vTMf4bfWdV63avhv
q+su/vaM66reDzgywuZX9R4da93eXu8eCHdP9K3wb4XOWNN8+TD3mdH/Ivy1
cFep6U7zK+FfsaZ74buwbwj+hJD5JNzOdX077yLWjarWkWMibGFV7+Cx3nby
mrsT7VDT/ZkZEbZHXd9w3KhZehs6W48IW1DVO34r84xVrUdD2btUtWZdFv7D
q1pzVwj/DVWtuZeid1e1VrKXZd/LfpZ18gHbO7YNf9uq3plYI/y31/X+wyzW
l6reNVg9wu+s6vx3dFVzK/Mqc9jtVZ0d70i5Nd3t2SH819d0b2f3qtqRNnwE
HaSm781UG7ozwXsa7dnvVnWfpB17o6rW2Q7h71/V/ZDO4b+4prssbRrSgdB/
0DG/qUnP7FBVX9KP3GU9pqa7m9yb7VHTHdnfK5qzmK/mRfgpNX3The92vF7V
tzvuifhfKvr2KO9jzHC/NDd0b2PZ90Qvq+mOSL9IN6umeQbd7eWa9Df0aO4K
oEujRz/hPft6tGdd301ZpyF7CraUDdEHa7orhn7aqab73QexB63pbvdv1mnQ
Zz6qag5i/hlUlV6LTts25K+r6b7WN1U9A++WHNSsvQHr/YCq9kvslT6t61sO
fMeBsT65rvHOXesDa7pvvQn7sJrulu3OmG7WfcAV67K/oM/Qlhc0qz3X8b6d
Pftq6MVV3e3p2pDtALsBtpCzGrKHYJvhXUTsM+zdU3Xt37EDDW7IFrRes2wK
2BOOr8qGgv1kXLP2IexBOqPL1/WeFTab1nXZbQ5BZ67r+3FbR7p/K/o+A7aZ
cxqyz2AbaFOXfeCB8J9U051K9h+P1rQHOSHyub+m97PQtV+oSd9mX3um97Yb
h/xtNdnesHkMacjuwbzer6G5nfXklIbWlGtDdq2qbKCTw792Vfogfdi/oX7E
fjCwIRsCY+vUhsYXevGF1o2x32CbwIbTMeowvq731rAHrFOVXsk6jz7BWr95
hE+tyRa4dfjvrMlG2Jt9QU3v9nLH/2TvU7DxnO99Cro879Yte297Zk3v0LFn
GuR9E2s+djrWfdb5AQ2t9ej+LerSU9mL/1OT3tk+/GfW9X7d2hG2uK73Xboz
h9SkSxfRD2u6074B6dAhwr9rpD2jrvfx9kwURzi2Q+wp2FJ2Zt9a17vESYSv
UdMd7Fr4N6rpTvsU1t66vhuyWU22SLCHrRG7CTaT9cJ9N2Q2C/lNWXsr2n9j
K2pVl71of/ZldX37kntm6EboRZOrGm+MNXS3d+rS39iXPFvT3mQV8F/VvWjm
oe/rmov+qsueCFYPDJkf6rpjht3i75p0fdbSb+taTw+LPO6r6T2aravSKdEn
D460P9V1b2079K+63g/ATsMe9X/vyUT4vTXtnbENcG8M+8AxET6jJt3+37rs
emD74pB5sCb7OHvHC5u1f2SeKNY1V2AbyNdlH2B/hB2EvRD2sHJdNjHKwc6L
jXdYVfo6ujrr5OkNrZWrNMvWiZ3zjZC5pK7vCe1d01zJPImtrk/D9rqQ793Q
t2LeDfnhdX0DaWjIH9DQ/T90tJ4N6Wno0b0a0qWXhPyIur6N9H5V+y72XG0j
zyvrej+22ix7CraUgTXdmV12dxb9ibkUe+HKVdkMd6xKH0IX2jbSjq3rXdx2
Vekr6Cqdq9It0CuoI+vZxVXpyLy7i56MTRQbJXPsJpHPCQ1hJhdya1Z1hxMb
Ents9OR3Iuzyur4L9Xb4h9X17agRkeeqdb0Li659ZEP6diFkDmvovih6d4+G
dG/2EOzT2Ee8FzIj6/pG1OLwX1bXd6rQHY5qSH/AXr5qVftRdORjGtKTsZev
VtW+k/WhW0NrxPpR5+Mbmp+xNWJ/x96IbXWVquyr6M5HN6Q/c7awelV7X3SQ
0xrSQ1jPL65rTee+KHrAmVXpMqxt6DP1ZtmYmNufbMiOgF50MPNlTd8oQMcZ
05Ceg/6FXQAdDHtVj6r278xPYJo5ql2zbGqMF86mRjV0PrVT+B/wGOlC3Ro6
z0JPxO6ArrhmQ/1H36FTsIdBr/izrvMD1kr0O2wr6HjU8aCq6smeALsG+wLO
o0Y2dCbFerVeXWsW+iA2FHRC9EdsH+iQB4b82XV9y2DPSLdHUEv2DjXx+Dkn
WaMqmwT1wn7KXoj9PnZJ9mNXNsuOyR7skkjbpaG7tieFe25N94svqkmfQ5dj
LiE98wl6H3YWdD/0WWxJ6LTMQ9jy/q+l82mpKgjjcBehqCi9M/MOhi0CDWxT
FARBtIkgSSghbhaSixKEoEg3ESHVopXQqk24j4ioT9C2bxDUF/AbSCQWzeMz
qzte77nnzHHO+/s3M1KL8MXfhFneMmM4zNqoc2eKtQ4s2gzxaJ9XZrklPhae
EX4RvHI7yy03kx4E/gOYfKWIy/NJTg+fH6O2h3MYJ7NeDx7JTjJzwmemfyer
fdxtx/0pzvH8lMVacJaMkvq1/79K8AKzOdthxj7PeGu/Dr02fDY0672ibj0W
4h/Yt9yOOxquE+P1SG/DI85XucRW0R/HG98bWgepgRkuX9xLDX02WdVoeO0L
Wb8dL/927nsMtdfx9vPmhJw0V3kp/OhElSMN2u8PhGsj+Ozx/nkynFE2x/nX
zvm3OF/1fTErIie6n+0/fccLWSr6IWvt/anq+ofHaIvq2g/q6KlqLYWfRpWj
VvhVcW83nstr3U/+nOU3cJuprMZD360mdTWaetCOu1BdR7sY+q14rWDXrc51
8c7nun8OR8Ovg6eR0d3s/jM+93z3usG6G90Px59YLHoUeBPwVDgqXvhC98P5
votVD5AaDzaAC3AKnmd4BT7Zeh+rX1r7XZgdw9dWkpztEDxx6Hx5dB65LJns
XHt/Kbv+EN/9avfeh+24O8V9CL9SS8L5w9SVy9XaAi+mlsGN4elwKXjUJe59
cR8WfLWnHa+5luvV63mb9O/w7iZbe624t94w5GFwsN2sV4VP9byISeDRA/6+
4ZpDODvYAC6UkLfB2b6F44OxUZLaEl0ZSc2GXmMs1+p4/pDVEugI8GSmiil7
WQ8O/+03GrA4j/tgNg8j34H3nc5yv4c8O+Fe7yvZbJL1imDOj64lV+Hm2Zzo
WZihkiWNWnunOPceTfyqqovBB7gUGLHF+JxwP761pB+EF/Q9fDZ4Lsg8N6q5
50aY15LVkjmQH5Ad3M3WGurMizAPJgt7ksyVyZQfcc+y+3O8DDNg8t/xrB+B
F5HA6OIeleOtPRuu0eDap8PrhwtPV/kwmpI8DC24ndS9aN6x1j4Xrm3h3pCl
cX+oSaNelwbtM2fDtS2c81fyvIzTn8mxitacCfUmfBkOBP+hH1PFvqAPZrsW
+JjVZuiy/xtVjIM=
          "]], PolygonBox[CompressedData["
1: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
AFcLfjvPSqehK+qMoEez/+XQVcUHrwJfrlgo2JcvpO956Cq00tBL4L8EXUN3
Cv4841goDY6FFBNdyfjqekOsv1Q+GHwMeD/rLwNXYb8/0zect7VG9gG6Fvxl
3OVa8JHwNyW+u1dlr2TL4X+l+805VtWb1ltWzKq3WlI2Ius3O0KxrO6zlMco
9q0dPLdi4J7wS4EbSncVb4BLy6dl3NeT9c+kbWG+CbQj4V8HXp93DJDnN0c7
Dt40xRnwR8LfkLcPyzJHZ/DHecdwVfV2FX+Al9L+TBzTK5ZX3wzoIfC3sf52
8NXgLrQX4T8gnyPbAf4t7xyklmwPeFfeMWQVvZ+CfemdyNeQ7hX8du8HVwcP
LnhuxdRdoWPZO+hf6RvB2hfStwP6IPNVAxeX/wU/T7sEXkg9107wEHDN1HvT
mKXSFVopvvVJxkepY3bF6pvg/5U45lWsqzl7QTelLQZPph3HWpnYtvslWh/5
A9qz8O5QzAHdiPYU9HhaCcV+4JXIdmTNxtBnFawbs1m/FPxzwavy9okXQHeg
9c35jPtCV0499w/ItAG3pvWA/z78i9hvxYJjBfnITuAUvDpvH1eDvZZVPghe
RitPK6e9MOck+S5kW+n8sz7j6vSVjn0WL9BawmshH8tcr7PeZO0tNv1j3rHT
UcG2TDHUOYljBMUGGnMQmXb0XZ5zDnw1vJa0P3N+U+MT51TKpYoj2xq6FS2C
Lib/Cr+FbGbGY/6xTfSV+NdGyfbcnjhOkQ3aq/WC55LNq89e2wa/nYQ5DkAP
DtY95QjNE8cA8v29aIvBE4JtzevM8Qp4OrhF1nf4OngmuHvWZ3yM/KNyiJxt
xhL4k4J16z86Z50NbRrLlZH+wZ8cbJve1ptQrg2+B/wW+Ef5gmDdOcD5TEyc
kysX1zcrl24G3pJxTl1F+aV0OueYcI7OOtgWKMebBO4SXCvR3St3vBg8p7xz
yCngi4JjNdmKyYrNgmsLGZ0puBt4SDlsC/hGxb6yV/jDLbLJyjWCY6VN4BvA
ZwfHkpvBR6EvaxPbXp1RbfbbMNg3q2ZzArhBsK9XTWKUYvng2PRb5K9X7Bwc
u32Xc67fXDFdxjn/TeCmikn59q05x17nBvsGxWDV5JsLrlUopjkE72bdh94m
MmXg3aocHlwefCLjv2VMa8aeqpyY/XVW7Cr9RWYjvBOQOSWyjGy37lB3Jxu+
HNlrVVOCdy3yz0s/VHOQb1P8Fuzz5OumIX8c9AbVbVLPWTNxzqZcrYXsMfhL
xT/srSn4PNqOxLWWOvIttC2pYyf5NPkm6bB0Vz6qNvQm+Jmsffgx4K9Tz91c
/l/xUGzd7591bl1NZ5hzjl0D+qvUsZ9ijojzGscad4FLsafWiWsAyv31zYls
CX1llL+Cn1I8Tusue0Dfk9A9aRcpVgEXIV9CMWQZ950S/Eb0NtTXKnEOoNhf
NnEf9E3Btlg59rmJY3rF8rKJC/QttG7QXZBplDjnUK5xIX0VFA8rxyE+6gJu
nzimUywnG7VY+ZT2qNiH8fWzPvM6/575F8Exg2KFFrz3usFvXm9dc77I2OH6
ZsV+jH0c+pLYa7UFN0icEygX6KT3AT2gYFsqnayqvRYcG6tm1Rb5uODcRnPO
SX2mOkvZ7CnBMZBinxWyocE5qnJTxWjKXXUmOgvlsIq99Y36NsXgquVJB3T3
qukV5MtUE8o6J+oIfiF2rUk518XI52PX1qRTPcGJ5otcw1Jt4Sn2syLvGkMJ
xs8Fv5h3zNEdfhy71qUanWz7tti1HNl4xfL/vKGsY/oc9AX0FUHn4d+U+ox1
tv/EHKnfmN7WHtn04BqIah+Kqdux/hK9x6xztlnBMZ5iO32jbLliTsWasumz
g22ebJ3GLEydwyt3Vwyp3Ek1W9VqlUM9AN2VvhvQjXr0ZVmvd+y7UI6s3EU1
INV+lMMsSF3TUC1DMezdwTG+YvsL9T5S18hUG1OMIt+jmF6xvHzQE6lrBqoV
lKTvZ9mNxLW+xorxgnMC5QKNtEflR4lzP8WE81PXjFQrUow8IzhnUa7Shr5+
wTZdtlw1g/7BNl22XDWXAcE+QLZfOXsX2Urdv2IRbH4zcOPYud/bXMeF4LZ6
D+AZ8Fso3omdm56GTe8Ebi57AN4MXp/aRsk2qUbTGdwSfg/FjsVdC5yfuNak
mqBqafcnjv1UU1MtcCH41bxrgj3Z7yjVWPi2uVnfVYfYeZnuTLnd+cqxM87x
VJu9N3HtSjVa1TLvSxwLq6a5iPmuix17ymeoFvZA4lhJNTHVfh5MHGupBnQO
slNpNaXrGcfutyaObRTDT01dQ1DtQDW9QcE+Tb5MNahe4MbyB7FrEPOlr7Fz
81nI35Y6h1Xuqhpbn2AfKt+pmkzfYB8q36mareZqlvFcmnMB/Gti167vlX7J
P8WOLWXj58qXx45VVeO7I3WNRbUV1QympP4PRf+dqEY6OXUNW7Vr1USnpa5h
qHahmqZy8dsSx0LKye/8NydXLq4a56iCbbZstXKGx5R7wn9BZwV/aHCNSrWp
n/mG4YyvFLtWqTMeBi7ErmXWABdjrp+UjzFXbcbsThxjKbZS3/hgHyvfqpz4
t8Q2XrZ9rXQgsc+Tr1sH/j1xzKBYYSO4ou6yYJ5qfMtY+4vU/z0NVQwG/Ufe
tQPVCDqAK8teZaxz+m/pwdh+Rv8xiaeasGrBkjkPfiv5o4zfWFv5btmPjN9E
O3Ab2euM31hj9pNhP5/n7QNVq2kvH59xzeZ81YUUM2bctx18euJa5Dxwfejy
jF+Td8yTqp6heD7vGux28KrgXFg57Hhk31U+nXdNa5t8YXAtSzHaT+B3gmsN
qgk0BecKPlvFBC3A+YJreYqRvgO/HJxLK+bcAn4tuPajmHerYpvg2oFi2KfB
n6kx/jXagcQxnmI77fmDxDok3fkEvAD8fmJaNmIR9Me0T/P2WZ8kfmN6W+qr
rtyi4LtWTLQm8ZvRW9Ga7yT+j0b/zXwk/Uj9H4b+u1BNZRT4othn+4x8CHN1
BI/T3eVc+5POSFdUA/wz9X8Q+u9BNaLZsW2sbOtJyIxOHUMpdlLOuVu1stj/
3ek/vpbKN+UfRGf8X6dssmyx/vNsDl2RvnMztgP3xLaxsq21s9alWbHXkk41
g54eu5bcUfoa22bLVtfKWjdnxh4rHZVu3hWbJx29N7YPkO2vQ99jstexfaVq
OtLFObF50kntfUrst6tv+DX2N+lbmvDbJLYPke9oLv1S/s4dDCyJHQSPBHeK
TSsHn8jdDEhc69SZz4Q/VzkHvM2yn/Avg3+f4nGdB/x5sX2pairXp47hFLup
BqD/CpUTKBfQf4atU9t42fZ2tDapz0xnJZ+2U+8rdu1N/xnr7H/Pe++6A9Xq
W8mGZl2zV+6rmEexjnLgk1Pfme5Ktlv/bT+TWNf1H7dyg3mJaxHKES6GnlOw
LqomPhf+97Fz35T2f/bQSUY=
          "]], 
         PolygonBox[{{5164, 5001, 4369, 4749, 3877}, {5163, 4999, 4363, 4743, 
          5199}}]}]}, {}, {}, {}, {}},
     VertexColors->CompressedData["
1:eJzt3DGL3kUQx/EjWNpoIUjSmM7C4hA74SohlYgvwEIQS2tDWu2tLEIKX4GN
cJWNjRoLwSSClnkBQQRBrhIEG+ee/5+7yTy/38x+p3mKD7s7/93ZnavutQ8/
ef+jGycnJ1++cnLywsnhePPfeHSG4ziOr+l3b17cv3X6OPye337w5Nmdh/L8
cBzHvf2PA7//BV7rMbzqA8dx/JCr3098tsfwqn8cx/u6+n3D8UqP4XX/cBzX
ufp9wnFnj+F1f3Ecv76r3xccn+wxvO4/juOHXf1+4DhOf8Xxjq5+H3Acp7/i
eEdX338cx+mvON7R1fcbx3H6K453dPX9xXHc12N4vV84rnT1/cRxvK/H8Hrf
cLzS1fcPx/G5HsPr/cPxjKvvF47j63oMr/cRxzOuvl84juP0X3yiq+8PjuM4
/RWf6Or7g+M4Tv/FJ7r6fuA4jtNf8Ymuvh84juP0X3yiq+sfx3Gc/ouv6Or6
x3Ecp//iE11d3ziO464ew+v9xnu7ur5xHMddPYbX+417u7p+cRzHXT2G1/uN
e7u6fnEcx7t6DK/3Hde6uj5xHMe7egyv9x3Xuro+cRzHp3oMr/cf17q6PnEc
x6d6DK/3H691df3hOI5P9Rhe7z9e6+r6w3EcX9VjePUHvNbV9YfjOL6qx/Dq
D3jO1fWF4zi+qsfw6g94ztX1heM4jl/uMbz6B55zdX3hOI7jl3sMr/6Bb7u6
fnAcx/HLPYZX/8C3XV0/OI7j+PU8hld/wbddXT84juP49TyGV3/Bt11dPziO
4/j1PIZXf1nd1fWB4ziOX89jePWX1V1dHziO43iNx/DqP6u7uj5wHMfxGo/h
1X9Wd3V94DiO4zUew6v/THf1+eM4juM1HsOr/0x39fnjOI7jGo/h1Z+mu/r8
cRzHcY3H8OpP0119/jiO47jGY3j1p+6uPl8cx3Fc4zG8+lN3V58vjuM4rvEY
Xv2pu6vPF8dxHPf0GF79q7urzxfHcRz39Bhe/au7q88Xx3Ec9/QYXv3L3dXn
h+M4jnt6DK/+5e7q88NxHMc9PYZX/3J39fnhOI7jPT2GV39zd/X54TiO4z09
hld/c3f1+eE4juM9PYZXf3N39fnhOI7jPT2GV39Tu/p8cBzH8Z4ew6u/qV19
PjiO4/hMj+HV/9SuPh8cx3F8pse4Wv/JjnfPb298tbt/nzo/xjO+8/jVXd3/
cK3HoD6P6THW2t9s/lnv/n3d899z9/y77z/59c7Pff3s/Nn1V8/Pff3q+dXr
V8+vXr96fvX61fNn1+8+Pju/ev3q+dXrd59fvf708dn51fmrx2fnV68/fXx2
fvX6jN8en51fvb56vHt+e+Oz86vXZ/z2+Oz81eu7u/r9UO9/df5z/dMPvj5/
7+kvZ////ezixy9+fumnJvWl7n+r57f691fnx/y5+avX5/u1+WXHu3+fe37Z
8dO/Lzue/dkez/5sj1fvjzp/9/PPzt+9/qrzc5/fff+nr4/jK3sMr79/1L6X
f9bV/ZHxjN8aP91jPN/7rXa+//Lfw3Hc9dX5ZfNX51ft6vdpdY/R636p+3u1
Tz/f6fmr69N9fxjP+K3x3V29f+rxWe/+PrnvP/Pn5lffj9Vdff7u47Ourv/s
+ri3x+j1Privj2tdff7T7697/tU+/f2udvav1tX7i297DK/6Ubv6fHBc6TGu
dj/2xmfnV39/Nv/s/Pi2T6+f6evjs119P6d7DK/zx3EcX9XV/QHHcRzHcfyq
HsPr7yu1q89ndY/B+V7FYxz3+/fWV7v793ff3+v7G6+/eOPjP38Nv69+8/fp
d1/98Jz2R31/qvNTu/r9c7/fe+5eX4xn/NZ49f1Sf191fu6u/r7u56+e3/3+
Tr9/7t+nri93j+H1Pqm/r3t+1fNPX786f/f5q/NbPf+sq9+v6R7Dq37U+zM9
f3eP0at/uM+vPr+sq/dPPZ7vr/Vsftnx+GyP4fW+Z/NT5z/dYxy3P7qvX+3T
z6/a3e+Hen31eHX/UH+fev7s+ur8u+9P9fzu96+7d6/v7vNn11fPr76f6vHd
51fXd9bV9eXuMbzqc7rH6FXf6vHq+dXn7+7q/XWvj+z6e+NxHK9z9/dldY8x
631V568+X3eP4XV+2fyq81fvv/p81fm5f//e+KxPX199v6vd/X1Xz9/9fKe7
+/s5PT+1d38f1Oer3r+9+bPrZ+f39W/fevT57+/8Fn7/evndp/fe/v7s7s2L
+7dOH4ff89sPnjy78/BI/38p6+r11V79Pqn3V/196v1j/3Ecxz09Rq+/f9X5
ZV19/t09htfft+5e/T5U51/t6vru7jGO21/c+1N1/ur83OdXr+9+//bGrz7/
9PPr7u73070+1PU1fX/x2T69P033GMfd/+r1u8/vvv7q+a/uMbz603RXn797
fai/v3p/1O9vNv+su59PNv/q9bOu3l91/at9L/9qd9//vfmz668+vrvH8Hpf
99y9PtTj1fO71+fq51c9Pju/en/V+6fef/KrzZ/9y7n6fXDPv3q8+/zu56vO
X71+1tX5q9dX5+e+f9PrU70/6vn3xlfP775/WXevr73xWXdff/X83L/ffX33
++s+vvv86vHu90edX7W7v8+r//2RzU+9P6vfLzzn6vpS16f797t7jF71fXj8
P1CksDM=
      "]], {}}, InsetBox[
    StyleBox["\<\"(a)\"\>",
     StripOnInput->False,
     LineColor->GrayLevel[0],
     FrontFaceColor->GrayLevel[0],
     BackFaceColor->GrayLevel[0],
     GraphicsColor->GrayLevel[0],
     FontFamily->"Arial",
     FontSize->Large,
     FontWeight->Bold,
     FontColor->GrayLevel[0]], {4.5, 0.9}, 
    ImageScaled[{Rational[1, 2], Rational[1, 2]}]]},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0.000010344941737288135`, 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox["\"\[Eta]\"", TraditionalForm], None}, {
     FormBox[
     "\"\[CapitalDelta] (in units of \\!\\(\\*SqrtBox[\\(\[HBar]\\)]\\))\"", 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  LabelStyle->{FontSize -> Large, FontFamily -> "Arial", 
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.893992858289383*^9, {3.893992905409186*^9, 3.893992911772088*^9}, {
   3.8939929554634*^9, 3.8939929675403852`*^9}, 3.893993026204378*^9, 
   3.893993082425315*^9, {3.8939933523294086`*^9, 3.8939933577114563`*^9}, 
   3.8939934695573874`*^9, 3.8939935261242857`*^9, 3.893994888307815*^9, 
   3.893994985489069*^9, 3.8939950737725363`*^9, 3.893995112979436*^9, 
   3.893995216940187*^9, {3.8939953050395727`*^9, 3.893995331640588*^9}, 
   3.894338767607917*^9, 3.8943388333328257`*^9, 3.8943394600523014`*^9, 
   3.8943401785248084`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"d9cb9b80-dd64-42e0-8ab4-f44cbf42b830"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"V", "[", 
               RowBox[{"s", ",", "1"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], 
             RowBox[{"GaussIntR2", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"v", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], 
                RowBox[{"unHETwoPrefactor", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", "x1", ",", " ", 
               "p1"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Delta]", ">", "0"}], ",", 
              RowBox[{
               SuperscriptBox["s", "2"], "==", "1"}], ",", 
              RowBox[{
               SuperscriptBox["t", "2"], "==", 
               RowBox[{"1", "-", 
                SuperscriptBox["r", "2"]}]}], ",", 
              RowBox[{"0", "<", "r", "<", "1"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", " ", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", " ", ",", " ", "1", " ", ",", "4"}], "}"}]}], "]"}]}],
        "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]x", "-", 
               RowBox[{"2", " ", 
                SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]x", "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], "->", 
          RowBox[{
           SubsuperscriptBox["f", "\[Delta]", "\[CapitalDelta]x"], "[", 
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Alpha]", "i"]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]x", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]x", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], "->", 
          RowBox[{
           SubsuperscriptBox["f", "\[Delta]", "\[CapitalDelta]x"], "[", 
           SubscriptBox["\[Alpha]", "r"], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]p", "-", 
               RowBox[{"2", " ", 
                SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]p", "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], "->", 
          RowBox[{
           SubsuperscriptBox["f", "\[Delta]", "\[CapitalDelta]p"], "[", 
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Alpha]", "r"]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]p", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]p", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], "->", 
          RowBox[{
           SubsuperscriptBox["f", "\[Delta]", "\[CapitalDelta]p"], "[", 
           SubscriptBox["\[Alpha]", "i"], "]"}]}]}], "\[IndentingNewLine]", 
        "}"}]}], "\[IndentingNewLine]", ",", "2"}], "]"}], "]"}], 
   "\[IndentingNewLine]", "/.", 
   RowBox[{
    SuperscriptBox["t", "2"], "->", 
    RowBox[{"1", "-", 
     SuperscriptBox["r", "2"]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8943390912381268`*^9, 3.8943390913633833`*^9}, {
  3.894339373239942*^9, 3.8943394388562703`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"f12fed75-7355-4250-89c5-c3452bb1ee54"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["r", "2"], " ", 
     SuperscriptBox["\[Alpha]", "2"]}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["r", "2"]}], ")"}], " ", 
       SuperscriptBox["\[Alpha]", "2"]}]], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["r", "2"]}], ")"}], " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], " ", 
      RowBox[{
       SubsuperscriptBox["f", "\[Delta]", "\[CapitalDelta]p"], "[", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Alpha]", "r"]}], "]"}], " ", 
      RowBox[{
       SubsuperscriptBox["f", "\[Delta]", "\[CapitalDelta]x"], "[", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Alpha]", "i"]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["f", "\[Delta]", "\[CapitalDelta]p"], "[", 
       SubscriptBox["\[Alpha]", "i"], "]"}], " ", 
      RowBox[{
       SubsuperscriptBox["f", "\[Delta]", "\[CapitalDelta]x"], "[", 
       SubscriptBox["\[Alpha]", "r"], "]"}]}]}], ")"}]}], 
  RowBox[{"4", "+", 
   RowBox[{"4", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["r", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Alpha]", "2"]}]], " ", "s"}]}]]], "Output",
 CellChangeTimes->{
  3.8943391028572025`*^9, {3.894339144661222*^9, 3.8943391711822886`*^9}, 
   3.8943392205911307`*^9, 3.894339338630658*^9, 3.894339444796405*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"c2125810-5229-479b-88a2-474b08c22149"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.894339110460902*^9, 3.8943391933824687`*^9}, 
   3.8943394555638113`*^9},ExpressionUUID->"d854cf12-ef85-40da-a8bc-\
d5eef0b09819"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fidelityZPSHET", " ", "[", 
     RowBox[{
     "\[CapitalDelta]x_", ",", "\[CapitalDelta]p_", ",", "\[Delta]_", ",", 
      "r_", ",", "\[Alpha]_", ",", "\[Theta]_", ",", "s_"}], "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["r", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], "+", 
       RowBox[{"s", " ", "2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]]}]}], 
      RowBox[{
       RowBox[{"PsHET", "[", 
        RowBox[{
        "\[CapitalDelta]x", ",", "\[CapitalDelta]p", ",", " ", "\[Delta]", 
         ",", "r", ",", "\[Alpha]", ",", "\[Theta]", ",", "s"}], "]"}], "8", 
       " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"s", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[Alpha]", "2"]}]]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"s", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Alpha]", "2"]}]]}]}], " ", ")"}]}]], 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Erf", "[", 
           FractionBox[
            RowBox[{"\[CapitalDelta]p", "-", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
          RowBox[{"Erf", "[", 
           FractionBox[
            RowBox[{"\[CapitalDelta]p", "+", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Erf", "[", 
           FractionBox[
            RowBox[{"\[CapitalDelta]x", "-", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
          RowBox[{"Erf", "[", 
           FractionBox[
            RowBox[{"\[CapitalDelta]x", "+", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Erf", "[", 
           FractionBox[
            RowBox[{"\[CapitalDelta]p", "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", 
              SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
          RowBox[{"Erf", "[", 
           FractionBox[
            RowBox[{"\[CapitalDelta]p", "+", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", 
              SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Erf", "[", 
           FractionBox[
            RowBox[{"\[CapitalDelta]x", "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", 
              SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}], "+", 
          RowBox[{"Erf", "[", 
           FractionBox[
            RowBox[{"\[CapitalDelta]x", "+", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", 
              SqrtBox["2"], " ", "r", " ", "\[Alpha]", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Delta]"}]}]]}]], "]"}]}], ")"}]}]}], 
      ")"}]}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.894339471821989*^9, 3.894339473347685*^9}, {
  3.894339541246513*^9, 3.894339703945203*^9}, {3.8943397849041605`*^9, 
  3.894339796373888*^9}, {3.894340902899308*^9, 3.894340912628719*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"807bedac-b166-4762-9cc6-86c86774ca11"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fidelityZPSHET", "[", 
  RowBox[{"2", ",", "2", ",", 
   RowBox[{"\[Delta]HOM", "[", "0.85", "]"}], ",", 
   SqrtBox["0.25"], ",", "2", ",", "0", ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fidelityZPSTHR", "[", 
  RowBox[{
   SqrtBox["0.25"], ",", "2", ",", "0", ",", "0.3", ",", "1"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8943372054221764`*^9, 3.8943372274742827`*^9}, {
  3.894338278997861*^9, 3.8943382792652507`*^9}, {3.894340239398615*^9, 
  3.894340247983395*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"eeae9f43-f96c-4be1-bd6a-23c210745c4c"],

Cell[BoxData[
 RowBox[{"0.918688022073529`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.894337230824395*^9, 3.894337940283574*^9, 
  3.8943382795641384`*^9, 3.8943402493353024`*^9, 3.8943406616326766`*^9, 
  3.894340920628171*^9},
 CellLabel->
  "Out[252]=",ExpressionUUID->"6bf39087-29b8-46a6-8ad1-80869f9ba5d4"],

Cell[BoxData["0.6244617804521799`"], "Output",
 CellChangeTimes->{3.894337230824395*^9, 3.894337940283574*^9, 
  3.8943382795641384`*^9, 3.8943402493353024`*^9, 3.8943406616326766`*^9, 
  3.894340920628171*^9},
 CellLabel->
  "Out[253]=",ExpressionUUID->"f606e5ca-e48c-432f-9246-0c181310b11d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PsHET", "[", 
  RowBox[{"2", ",", "2", ",", 
   RowBox[{"\[Delta]HOM", "[", "0.85", "]"}], ",", 
   SqrtBox["0.25"], ",", "2", ",", "0", ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PsTHR", "[", 
  RowBox[{
   SqrtBox["0.25"], ",", "2", ",", "0.3", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.894338073678937*^9, 3.89433812158739*^9}, {
  3.8943382572770863`*^9, 3.89433826897402*^9}, {3.8943402584086943`*^9, 
  3.8943402612774143`*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"44c31f13-be27-4736-84a8-e0fed5030e36"],

Cell[BoxData[
 RowBox[{"0.2376795494785988`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.894338112440975*^9, 3.894338269790998*^9, {3.894340262338724*^9, 
   3.894340293432398*^9}, 3.8943404112123194`*^9, 3.894340927667721*^9},
 CellLabel->
  "Out[254]=",ExpressionUUID->"e9a0d173-3b4e-4fe9-8094-f792f23c7c1c"],

Cell[BoxData["0.7410224625219923`"], "Output",
 CellChangeTimes->{
  3.894338112440975*^9, 3.894338269790998*^9, {3.894340262338724*^9, 
   3.894340293432398*^9}, 3.8943404112123194`*^9, 3.894340927667721*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"bac03a5d-b466-46ab-913a-05a2ed144f91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fidelityZPSTHR", "[", 
  RowBox[{
   SqrtBox["0.25"], ",", "2", ",", "0", ",", "0.3", ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.8943406536174407`*^9},
 CellLabel->
  "In[197]:=",ExpressionUUID->"05ff5999-8440-4454-b28e-192b9880b8a8"],

Cell[BoxData["0.6244617804521799`"], "Output",
 CellChangeTimes->{{3.8943406404861584`*^9, 3.894340655267825*^9}},
 CellLabel->
  "Out[197]=",ExpressionUUID->"39130559-1a9f-4263-ac93-4e965b687790"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plotting", " ", "overlap", " ", "and", " ", 
    RowBox[{"prob", ".", " ", "improvement"}], " ", "plots", " ", "on", " ", 
    "top", " ", "of", " ", "each", " ", 
    RowBox[{"other", ".", " ", "Intersecting"}], " ", "lines", " ", "mean", 
    " ", "that", " ", "dyning", " ", "is", " ", "better", " ", "to", " ", 
    "simulate", " ", "certain", " ", "threshold", " ", 
    RowBox[{"efficiencies", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{
     "\[CapitalDelta]x", ",", " ", "\[Alpha]", ",", "r", ",", "t", ",", 
      "\[Theta]", ",", "\[Eta]", ",", "x1", ",", "p1", ",", "x2", ",", "p2", 
      ",", "s", ",", " ", "plotpoints"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t", "=", 
     SqrtBox["0.75"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["t", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\"\<Dyne efficiency chosen:\>\"", "\[IndentingNewLine]", 
   RowBox[{"\[Eta]H", " ", "=", "0.85"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotpoints", "=", "60"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cols", "=", 
     RowBox[{"RGBColor", "/@", 
      RowBox[{"{", 
       RowBox[{"(*", 
        RowBox[{"\"\<#053061\>\"", ",", "\"\<#2166ac\>\"", ","}], "*)"}], 
       RowBox[{
       "\"\<#4393c3\>\"", ",", "\"\<#92c5de\>\"", ",", "\"\<#d1e5f0\>\"", 
        ",", "\"\<#f7f7f7\>\"", ",", "\"\<#fddbc7\>\"", ",", 
        "\"\<#f4a582\>\"", ",", "\"\<#d6604d\>\""}], 
       RowBox[{"(*", 
        RowBox[{",", "\"\<#b2182b\>\"", ",", "\"\<#67001f\>\""}], "*)"}], 
       "}"}]}]}], ";"}], "\n", "\"\<HETERODYNE:\>\"", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"text", "=", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<(b)\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FontSize", "\[Rule]", "Large"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "Black", 
           ",", "Bold"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.5", ",", ".9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"txt", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", "text", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotROHET", "=", " ", 
     RowBox[{"DensityPlot", "[", 
      RowBox[{
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"Re", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"fidelityZPSHET", "[", 
            RowBox[{"\[CapitalDelta]", ",", "\[CapitalDelta]", ",", 
             RowBox[{"\[Delta]HET", "[", "\[Eta]H", "]"}], ",", "r", ",", 
             "\[Alpha]", ",", "\[Theta]", ",", "s"}], "]"}]}], "+", 
          RowBox[{"fidelityZPSTHR", "[", 
           RowBox[{
           "r", ",", "\[Alpha]", ",", "\[Theta]", ",", "\[Eta]", ",", "s"}], 
           "]"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[CapitalDelta]", ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Eta]", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", "plotpoints"}], ",", 
       RowBox[{"ColorFunction", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"cols", ",", "#"}], "]"}], "&"}], ")"}]}], ",", 
       RowBox[{"ColorFunctionScaling", "->", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[CapitalDelta] (in units of \!\(\*SqrtBox[\(\[HBar]\)]\))\>\"",
           ",", "\"\<\[Eta]\>\""}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "Black"}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotRIHET", "=", 
     RowBox[{"DensityPlot", "[", 
      RowBox[{
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"Re", "[", 
         RowBox[{
          RowBox[{"PsHET", "[", 
           RowBox[{"\[CapitalDelta]", ",", "\[CapitalDelta]", ",", " ", 
            RowBox[{"\[Delta]HET", "[", "\[Eta]H", "]"}], ",", "r", ",", 
            "\[Alpha]", ",", "\[Theta]", ",", "s"}], "]"}], "-", 
          RowBox[{"PsTHR", "[", 
           RowBox[{"r", ",", "\[Alpha]", ",", "\[Eta]", ",", "s"}], "]"}]}], 
         "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[CapitalDelta]", ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Eta]", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", "plotpoints"}], ",", 
       RowBox[{"ColorFunction", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0", ",", "0", ",", "0.3"}], "]"}], ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "]"}]}], "}"}], 
            ",", "#"}], "]"}], "&"}], ")"}]}], ",", 
       RowBox[{"ColorFunctionScaling", "->", "False"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[CapitalDelta] (in units of \!\(\*SqrtBox[\(\[HBar]\)]\))\>\"",
           ",", "\"\<\[Eta]\>\""}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "Black"}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{"plotROHET", ",", "plotRIHET", ",", "txt"}], "}"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{
     "\[CapitalDelta]x", ",", " ", "\[Alpha]", ",", "r", ",", "t", ",", 
      "\[Theta]", ",", "\[Eta]", ",", "x1", ",", "p1", ",", "x2", ",", "p2", 
      ",", "s", ",", " ", "plotpoints"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8913135346449757`*^9, 3.891313588024474*^9}, {
   3.893991876657242*^9, 3.893991877357768*^9}, 3.893992545464538*^9, {
   3.893992595801051*^9, 3.893992605288683*^9}, {3.893992959951789*^9, 
   3.8939929640070343`*^9}, {3.8939934470175056`*^9, 3.893993454652569*^9}, {
   3.893993491481035*^9, 3.8939935231556387`*^9}, {3.8943389404238043`*^9, 
   3.8943389658262615`*^9}, {3.8943397372803507`*^9, 
   3.8943397601776905`*^9}, {3.8943404296579556`*^9, 
   3.8943405029588065`*^9}, {3.8943405920537424`*^9, 
   3.8943406163368745`*^9}, {3.894340723674409*^9, 3.894340758254446*^9}, {
   3.894341006465231*^9, 3.8943410066222467`*^9}, {3.894341039255258*^9, 
   3.89434104351368*^9}},ExpressionUUID->"66a71ef2-1135-45e4-b138-\
c41aa94e56e7"],

Cell[BoxData["\<\"Dyne efficiency chosen:\"\>"], "Output",
 CellChangeTimes->{
  3.893992858289383*^9, {3.893992905409186*^9, 3.893992911772088*^9}, {
   3.8939929554634*^9, 3.8939929675403852`*^9}, 3.893993026204378*^9, 
   3.893993082425315*^9, {3.8939933523294086`*^9, 3.8939933577114563`*^9}, 
   3.8939934695573874`*^9, 3.8939935261242857`*^9, 3.893994888307815*^9, 
   3.893994985489069*^9, 3.8939950737725363`*^9, 3.893995112979436*^9, 
   3.893995216940187*^9, {3.8939953050395727`*^9, 3.893995331640588*^9}, 
   3.894338767607917*^9, 3.8943388333328257`*^9, 3.8943394600523014`*^9, 
   3.8943401649347887`*^9, 3.894340463079102*^9, 3.8943405055896435`*^9, 
   3.8943406885219555`*^9, {3.8943407267394285`*^9, 3.894340743092379*^9}, 
   3.8943409328262205`*^9, 3.8943410080049334`*^9},
 CellLabel->
  "Out[279]=",ExpressionUUID->"a6b07a28-c553-4b76-9a3e-38a4bc3cf605"],

Cell[BoxData["0.85`"], "Output",
 CellChangeTimes->{
  3.893992858289383*^9, {3.893992905409186*^9, 3.893992911772088*^9}, {
   3.8939929554634*^9, 3.8939929675403852`*^9}, 3.893993026204378*^9, 
   3.893993082425315*^9, {3.8939933523294086`*^9, 3.8939933577114563`*^9}, 
   3.8939934695573874`*^9, 3.8939935261242857`*^9, 3.893994888307815*^9, 
   3.893994985489069*^9, 3.8939950737725363`*^9, 3.893995112979436*^9, 
   3.893995216940187*^9, {3.8939953050395727`*^9, 3.893995331640588*^9}, 
   3.894338767607917*^9, 3.8943388333328257`*^9, 3.8943394600523014`*^9, 
   3.8943401649347887`*^9, 3.894340463079102*^9, 3.8943405055896435`*^9, 
   3.8943406885219555`*^9, {3.8943407267394285`*^9, 3.894340743092379*^9}, 
   3.8943409328262205`*^9, 3.894341008011439*^9},
 CellLabel->
  "Out[280]=",ExpressionUUID->"f63b571b-134e-4aec-a81d-3f31ea76bb14"],

Cell[BoxData["\<\"HETERODYNE:\"\>"], "Output",
 CellChangeTimes->{
  3.893992858289383*^9, {3.893992905409186*^9, 3.893992911772088*^9}, {
   3.8939929554634*^9, 3.8939929675403852`*^9}, 3.893993026204378*^9, 
   3.893993082425315*^9, {3.8939933523294086`*^9, 3.8939933577114563`*^9}, 
   3.8939934695573874`*^9, 3.8939935261242857`*^9, 3.893994888307815*^9, 
   3.893994985489069*^9, 3.8939950737725363`*^9, 3.893995112979436*^9, 
   3.893995216940187*^9, {3.8939953050395727`*^9, 3.893995331640588*^9}, 
   3.894338767607917*^9, 3.8943388333328257`*^9, 3.8943394600523014`*^9, 
   3.8943401649347887`*^9, 3.894340463079102*^9, 3.8943405055896435`*^9, 
   3.8943406885219555`*^9, {3.8943407267394285`*^9, 3.894340743092379*^9}, 
   3.8943409328262205`*^9, 3.894341008011439*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"cebe4c7d-5d28-4eef-ac43-8eb0342e75e9"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxs3XmczdX/wPFrG+swM0jbt5AiVNq0yTmqS4qypWwtokVJi1QSKQkt2iYR
MllC6xQSRWPfsg8ThnuNO2bmojEMwxh+5nPv630f7zO/3z99n79z7+dz7p37
up/l3s/VoO+gLv3L+3y+N+r6fKX/3fxil5OhVL/xRf8v4vmOV4onb3/rjef9
m53xdHHF+MavPnbZbuf2AfGChs/cOqd4v3P/kDhvSavzN8lxlhcWX9Yr8abJ
2w87y88XzykuyBg37aizvgLx8vaZE1Z3P+6sv1BcOlox/qQznyLx+RvXbbP8
lDO/YnHp7N5644wz3xJxs3dGf77ounPO/H0WR6Yb82zv8ZQTXzv+xyoXP1Be
PM+7Q8y3ew+4gvhv7/FWFLf1WEm8wXv8MXfxHlCcOMN7PiqLH/UeQMwHvOen
inhA6eLqVhXne89XzENKXz0vVhOfqVH6/FUXvzMtOOPI+pireM9nDfHHpdNp
HC+u4z2/MU86sv7JZu/UFNf3nu9a4lnnZ9M+M+Yvvec/QdzD+4PFfKn394h5
X+nDaZ8o/tb7+8Tc31/6ioq5iff3ShKHz986OCPmn7y/X8wvlT49XWqLb/L+
njFHH7WYfr0/w62fGvr1Xpa98Eox/erxdDH96tsHxPSr7x8S069eXlhMv3r5
+WL61esrENOvXn+hmH71fIrE9KvnVyymXz3fEjH96vn7LKZfTL+YfjH9YvrF
9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+Y
fjH9YvrF9IvpF9Mvpl9Mv5h+9evXb7K9eaU4/aY4/aY4/aY4/aY4/aY4/aY4
/aY4/aY4/aY4/aY4/aY4/aY4/aY4/aY4/aY4/aY4/aY4/aY4/aY4/aY4/TLf
ErHuN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8Xp
N8XpN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8XpN8Xp
N8XpN8XpN8XpN8XpN8XpN8XpN8XpN0X6Heitd470+8Wi686vea70i+lXj6eL
6VffPiCmX33/kJh+9fLCYvrVy88X069eX4GYfvX6C8X0q+dTJKZfPb9iMf3q
+ZaI6VfP32cx/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i
+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9Ktfv34z1Ltf
qrP9TXW2v6nO9jfV2f6mOtvfVGf7m+psf1Od7W+qs/1Ndba/qc72N9XZ/qY6
299UZ/ub6mx/U53tb6qz/U11tr+pzvY31dn+pjrb31Sjt7+pzvY31dn+pjrb
31Rn+5vqbH9Tne1vqrP9TXW2v6nO9jfV2f6mOtvfVGf7m+psf1Od7W+qs/1N
dba/qc72N9XZ/qY6299UZ/ub6mx/U53tb6qz/U11tr+pzvY31dn+pjrb31Rn
+5vqbH9Tne1vqrP9TXW2v6nO9jfV2f6mOtvfVGf7m+psf1OlX+/wd8586Vf/
d6WYfvV4uph+9e0DYvrV9w+J6VcvLyymX738fDH96vUViOlXr79QTL96PkVi
+tXzKxbTr55viZh+9fx9FtMvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6
xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX31e
uY5Yn39eJK+rz73t8yLpF9OvHk8X06++fUBMv/r+ITH96uWFxfSrl58vpl+9
vgIx/er1F4rpV8+nSEy/en7FYvrV8y0R06+ev89i+sX0i+kX0y+mX0y/mH4x
/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+m
X0y/mH4x/WL6xfSrX69+s8z7uy6RXrt7f7cl0iumVz2eLqZXffuAmF71/UNi
etXLC4vpVS8/X0yven0FYnrV6y8U06ueT5GYXvX8isX0qudbIqZXPX+fxfSK
6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4x
vWJ6xfSK6RXTK6ZXTK+YXjG9YnrFbE/169NvVnh/xzTneDZN+sT6eDZN+sT6
eDbNOZ5Nc45n06RPrI9n05zj2TTneDbNOZ5Nc45n05zj2TTneDZN+sT6eDbN
OZ5Nc45n05zj2TTneDbN6OPZNOd4Ns05nk1zjmfTnOPZNOd4Ns05nk1zjmfT
nOPZNOd4Ns05nk1zjmfTnOPZNOd4Ns05nk1zjmfTnOPZNOd4Ns05nk1zjmfT
nOPZNOd4Ns05nk1zjmfTnOPZNOd4Ns05nk1zjmfTnOPZNOd4Ns05nk1zjmfT
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
YnrF9IrpFdMrpldMr5heMb1iesX0ql+vfnNP6Qu5Xab0muvNM1N6xfSqx9PF
9KpvHxDTq75/SEyvenlhMb3q5eeL6VWvr0BMr3r9hWJ61fMpEtOrnl+xmF71
fEvE9Krn77OYXjG9YnrF9IrpFdMrpldMr5heMdtTTK+YXjG9YnrF9IrpFdMr
pldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZX/Xr1m/ml7LNX
eu3p/d32Sq+YXvV4uphe9e0DYnrV9w+J6VUvLyymV738fDG96vUViOlVr79Q
TK96PkVietXzKxbTq55viZhe9fx9FtMrpldMr5heMb1iesX0iukVsz3F9Irp
FdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9
YnrF9Kpfr35zVeliXt4nva73fnBtn/SK6VWPp4vpVd8+IKZXff+QmF718sJi
etXLzxfTq15fgZhe9foLxfSq51Mkplc9v2Ixver5lojpVc/fZzG9YnrF9Irp
FdMrpldMr5jtKaZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yum
V0yvmF4xvWJ6xfSK6RXTK6ZXTK/69Rr9PYl7Yr/bPTXaGb1ietXj6WJ61bcP
iOlV3z8kple9vLCYXvXy88X0qtdXIKZXvf5CMb3q+RSJ6VXPr1hMr3q+JWJ6
1fP3WUyvmF4xvWJ6xfSK6RWzPcX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZX
TK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV06t+vfrNqNKHuSnW6w4v
y1ivmF71eLqYXvXtA2J61fcPielVLy8sple9/Hwxver1FYjpVa+/UEyvej5F
YnrV8ysW06ueb4mYXvX8fRbTK6ZXTK+YXjG9YranmF4xvWJ6xfSK6RXTK6ZX
TK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSq
X6/R7/v3DDrXvwalV6yvfw1Kr5he9e0DYn39a1B6xfr616D0iulVLz9frK9/
DTrXvwad61+D0ivW178Gnetfg871r0HpFdOrnm+JWF//GpResb7+Nehc/xp0
rn8NOte/Bp3rXYPO9a5B53rXoHO9a9C53jXoXO8adK53DTrXuwad612DzvWu
Qed616BzvWvQud416FzvGnSudw1Kr1hf/xp0rn8NGn39a9C5/jXoXP8adK5/
DTrXvwad61+DzvWvQef616Bz/WvQuf416Fz/GnSufw1Kr8dLl3sg1mtb73/E
esX0qsfTxfSqbx8Q06u+f0hMr3p5YTG96uXni+lVr69ATK96/YVietXzKRLT
q55fsZhe9XxLxPSq5++zmF4xvWJ6xWxPMb1iesX0iukV0yumV0yvmF4xvWJ6
xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV/16
9ZvmpY9zUOzfmRruPc/7pVdMr3o8XUyv+vYBMb3q+4fE9KqXFxbTq15+vphe
9foKxPSq118oplc9nyIxver5FYvpVc+3REyvev4+i+kV0ytme4rpFdMrpldM
r5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9Irp
FdMrpldMr5heMb1ietWvV7/pV/p3OR3rla7oFdOrHo9dJ0ev+vax41b3v/SK
6VUvLyymV738fDG96vUUiOlVr79QTK96PkVietXzKxbTq55viZhe9fx9FtMr
Znsq10lEe8X0iulV9mOivWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldM
r5heMb3K92CjvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpVb9e/ZHXzXtZ0qv3
NIzOkl4xverxdDG96tsHxKxX3z8kple9vLCYXvXy88X0qtdXIKZXvf5CMb3q
+RSJ6VXPr1hMr3q+JWJ61fP3Wcz2FNMrpldMr5heMb1iesX0iukV0yumV0yv
mF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV
06t+vfpN5GEckF6vKj28TTwgvWJ61ePpYnrVtw+I6VXfPySmV728sJhe9fLz
xfSq11cgple9/kIxver5FInpVc+vWEyver4lYnrFbE8xvWJ6xfSK6RXTK6ZX
TK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK
6RXTK6ZXTK+YXjG9YnrVr1e/8Z7Gr2O9Puo9jlivmF71eLqYXvXtA2LZz1L3
D4npVS8vLKZXvfx8Mb3q9RWI6VWvv1BMr3o+RWJ61fMrFtOrnm+JM1+fxfSK
6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4x
vWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdOrfr36zT2l/+PK2L9j/qX3PIWk
VyzX06nxdDG96tsHxHIcoe4fEsv1dGp5YTG96uXni+V6OrW+ArFcT6fWXyiW
6+nUfIrE9KrnVyymVyzXz6n5+iymVyzXz0Ut189FLdfPRS3Xz0Ut189FLdfP
RS3Xz0Ut189FLdfPRS3Xz0Ut189FTa9YrqeLWq6ni1qup4tarqeLWq6ni1qu
p4tarqeLWq6ni1qup4tarqeLWq6ni1qup4tarqeLWq6ni1qup4tarqeLWq6n
i1qup4tarqeLWq6ni1qup4tarqdTr1e/GVb6vP4S63VjtCN6xfSqx9PF9Kpv
HxDTq75/SEyvenlhMb3q5eeL6VWvr0BMr3r9hWJ61fMpEtOrnl+xM78SMb3q
+fospldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9
YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF7169UfeR3ckS29xl38
wPmXarb0iulVj6eL6VXfPiCmV33/kJhe9fLCYnrVy88X06teX4GYXvX6C8X0
qudTJKZXzPZUz69ETK96vj6L6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5he
Mb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMr
plf9evWbQ6UPe1Ws19beCzvWK6ZXPZ4upld9+4CYXvX9Q2J61csLi+lVLz9f
TK96fQVietXrLxTTK86N9jp0Z6X42SuyZXvKOL3q+ZWI6VXP12cxvWJ6xfSK
6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4x
vWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9Kpfr37TqPT8U+eD0usQbzkHpVdMr3o8
XUyv+vYBsXwup+4fEtOrXl5YTK96+flietXrKxDTq15/obP+IjHbUz2fYjG9
6vmViOlVz9dnMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9
YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSqX69+07t0
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
ev2FYvrV8ykS06+eX7GYfvV8S8T0q+fvs5h+Mf1i+sX0i+kX0y+mX0y/mH4x
/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+m
X0y/mH4x/WL6dfppPad0WnmxfkeXrjYv1i+mXz2eLqZfffuAmH71/UNi+tXL
C4vpVy8/X0y/en0FYvrV6y8U06+eT5GYfvX8isX0q+dbIqZfPX+fxfSL6RfT
L6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6
xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Ov00/rYOnf4dX/pN8lpU+TeKWYfvV4
uph+9e0DYvrV9w+J6VcvLyymX738fDH96vUViOlXr79QTL96PkVi+tXzKxbT
r55viZh+9fx9FtMvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfT
L6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/Tj+tryhd
zLlYv5Hb5Uu/mH71eLqYfvXtA2L61fcPielXLy8svkwdB+RLv5h+9foKxPSr
118opl89nyIx/er5FYvpV8+3REy/ev4+i+kX0y+mX0y/mH4x/WL6xfSL6RfT
L6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6
xfSL6RfTL478t4448vqdabyXYa+R4i+87zdOErv/fdj7O/8kjvw+6m/iX73n
6XfxYO/zqj9NF+8FXttixiOv47/NBu/tIclixiO/b75M/Lj3PK8wo7y/d6LF
1by/d5KY29/lhbtKbt9l39lrJ+5eJeONvL/TGnO7d7sEi//23ucSxdw+znvC
1otzvL/rP+J13v02mXmlT+PFCRYzHvn3izabnTNKnzn+vabNJst7HmuJuX3k
32PYYjp7zx//HsUWGV/ovQ62mvXe/WpYzHiT0j9v4nbj996QaljM+CSvi3Sz
1JtndYsZr+b9HskO453nXF3NYsaHea+7neY37/FWs5jxQ17nGeYa7w9b1WLG
H/Ue17/mO+9zkSoWM77R+37fLtPAm3cVixmP/KD2bvN16Z/3ycoWM/6Lt9w9
pm7ptBfEWcx4Q+99INOM9173cRYz/pm3v7rXVPU6qWQx4+W9ngLm3c9LF1DR
YsZv9zYsAVNyrvT/KljM+Mve+15QPNd7XwjK7THj+73XzX7zmvc8V7CYce/P
s2C/Oeq9X5S3mHFvdW2yzHPe+005ixkf53WSZby33/blLGZ8mbddOGC8jCf7
LGb8tDfdA+Yr73VUIo68L5wTc/sbvNdFKLreYjHjA7x58u+AnBYz/q33BpQt
3uVtdw6aQd4DO2UqXR9fnFvloIwnlU5jwkFzn7c9KxR7/27CopNibn+f102O
+B3v78z1dvniVt7r7phpVXC60s9zY7df5A3kigu8J5brhf4TM97Ue9/n+9tB
8cno7TC371s6jQy+/7reTPI6CMv4Vu+JjTnyPnlIfJf3PBwWDy2d1viYf/W6
PiLO815XMTeMPg78mPfAYvZF/09vbz6V78+z/bnY6662xWyv3O1TxClyf3d7
FfFcGXe3X5H7p8q4uz1jP5Zxd/vm/bmrLJJxtnds31xzex6fu3303nYfWyLL
Y/vI9tA1t//E6yu2PWX7j89O3PnXnJO17Vb/Rf/2XLtY1u9uXyPPR5qsn3G2
p5j9D3ec+zMfttfsf3B7ng/G+fu68/nPe76Xy3y4Pdtv19y+rddpkozrf29l
mfPvqyyT59PdX9gSPW5h/YyzP4DZf3PHuT/zYf+D58/dX2Gc9f/mvT5Wy/oZ
Z//ENbePfC83UcbZ38TsX7r7Q+7+TbL3el0n62f8de95i+0fsb/rjnN/5sP+
Es+Xu3/l7k+95r1+N8j6GWd/Csvvuznj3F9+3y06zvPl7q/18HraKOtjnP0x
zP6/O879eT4Y5/lw9/+mRI+DWR/j7A+65vZ9vPf52DjHJ5jnw93/dPcnI/8e
3xZZP+PsX2L974vGxrk/82F/VP/7orH9WXd/dYT3vGyV9TPO/ivW/x5bbJz7
63+PbYs8X+7+b743j22yPsbZH8YcL7rj3J/ng3GeD3d/+onIgbusj3H2rzHH
q+449+fxM87jd/fPt0bPo7A+xtlfxxwvu+Pcn8fPOI/f3d+/27vfDlkf4+z/
Y47X3XHuz+NnnMfvHj/M815XO2V9jHM8gTlf4I5zfx4/4zx+93jkSu99I0PW
xzjHJ5jzFe449+fxM87jd49vvvTeL3fJ+hjneAfL79M749xffp8+Os7jd4+X
KkfPs7E+xjl+wvL7vc4495ff742O8/jd46/XvffjPbI+xjkew5wvcse5P4+f
cR6/ezyX673/Zsr6GOf4DnO+yh3n/jx+xnn87vFhT285e2V9jHO8iDlf5o5z
fx4/4zx+93hzvdfJPlkf4xx/Ys7XuePcn8fPOI/fPX51/310xjk+xZwvdMe5
P4+fcR6/ezzs/vvOjHO8izlfiXm8mMfrHl+7/x4t4yzftfvvEw95/fvCwoTY
8tx/L5PjdY6/Medb3XHuz3zd43/3+N799/4Y53gec77XHXf/fUj3fIJ7voDz
7qyPcc4PYM43u+Pcn8fvnp9wzz+4/94S45xvwJzvdsfdf7/LPd/hns9w/70Y
xjlfgTnf7o67/x6Re/7EPT/i/nsXjHO+xDW39/5M75yV8XlpSw8fve6cueTI
yHTbO/bvrbjnZ9zzLe7v9zPO+RfM5xHuOPdnPpyv4flxz/e453Pc3yNnnPM7
mM9H3HH39/IZ5/lyzw+5v6fMuMe6p8Qno5/PuOPu738zzvPhnn9yfw+Wcc4v
YT4fcsf17yvHls/j5/wW63N/z5Jxzm+55vaR8wgnZJzPrzDPB+b5cM+Pub/P
xzjnwzCfn7nj3J/5cL6N58c9P+eej3N/f4xxzs+55vYtvPeHAhnn8z69/EIx
zx/n+1i/+3tKjHN+D/N5ozvO/ZkP5wt5vtzzi+75RPf3Yhg/GT1f6Fr/ntEh
GefzUcznoZjnzz1f6f4eBuOcv3Stfw/mgIxnRl9nmM9zMfPl/CfPp3s+1T0/
qn/fwi/jnC91rX8vY6uM50X34/Fl0f00PZ+AmMfH+Vkenz5fGy5zfpdx5os5
T6bHV4qZL+d/mS9mvpjtMvfn7+OeP9bXG/8t55P5PJ/b8/zp883zy5x/dq9f
08v7u8z5afd6Gca5vXv+2v1+PuPc3j2/7X4fmHFu757/dr9/yDi3d8+Pu993
Ypzbu+fP3e9XMM7t///z6/J9iNaMc3vGOf/LOHbHfer/6sj5asY5n835Xs5H
c36X88GcX3XPz3J+lPOfmPOFXzSpODojZ7Wcn3TPb3J+kfOHmPN7nP/j/Bvn
5x6Nnq/a22DAPT3bb5bzY+75Nc5vcf4Kc36J80+c/+H8EOdnOH/D+RPOr3B+
g/MfnH/g/ATnBzh/wPE7x/ccX3P8zfEvx8ccn3L8yvEjx5cc33H8x/EXx2cc
f3D8xfEBx0Mc/7jHJxy/cPzA8QX797zPsP/N/jn7x+w/sz/5a/FLb7z5TWz/
lf3fRvcfzD028qzJWFe93ucNQrJ/yf4o+3/sH7J/xv4b+0/sX7G/wf4Q+zfu
/lF2/Uk7U7Ji+x/sr7C9Zn+C/QPM9lr/Pme+83uFB5zfLzvk/F7Zf87vqW11
fo8pw/m9poPO7zPlOr+/lOn8Xk3Q+T2Yv53fp1jv/N7FfOf9eb7z/jvfeX+d
77x/znfeH+c773/z5f2N9x98efR898h5t6+4attmef3tOz3u7d+2n9/uRr8f
VW/p0HrT98X+/cueAz+aeXly7PfR2Z/63fsDJdkOHbfOz7x4pWntPY5aNm3y
Z+2P1NxiIhmeNcsnbL6mSzleX4dN8r/xvb88kBt9PRyMvs+wff7F5Hivb7av
y8SR+SRHP297SRz5vHKc2P1v5PPJqeJIP9PFkQ6+Ew/xwvlBzLxwpINfxZHO
5om93e3VC8SR1+1CceR1sVgc6fgvs9x7ndW27rj3tL26VBx5u/3b3On9P5Ks
Ox55P0kT8zziyPnwFeLI32Wlmei9/yVZzHjk/PIq8VCv79XiyPnZNeLeXohr
TSfvgSRazHjkfOc6cWtvguvFkfOFG8T1ve7+EUfOt20Ul4t8Oi6OnL+KOfL+
u8WU9143tSxmPPJ+HHPkfM5W8aXediDmbt4bwzbxh977ZMwrvPel7eKz3ttE
zC29F1S6+AXvfT3mWd4LdIc44L0v7RRf6L3AYu7kvZFliMd4fca8zOv0X/Fp
7wUX8w3e+/Au8QCv25hneK+L3eI93ttPzHW897M94g7e+0CmeLT3fhbzEu/9
bK/4hPd+FvO13vvQPvEz3vvEPufxBsSR11/AefwBc6n3uqlgMeORz09j/tt7
foLiyOs15iLv+Yo58n6zXxzZjsW8wXt9xxx5H4w50neW2Hv5PBlzZLsXc+Tt
PubI9xMOiBO85z/mH7x+Yr7X+3uEou9758SMH/Def2J+2/t7xRx5HmNe6P39
ssXdvAcUc7434Zg/9HqNuYn39z0oXuG9f8X8eHS7EHmfLywzfsbbbsX8lfeG
mCO+yes/5s3e+2WOyfYe59Ey48977we54ireemOe4b0/xGy9/5Eb3d86IpY+
vIE8Mds3XieMvxhdL+PSk/d+w/7GP+KG0dftL97/iN2e7WNe9H3Y3V5GjgNi
ru+9/x8S/+m9X8X8iLfimI97718xfxLdjuPm3vtZzGu8/8bcz3t/i9nnbU+O
iCdHn0d8q7f9jHm79/73n/hFb/sTc03v/TDmX7ztecz///elXnLGRzqOfT/K
3Z/Q35dKLvN9KXf/IvLfmc7yY9+fcvc39PepuH/s+1Tu/of+flVyme9Xufsj
+vtTyWW+P+Xuf/B9qMu9103tMvsb7vef3HH9/aTkMt9PcvdX9PeVk8t8n8jd
f9HfP0ou8/0fd/9Ff18oucz3ddz9Gf39nuQy369x92f093GSy3w/xt2/0d+n
SS7z/RZ3f0d/Hya5zPdR3P0f/f2V5DLfH3H3f/T3TZLLfP/D3R/S3xdJLvP9
DXf/SH/fI7nM9y/c/SX9fY3kMt+fcPef9Pctkst8/8Hdn9Lfl0gu8/0Fd/9K
f98hucz3D9z9Lf19heQy3x9w97/09w2Sy3z+7+6P6e8LJJf5/N7dP9Of9yeX
+fzd3V/Tn9cnl/n83N1/05+3J5f5/Nvdn9OflyeX+fza3b/Tn3cnl/k82t2/
4/wL+4PuuPv5s7v/p78/nlzm82N3f1B/3pxc5vNfd/9Qf16cXObzW3d/0Xs4
bWJ2P3919x/157XJZT4/dfcn9eetyWU+73T3L/Xno8llPp909y/155nJZT5f
dPc39eeRyWU+H3T3P/XnicllPt9z90f5fC6y3TxRZn/T/XzOHdef5yWX+TzN
3V/l8zBvWifL7o+6n4e54/rzs+Qyn1+5+7P6867kMp83ufu3fB7E68jdn3U/
D3LH9ffvt8j+6/LocTGW9yflZOfzncVl9mf1+bSZZcbdz0fc/V/9eUpymc9H
3P1hfb4uucznI+7+sT6fl1zm8xF3f1mf70su8/mIu/+szwcml/l8xN2f1ucL
k8t8PuLuX+vzicllPh9x97f15ynJzvUKfjk/95E3Tz7feEn+/vr8nN85H+d3
zr/5nfNtfuf8ml/Op7E+vT/ql/NnWJ8f8xt9/ssv57sir6tEq89/+Y0+v+V3
zmf5nfNXfud8ld/o81F+5/yT3znf5HfOL/md80l+5/yR3zlf5HfOD/md80F+
5/yP3znf43fO7/id8zl+5/yN3zlf4zf6fIxfzr9E3rcrOttnv3P+xe+cb/E7
51f8zvkUv3P+xO+cL/E750P8zvkPv3O+w++c3/A75zP8cv5CXk/q/IRfzkdg
zjdwflyff/A75xf8cr6gWfR51ucPQq31+2GotT7eD7XWx/eh1vp4PtRaH7+H
Wuvj9VBrfXweas3xOJ3q4+9Qa0yPmM8f4uY+ef8v3YNmv7fdrG3pM/K+mmg5
3ou8TyaJa3vbjViP33vLTbAcv13vbYASxZHnJcFyvHbu7U8/Xvhegr37xqmp
DyzaYCp7z3uCpdcrvec3wXL8dY/3Okmw9Mv35we+u7X/nWs2m4VelzUtx18r
vMdfS3yD974Qbzne+sF736lhOZ66yntd17AcL03zblfdcjx0sfdCr2Y53vnC
e6KqWY5nIu/LVS3HK2O8eVexHI+U9/6OVSzHG8O857Oy5XjihLeeOMvxwove
+12c5Xggz3v+Kln29/t53VW07M/z+ec7y+bvfsMf+z7rHe+2y/pifMDs9d7X
Klr2509v+eNYtTkVbI95tyQ8f37/mnH2v9lfp3++/xi3dGir3Ov2m0e821Ww
7H9H9lMrWN4ftnqvo/KW/e1I9+Ut7xcdvOepvGX/OrKfXM7y/rHK226Us+wH
RW5XzvJ+wvf1ml8784rLex0wn024uVrDvedk/9p6nfgs+9eR4waf5f2H7999
dvybY49mHjAe3yqR/WvvYV3ss9h7mTQ8I/vTkfM6p2V/2Vvs86dkf9jGN3q5
ynk/PrjJ/vrn93e9l8OSInm/8l7uiUWyPxt53Cfl/SuyFT8u+6/e9Lsck/ev
X6Mds785PPo+xP4k45hx9hf5e/P+z/sH+2tYv3/NFDPO/hrW728zxYyzv4b1
+99MMePsr2H9/jhTzDj7a1i/f84UM87+GtbvrzPFjLO/hvX50JnGfT/W+2sz
jft+zP4aZn8q8n2J2P7TuPsvv+GWH2radyc/+8mvYzabDffVqp18zVl5vX4R
PX4aH257blpJ7N8fZn36etSXZP2cf+T6S7m+0XuealvOD+Ix361ZM+y+NPm+
JcdTkePoE/J6xe6/583x0DEv5AJ5/eKXA4mFXY/E/j1Ujkfui+4n6OOV+c73
ydKd73PtFp+M7md18P5H7PXN/rX+e+RLH5zfYPvI/m1vr9Mk2V6yPWT/dZ03
nwT5/PWE97zEy+efkddJvGV/M3KcUMOyvxl5HVe37G9GjnuqW/Y3I11Vs+xv
Ro6rqlr2NyOPs6plfzNy3FjFsr8Z2a+pbNnfjPxdKlv2NyPHvXGW/c3I37GS
ZX8z8j5WybK/yf4j+5uR5+WM7N9FXsfFsn8XeX89Lft3S6anfX310iLzRVpq
9unz+3fezX48Lu+HkeOOfHn/Y3vH34f1688TZzqfv8x0Pm+Z6Xy+MtP5PGWm
8/nJTOfzkpnO5yMzpXd6o2euX6WvHd79kizHP5jz81z/yfnyj7wnLLa/hTnf
zv4Q56eHec9PTdlfwpzfZvvH+SYvk2ZnZf8csz3l+570Oy76vLK/jN1/H5Xz
Gd3ZLkb3p/GWauu2NaoY+/evOH+RGN0PYv8aHxzrS8j4hO8L7ZSe+ftzvpHv
h2Gur8HsP/F6wRz/cH/Oh/J6Z/z+217oOXBnRZvx+/gxwxsEzDvzlt1y87sV
7dYTGx87eX7/6p2hDyz9aFsF+2Of9a3PDIt9/4z1JX93XeHSQ7XtZ9HPi1rN
mDrxiXti78fBNuUunD6rth17WW3flFVLzZTJncaOPJ1kn3lz/8IqjZeZ3375
8q3xExMjT2fqStPgr60fjrkjwQ6Jfj7SamWP67+cUyv6/bmNZshPttFzfSrY
m58Zurr3+V4Obl0/NmVBeftiy4Vd1mUHTfkjd3W/s1vs+3DBtK/KT65W3h7c
9OY35V/eb5al5r56f59ydnzBgOrnzuw3L2/v8O2zP/nsl+PfL/jh/SzzYd83
rp1bcM5Me+X4a7sTD5iPRxyf9FSnIjlf2PaXFvUf+jT2fbXPX8r6/ObfY98/
KzdgddW9Pxaaod/2Ptm7Xo65662u5udvjpqPfk0ZUfGGXNPureYTZm7aJd/3
Kjrd4uOE//abt4cFqyYszzMP13n46mHXbTYbuy8aNKdz7N9n6jXu25RTd4TN
nlv3fPxUh9q2z/SSOlcmLTE3N9j+4JxbEu1teyuMefHZ1abdDbteeeOrRFs9
vlWr7+asNmd/Pv1NlY2JdkyP/x2tlr7KVO/b/a/1bRJs33cWv/LvpRvM6mGb
3m65qpY9frDyoSl1N5o3at4X17V1gr0l8/jrlW7YaHJvvjP+50W1bHrKa2Nr
1txsTt5069WVR1Wwta7q+nifO4Nmxf5ttbIzytvRFVafbbzu/Ouh1a5bc5qX
t8/e8kmlu7rvN106Vdv+7PbytsWW93sN6LzfHA/NuHbniHL2yr29s0YE95vF
M4aXNGlS3jZ+utbaBzL3m52v9nls2Bafvf/OB/LnP5dlvl+UPC5naDmbP2HE
H089k2U6nXiz2fQGPttpedPai45nmW7B/m1SNvjs263y+v1QcH5/+q/N//x+
qc+uyqgwZvqbB8z3T+x7PKFXkXmk4pJufZZlm5vqt73568wT5ty3iSfeMAdN
iwc7dtrRscicePnXXeF2B03u07fP/DxQYFoMbnpvxz455o1hLRsfvuuw2XQg
ZWLq47nmhtSJFVb+vc+snpDSqfOIPPNVuOEDQzrsMwMfT1w/5mye6ZhUIS/h
+SR7R+33/2nXdoVpnpXYvn9aoq034qfCuOqrza1/1H7vm6cS7UN7J805m7zG
/Nl9598fPZtg/xsVLErvsN5Mj0toFY5PsJ/ntto8pfEmkzG23/xGj9eyj7ar
c0HWZ5vNqv3rwlWbVrD1p3z4ZmL1/eaVSwKrpwwvb+flfpE4bcJ+U9Ok72m6
tZytsnTBC72vyDLPnexz3RONytle1ed/GfdTlvFP3uw/Ofj88UBwe9qTtxww
3/1xdkjLj0+a3oG0IZeNPmgyXg9lzxp6zJhnd+7ofnOOGTN26M6aK4+Z/jPX
TX7+2xyztf2+/B+zj5hAfNPCGfNyTbVnylco3yJoDuxL+OfrfnlmcpsTVzQd
kWt+294t402bZ6rsaXXt30mTzW3+hNmDj57f/3m4xdyrJ64zPxz/OmnyvjwT
Svv26RP1UsyEwPSu770cNtcW96/7XXCdeXbBxgWn+4TNNdMLHjny7XpzIDu+
RbPz5vvKcT/WOby/xjLz0JnNzQ+Pjv2+xbUpX218+MEk+2Xfwt2/L1pmOr99
8+6EJ2K/N3HH+qf6tMiLme8v11nR8N1mHVeZ5KY9FySUS7LfNCvq2CZ/pel8
7N1V8fcn2gu/bDJ4Vp3V5kD565YV94r9fsPitovvnrIp5vc69f28arnE89uv
b1tO67tOvt9ca8Crt72xf4NJWf/quhG7Y7+H8FfVQWvLf5Ngu88e0KRq2w3m
nfYN53SLi/1+wWcTV2XeOraWTV07ZfaBHzea6veuv755i1q22tz8BzpM2GSu
Ovlkv2Z31LKnNredc9Mbm8ypUY3WN5pW08aPr3tju0lbTPzHddp9MLCmvWRK
tZFTg1tMjcDC5O8Pxdv4S5LufXDCVlOx6b8fHvo13q65YuCMake3mpG9U5+8
6tZ4++rhxiczU7aZ6yZOuHrLf7Hfq2rWo8W4zHdq2IlX3Tvpxu+3m5Y1H392
W8vzjn6+OnxIu1sXbatuz33eJOvRJenmlqRNr733Xuz68ve/+e51e2V1mx94
a9jErTvMyC8PfvHmjtjvVW3MbHX6q9eq2dmXNhneKGenqf/wL/0nXh27frvj
xk69Uted3x98tcKI/WczzOU/fdTpteFV7WPRz0cvb/TZtfddVtXOm96zwgsX
7DLXfBZ69Mvtsd+r6tnkTLXLX65iH3uwx5c9rt1tpmVM/HnEbVVsw4sPXzPh
q91m8Z6mne5ZX9nuqHNq88oH9piGoZpj8z+tbM+s7zK46697zPs5RY3GNKhs
v9owodGXAzJNh2kPt7spL87umH302T/XZ5qXDhb3feH1OPvnoCVdB7y/17QZ
WyNl6F1xdlLKhJkLDuw1Z6tNu7nZ+kr2xmPTW13w8z7z38IF4XUTKtn7px7Y
svDMPrOh8LK6DRpVsoOf3xt+7cmAqf/v7lUjT1S0T5jTtV8bFzCtu9bbeaRL
BVvY+coxcf2C5uHfDle4qHNFG/q94Nfr6wRNfsLx36tXrWBPP3Q0vmJK0Pxw
4VP3nZtZ3l7447sv7y0ImjbxbdMPPFreFvWou7hz8/3muXLDXz9UVM6efmvu
otZv7zdfnsuctvnXcnb5iZ+GvvL7ftMj/+qs5+8vZ6vX7X2ib/UsM7DW2NWP
VixnB992/f677soyFw5+c3//KT67/vj1yzI+zzK7P+j5/MNdffZ0l0N7F23I
MmZNwuIGe8+ZpsPa37PwogNm1CrfzJcvOmumNTnYKKttyDQd+tfXdy4sMQ2a
D2j44nMh89aKSuFnfj1jVmX+/NTcNSHz7Zl0//7WZ8zRXpuXNj8WMn8mvFWh
513FZt4Dd15xxf2x6/Wyb+sTTDqRbfb1n2o+nHNaPr+74eq7Ggb+OWUa7c19
c+f6bLPxp8c33zsodn3db51rtV84vtC8V+HlK1vXzzH/++vmJ6979rjJ+OPU
wBGDckzz6OcY9Z5/MZBxda45U/+Woyt9BSbj7sO/vnFRrjnB51yrjrSutjDX
9Lrsh5eX5Bw2bQ6/dkWwS64Jt/7fhlZpR2R/84Z7uhxJHHvUNPvg0jsGtcw1
b6/pM2DYg/nmklkfndk1Mte8/2GtW399LcfseKbz2U/+zTWr1v64fG/PXNn/
HHVDs263dQ+b3R+3aPhv7dj1Tn8Mfr7aw6/kmbuG+KcUL8oy7dscvW7dH3nm
ndFP1Gvs/8vUaPv37QcO553ff+m09M3lK03tn1O7H8rKM3Pyap+7PnGrmfjq
pZN7dAibFls7hG5sv9282jLt7pfuCpuX7eX3jtwflONT+f2ipPuzbvwqdv3J
dx27mY71lsr1J9sfX7/52MDY7wnWva/xhYkbl5lnnmuZczgpdr3JZymH7klp
kGQvzsg5kffsSrM5e99Vd1yYaFePLHrlofLrzKOfffvl1Zcl2ktv3b7YHlxr
hp/ocFm96bHrS7jeJO2K+KSmI9ebvnO3jF68MXb9yFXTGnSel1HTNuvweMKz
HbeY4Q91q1a7Zk07eEzT4JFntpqxdcL3vd+4pu129lSL3DZbzeP1RgTv7B5v
J1W6dez417eZVzI2DXx0SLydN764Y177bWZSh9cOdPokdn0J15usu2lp04fM
dnPV8Y4vHcisLtebtI1ef/Lza7ecC7RLN3M/PFpz4TWx60+4HuXprtmbgg/t
MK8/s+OddSNi16NwfcrDl71dtPmZnWba7PETM7ZVletTuF7l1uX9zl7+doYZ
+1+Tbf2vjl2vcm30+pXR73827Lav/zU/X3Tt5SUjqkS3P7vN7Oj1LKMaNqjz
zh+7zMyJv1b6/vzx9OrWoyq/duUec9ecau+/V7mKnfl0+y1DDu82l6+e+r8L
W1e2H1+XtbSOyTQXLFo7oHfvyvbrXuVWd66RaRbWPLqq+5dxNrTqp5L2j+w1
k8aenlYuNc7OfOr9LYea7jU7yjfP6HO4UvT4bp8Z0DX+xI2V4uz1Wx8dX6Pd
PnPvuIc239s2dj1M8lN77vylRyXb6ZMjd2e0DJhXBixLuGhG7PqYDen7Wt1x
/vj5+qkbxv+4JmA+mZA05bPU2PUyj7/Q949RJ8+YlasLH+vzc8gsaV/u5quv
KDEZ1X6ymdPOv5/MHnfTiXeKTX79Fq+0a5ltRsyd03fH0mJTx26Oe6pBtnl3
yKYXW+45Jfv/XL+SubZo1MYvss33H6yYkvv0CbPqk8YvdH0ydj1Kr/yLxy14
N8ecsjfPf2ricTk++Pb7R47fXXTc9Ou37dr+HXPM11ndmt79ROx6lOf++nfn
sKx8M+69tAu7Ph67PuX4NT1vPto8z+zPq5nx9IKwfP5ut/zZrGjgIbN0yf2/
1irMletTTtW7a/3MVbHrU5a3/aXiiLl5Zvasci22Hc0213z1Qd3cIXnmkhpP
vNhjQaZZlfDjPXuqxa5HeWn/R+l1A7HrHct13mnefj7277Pe1Ov7loPm5Zh1
v6y8YMnc2PUc9Ta2bXJl6yRbruDydl3LrzSLH7//1io3Hja33z8r+GlWrmn7
zl0P/VZ80Nz/9b6ctU/mmcs6ffHw79t+M9PSW3X4e1DYfNK/eavw9Nr2pXH/
fHxz/mIzt9KCX+49dX5/bd6O4M0t/zZ1M5ekXtI5yTZMLDnw0s8rzF9/Xn9J
uEOi3RcI515Tea3JSQxemHn8sFlw5+wh89bmmq/Xx09+cVSO6dhsRsvlXfPM
/BovzYlrvNlsGNfmn5z0PFPSoP5VL6YEzOw6LS7rGc4zNb7/23/9ryNNlcLT
7x59KWy6rSkq2f5XbdvjngEJdzZfbObd2v/rSyvXtnMK69/Yrmipufy6B4c+
P2SzGbv/muQa2/NMo+/jvnh53nbz3EtHZkxaGvs+wj2PTkv2F+SZzq/m1Ko1
8HdzaPvuJoEXwuaF6Uu3zdl5/nguffl/Y0cvMX/tDFa+6Pok+8ldo+57sely
E/T1e+TlPYdM8ciXL6k2INd0vO3+/p2mHDT3TLr3wy3hXPNZm4O3VRq014yZ
eN3XdUflmUG1xob2LE0zo65NKLcvHPs8r9r+g60HDQ6bT+Pb7Ozcv7Yt2Nni
0vHz/jZnb2xzZuCcJDv2QNcbavZYbi4Y8/feYYcSbfO1vW/J7L7CZAXaF3QY
l2SrDs0evmPncrOo7Qftb01NtHGrR9+8+87VJj7hl/8uP5xgv76p5fNv/bPG
DL/ITLt7RKK9vfEfM3yXrTFPFzx3tu64BLvx2Mo1z81dZ6b+77f3x7yfYD9Y
N+qGXgs3mOZv5J0o6J5gX7+z+9QqP/5jPpjU9oVBVyfY3+Z/MezObzaaRduu
PjnlUC07+H+HR9w0a5OpOfD6K09+VMv+VPV0es/Om03+558cOrsq3rZpVjVw
7eYt5rlBLXPWJ8Xbn5Ofrt5m91ZzumB42+QnathXXym5/eLwNjOkwlPfb0+t
bked+2R3+5LtZu6PUx5sV6G6HTdyZp3+iTvMpIe6f/LXQ9Xsg0+N+enyxjvN
wAZb2iXNqWpz8lJua906w7xcflzBVSVVbKVm72WN7/6vmdT7moXBzlXsuFVJ
XcKDdpnbbh88ofl3le3Up2t0umbcbnPvt51HDC6Js+tGfNKk4qw9pujM488+
3i3ONr307IDgskyz6YULm100t5L9IvP727Zl7jV9nxv/0Z+zy1szZsem0Cv7
zdKFlZO6di1vr2p17rEBi/abjq9uGz7tTDlboX3FuQfP7Tfrmt7T68FZ5ew3
C45l/+rPMsfit/W98sFy9ou6a37YPC7L1HtnVq1ORT570TtxTW/YnGU2x497
KG6az3bc2Hnxs3UOmJFND09f+dQZ88RXH0850y9kjjUc+GPHwtOm5OI/Dh/I
Dpmf1527ZfWbp0yXtzq3/qJ/tjl3x+jvm714ygy8vVfKtpxsM3nQ8UDX2UXm
p/rnlo2/+qBZfcfiQVtOnzy/33TrwIv6HzRVL3777urNT5qjbeyrbWccNEd8
ibvTGxw3Tf6JWzImPsdc89veWavuOmbq3/fIinqrcswtm+f0nJf9n1n4mqn4
Rb1ck19n1kOVP84z9Ueend13Vq75dnrTQ0NW/Gf+eyFzYvZXuab5ffHHHnoq
zwSyd6/p0yTP/D7k+kZ1m1S0rYYv3LTs5qDp/+COqoe6hszOnnWvfOOSPPN2
1SOZ2Wt3mS71Uk8WfZ1nCh8cPyqv+25z8JvJx36/MGwW7Xq4/fY/atv/qr3T
Mv6mpWbH7Esn7Vpz3ov218gvXCLn1yc99vPRBcV/mf8ajL2mSrPz71fP/u6b
ODhNPi8YPmnxia5rD5qcUbdt6jqgwNwwYXqR/2yO2fTBe9PK/3jANJ+R/e7K
GbHz/0PfaHZhvyN5Zsz4Vp27NPrRNF+aPHZ1fp55b/G0w5f/m2Fm10g9/f3V
YbP633tHrH+2ts2Y/stI32N/mat6ZSV+tzzJdmw/75Le1dLMpx+bTwO/J9p5
1R+477NrV5qjN87qeO2fCfavR0Z8On3pWvN1RqeqLRvWtPcGvk97ocMWk/fg
k/Meez7e7k5YWGl/t63mguJ/B5/5o4bdcHrdrbv6bjNtuv/t+6BqDXtswicH
jryy3eQ2eXnfgJ7V7ZuNy997+fvp5q0KoeH9fqhm2/V59Y2kyTvMh8G0Kx84
V9W+1n/lgvd+3WmqzxndLa5rVdvlgoZP370uw/g6vVnlpe+q2PdP9fvjsqx/
TblhbR4dcqayrXrhycFHz+wyA3/Y1unKLpXtqembPt1Wb49pF/dik9DsOLup
epdOA27KNLO7Vr8tcK6SXfDY85sf67zXTC03s1t690r20MWj1tz/wj4z+qL2
5576X4lJe6Bz+euvCJlGL01eveKnYpPeZ/PUO2aFTL++82rMaH3atHit4u0/
Nsk2NYJZ7Z/JOW5a1Dv1yf+2HjRfvfru4Mpb8s2Igd1XPxXKif0+5po+C3t9
+IcZtzqrUnr989u3brn9hw5dLue7r6y5+MSATcvlfPYXPScf3NFqjcnI6vbl
K08cMlmTCpZVeiN2fjnj+fuunPJernnIl52zMXB+Hs9uStpxLtc0bNC1yolG
2bJ9L5ncd+Lo9zLNiXd/K5jyQZ7567ryG1/ttke+P9fhpt8uqvD6DrOk67pm
190QNulXVpk0Z9dOM/LB5s3eax42y4aMKHh0dG07uPpbr/dN+dP8kNL29nsz
k+zVi6ZOTf3qb7P0wAVbXt+SaKtuG/bY7KUrTOf4KpVnbE+wC2Y/Pm9Y27Wm
3tr2oVoP1rQzRrVe80jVLebqtj23TZ4Yb7c2CmYOSNpqZmy56J+fD9SwSXu+
fr7rpdvM3df1qJF6Uw37yC9/Trn82u2m6KNn9v/v3eq2ademf/e7M92ktPjq
6zrbq9mh1/Wf90enHeabB7e3rtS4mu3x/MWX3/r0TvPRteXGz3qzqv39rt+3
DDi/P/v3Sy+kbt5SxdbveqRy0uR/zfge393T4+oqNjBgakHu+f3VWz+asKTd
sMp2UN/4nH6bd5un1nWt32xbnH1q8vh3bzq8xxSWO315/aZxtsWkIw/Ur7bX
PDr3tO/2UZXswV/vya3dfJ9Jim906YWvlZjHZq84PaNcyFwd9+64gmpnjGlW
1/70Xsik/zb5xd+ST5ueJ9rPrx2XbTqUX/HCe/cXmjrvvtCj+7yD5qrMVU9+
2OqoeXDZVe3OrMsx+eOH1Bt+OGhur10cfKvP+fet7nW/CnybYJd0mVG/343r
TIcqbc+OPh5vp3x75tvrPt5iXu1Sa1NjE2+7HV019okJW03TO+Y9+tPHNWzB
i3+98Ozsbebb44c7jNtd3RbNuOOya+ZvNw+ULN3VpVl123BJYOLUVelm9PMX
Tu36VjX76Jsnbpmye4f5omPHcQ23VLVHGky7b8Sxnab+vP77P7yqqr1g6jvT
j8X/a+7/6Ynuz79VxX5725bCP5vuMib+p03fb65sU+Zse/ePNrvN9cvnxy1r
fN4vfT1416N7TOjet3akDI+zO7qs7THjzUyz46Grjn2TXslWnnXqj6lf7TWV
hn9X8kHzSvaGDzq1GDZ/n8keOydol50xl/2v947G94RM24P3DL2tS7F5sPjk
Z9NXhcy7Lc5922XXKVPtuW0NT/mzzSPb/1h19TvHTe5FT7WaceSgmdjv2JyC
/uePh6uUu+LsuRwzaVS7TuuC50z1zY8H/ph0wFzf4viRxdn7zSNvPPtvVsc8
03597uGnj+0w6yePHnbx73nS69P/JL064svF5tVGw8fVGlHBJiwbXfnOFeeP
B/rUa9Ni9DlTY0jx2LVLDsj1xze9vLVCRvxyc2f0+uP3vmv38c1VN8vnp+1O
XHfNV6kBuR55fu8zu35764Bcf7zgwh1xR/NyzdKnH35yXt1TZkyT0V90HZ1t
4heOPzpuzjFjWw5uMKRxjvwewqqHx6Svbbleru+ufH+f77vtyZPPy0c0nv30
vTcvNv7o5z3D6w7teGnhPrN036F2e146vz+1sffCpCvXm4zkQYt21Dhlnuvw
6etvVD1orvt41qmbU46ZUO6YCr3m5piR236c0XrgepPXa8e4A+eXz+fjDS6Y
k/lk+C9T58nlNb95Mckeq3FT1+q3LjONR7TeUPm5RPvdZw9nbBod+73a7T0X
NLqo0Sr5fdPU+e/Wmlpugynf8I4VZxLO7799tOb/ujrTcCjb949jGPsyoyKU
spYtSkTLeRWyhscWiQcVFRVClkqhtBGebGUvRbYQLbLLvmTf93WGlCWy9pv/
cUxzH8f/pRfzwsx9Xfd1nef3/Hwc+7kbQO/uJ32PnzyoIhc/dPFzLY1HKqTv
Hala1QCaIrGKShe4UXJzgdVztiYar1UYV8W2ZloPeh3mV9Jvc6HS+jjzHbXN
kPJcsZGjiRNZSV1syqtsgYIE0dH3OzhRZZKUq3tDK42XyWjb+e9YWRv4U3mW
K/tD6A43YrzNc+LhJhUDGA9TMfRS1q8FjFf5uNsCd5SyPv7yFOXKTn6jp6yP
v7zD2czcLa+1ewEIBM+f2cxIK/WAZMXNPrhdKW9fgGdGbLXbmFpe9MNlndE3
ey3x6BKO3cH20wCsqCcIF2UwoSypV4knhgeBw1QvxpGBCQk2GesW3RqCpHhj
hZuyOBQrVmex6jcMeUnJM+7rDGjo5X97Q9KGQY2v8sJpPwa06+g/uDLuEVD7
hIv3NWBAET6NZvUqIyBbv+x0rIMe+Rk7m1a+GAG2oDWHo0n0qCV3iWN35Qjk
bs5a3t9Dj5YcZJ/dlhgFXcXnql6LdJTfb6B62WAUvCTY90160qFLnCyi2Vmj
sK5bx3X0JB16JqFwh6NzFDI6+BMmQv5AkHzDQ5VDlHPL0k8RPqk/8C20kmQz
OAb6cfsTF79tgFZ6lH7uv+MwK8Iz+NplHSKbyjdrBsehZOAkw/Pny1BHHN2t
SjcJopm3npezr8G5swnuYTYTMEDNX6jLZDvsk5kEdnVjgvenX6Di+1NaJXyS
mttcAbLEgPKFpgnIo+YvYpNEeePMpsBeBkpD/sxCmHSvdKUcxmvi7w/yGvCe
Aq1huYWxeBI8v30+Re4LiTZHUbAkwC2gjfGLCp3vbGWlvI//9oeZ2G7oWWzH
8uXFK/OZuHmM9zNc4m1sYD8ND/yPxa7f4UWS2mdy4y1KoKeh3768i4joMnYX
7H1TBiYit2KmmnhQ+hVW50jjOsiS9pth1eJCLW5LMw28LfA2Zlx0MpQTvaX/
Z6BSsBUSmfFRUT0cSGe6W35odxswdckOqEpzoIj+RHymYju8/r529fxNdpR9
rMfYRKsDCjoqBI0a2dBEkbODolUnmIVHPePZzYYWq3SD7a53QWOBhpqrGyv6
rSbUFf6oG9al0prkq1nQY4ehD1ZJPfBrQZ2RW4gFWb23Pmb+uRc8/FObjnow
o1fsBQZX+vrgEdsfpV/1eHRcpD5o6Xc/pNb2xn8XxaMPsgaNk1sHwZF9y84J
byYktMM3ymn7EAgHukhkNjMig3jJe0VvhqBJevc1t1Qccr92bu660DDsS9Pc
qHXdpM2DaFzqb867uAFpqUdxhffHwcArAle2ugb3GXzPcbJNgGryCJ+U/yoI
01UH+D2cAF1Ox6vlh36Bbq2Xb6byFJTHVleKis+B3b2Hcp56lPuBDxfLw/fD
YPcxM26+D3sfHGipUniZUEjjkYew+Po0l1bA1+SxoQQlItp02P5vmuBXGKLy
uksEytZ9BWug73jBrJoiAX34PqPH71sDeVL8W44zcKPzjcsrlsRmkCm0DDJs
2YS1NI2LWfR/eXjfQV866uDhFhJ4Wjpmv9j5HZh3p3BpjmE8rbvFasKHzpDB
1OBk4XLcJHBPVubrOGL13Om86JXBX2Rw5SN3bRIHIZTaX/x7X1D+bM783Xka
sgOrk7o138Jo6fp/nq7TsOKFf9mdUAKe/h/lrS9OA9+gbIR9OMaj58jRLJZa
xPjxMTM1TgfNMB56IqsaT/c/GB/c/zzd45Szs7T6c/Kl747nZqZo+YaSUb5P
H8n1tPrw5aHV196Ow4B3cWt5Okqm8efvuFsaiJQUAFsji65qPy+q9vp1d83j
M2TZax+Z38KL4pR3FAu+LKbx4XdGOsvoiZUA8Z/eri09OHTT12VKaXkIGB8+
mrm4ZQl2JvHX3/GchEvHQni8+OfhwHWtaMGoKUivrxfAL4xCUJ/aQwlVyvd1
6VaKjlsL6DwZuH+p7u/3+w16j3XdRS1keOn8LrwmvRX2184+PlJFBvrawzIC
jJ3wbsY90DwPy2NJarvnOH8iA0P5svelgVBwH/t98zTl99lqTY7fbC2GW9Tv
+29+RtyPuPLsOjYfwvP7An8o5e8mHp1tJFUiEnQ+ZZDFjvGYKq4dcHxzoRzM
vHTIsSzcaEkmQLkL/w2UiCLipTcZkUeFu0Pv7BAM1SVHHxjaBM5rit7nb45R
cy4zcIrrBSnlOgkOiu3p7y6bhOZG6424SYznVmBa12a3/Jcv1w+H1E8llgSS
wcqR8fyfogo4YZQgxD+O1fused4aLpPI0FmDc/ixgUOnDIN2RFkMU/Z/sgB6
TVkvsccl/W6UgvD7y6v8MbxocNFWbWikGARTPafKXHhR9DWb0LdhJSDWj9fc
+YSIbj+buWrSUgrruAzHyQQiKiF2JXNeKQcOrQ93kxeIKPpiw6l7R8sgoENG
9/oXIhK9nP7lDXM5jKatFvN2YXz/59ouy4KUz5+xc45451UO9qYGW8v9Ccj6
xQUZe+5KmDwsb6U/SUCDM1n/8tlWwu6ydJGaGgJSMvoBrT2VUMrEZd40gvHy
92Tpvd8bSqDW26sgwcSsw84V6892SoYe9pziQdOvfhtu660FOlkr++sfeFC4
smJ4aX0d6JxlZ3wrxYNitZ3+uRNXD6XvBwRfUc53x+4dO3BkfwPcCQoT3B5F
OU+ysgYXRTYCo82OoDFVyud1HoWcOdEIL7W8E4XpMF48syC553gkNy3fpObJ
7bTvPcZfr9V5mE/y4EJStfEvF1ubwS6/GKcpwIUs7XYzXTNtgbmMqXfNqxg/
/cVyA3GxmBNV5NspxfS0UNZJbWvMeU600PiZvMe6FX6WzMhKamD9XbPW15Ij
rJyo3iRd9N1IKwzdDCiqzuJA/vlOtioX2wB/gKzWHYbxy9Ole/bqm3GghF3f
i0tm22BCUOyx0wY7wgdJ9h7xaAfije42i1GMP57259BBoWR25DfefTlxsx2m
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
     "], {
      {GrayLevel[0.8], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxMvWW81lXzvn194+rYhF2oKKAoJipiAGKAWKigoCLYgqBiAqJiByKCKCh2
YGM3dnd3d3fXf47feT6f+3kx97lXzMxaa4659oYbYblR4waPTQuFwoPLFwpZ
6OvNQoHxRmGbh9XC6mGbhlXCqmFbh7UP6xDWP6zstY0L8iXOoLC2sHZhfTyX
h20Z1vLagLBGWKQsjApbMaxL2MiwFTzePayzx5s5P2fawufCf6BjEHeiz85Z
+jpnMWyTsJLPunPYUmFLhw0NWyJsybBtwzqGLRQ2JGxxr23nuYXDdgtbLiye
q9DPsYm7a9iyXhsetkxYp7Ct/Aa81zZ+M3KMcAzutpPzc6ZhPhf+uzgGcQc7
/yJhbzR1xwlhh4etH9Y7bHRYj7DVwvYPW9Xj/cJW8XjfsO4e7+H37hp2UNja
YT3D9vRct7ADw9by2riwNT1+PmxG2Myw58LO8nhs2BreN8ZnWT3sACtrz4ZN
t8+W8TD9onB9w/ZyzpXC9glb2Wc92m9NDY8qiCdqe2jYemG9wia55qwd5jne
5fiCOIaXvR2buMcVxBNrxxbEMYwf7DdYJ2y8dd2wQ6zkm+z8nOkYnwv/KY5B
3O1dq0XDdrAuFrajFbamua7sPbcgbqj5GQUxx9opBfUSHJ1q3drvt4PjneY5
+JpVEN/DXBv4hq+rXQPqc3JBfUjcM51/B9eDeENcyyH2P9sxiHttQRzAxenO
Sd+c45zc4eKCGKKecwrqDfrmooKYY+08z9EH51t3D7vUdaL+Ux2bt5hXEN8w
dUVBTMP4bL8ZOa7yOve8xPmJdZnjwf7lVvyvdAziPhx2kt/mobATPX4w7ASP
32yq524Lu7kgzui/ewviAI5uKohL1q7zO9FbdxfEDSxf7zlYu6sgplm7o6DP
r0nOCbMDnBsd6DMNdP1ucf4jwm4v6Gz43+kYxL3BeWB5vhWWb7Ry1kcL4gy+
7iuIY/rjEb8Ha/d7jn56wMoZHy+IP1h4piCeYPPpgvhm/FRBTDO+x2/Aey3w
m5HvhYJ4hbVrCuIUzp5wbFh40kqsx3xecs8tiB2+b6yVFAq/hv4WtkZ8/XPo
L2GvF8QcrH1QEBOw8FpBjLL2ovPTQy9Z4fpN57gg7GXP0a/vFcQZzL5TEN8X
O98drsPPrg3jN5yfWG853oVhb1vxf9cxiPurY8DIK84J7+87J3f4siDOYOqj
gnoDrr8oqFdZ+9hz9NAnVnrl64L4gItXHZu3eKspxn8M+64gpuH9Q78ZOX4q
aA93+8r5ifWN48HXt1b8v3cMmP3U+flMaiWqPW/fSPS9hO8t/xbEGf33T0H8
Mf67IEbvd415G3rrdyt8/Wc/+vgPz9GjxUS8wtTiid6dup0eP7RsFzY4LE3E
PT1RSBSDz4YkkbKWJVqHwTyREreZ6Ozc50/nhPFSopzw2y4RW3BUTdQn9E1b
ojdgrZZoju+T9UTKu3RIxAG1+suxeYtFEzEKUwsnYh3Wyoly0n+VREq+9ony
E6tjonj0wUKJFP9FEsUg7meuFX35uRW2FkuUk3dcPhFb1LZ7otrDznKJ+GNt
qUQ9837Y0omUXlwhUQ5iL5NoDtZWSsQoTHVNxDqsbZyoTtRho0S1Ydw5UX5i
rZgoHn3QJZHi3y1RDOL2cQxq2ClRTnpo5UQ5uUPPRGzB0dtN9USPmFs7EX+s
rZZonp5YPZHS9+sm4oBaLZsoNm+xQSJG4Wv9RHzD+yqJ3oxe2TDROndbJ1F+
Yq2XKB590CuR4t87UQzi7hRfL5novYeGLeHxkETcMx6QqN9gdotEnDHePBF/
jDdLxCjjvn4nemibRCzCTj/PwfjWidhibatErLd3PvqMz7bTose2db8NSsQ9
+wb6LHwebGlt87nxg5tNnAeu+1vhelMrZx2WiC042j4Rx/THzn4P1nbwHPzu
aOVddjEH1GpkIi7haHezxXhEItYZb+s3oG+2s9J/ayb6HsDn92DPcY5dHZue
2M1KrOE+L7n5njCyoF8PXWjlZ6ZRPgssH5CIM76/HZaIAzgak4hF1vZO1D+w
vI+Vvhzn8/F9cl/Pwd0hiXiFr4MTcQ93pySqE/U82bVhPNb5iXWg49ETB1nx
H+8YxD3VMWDknaZ6aP+wQ52TOxydiCfqfEQipumVyYn4Y+1Iz9EfE6x8Bhxr
JmBhdKL4vMWJiViHr+MT8Q3vh/vNyHGS17nbMc5PrCmORx8cZ8X/BMcg7kTn
5zPpkrC9/PYXhe0RtmfYWYk4o/+mJ+KP8ZmJGGV8mt+G3jrdCl8z7EcfT/Uc
rM1OxCtM/RJ2V9jdzt/NtZ+ViHt6YqZj8NlwtpW1c7wOg+daiXuxz068M5wT
luc4J/zeFb+I36YljuYm6hP6ZquWmLs07ALPwe+FVt7lCtefWk1zbN7imkSM
wtRViViHtfOck/4730q+d5uKc3nYlY5HH8yz4n+1YxB3kmvFZ/9RVti61jnh
9z7XG15uTcQcrM1P1Ccwe6OV/rvJClO3eS9c3Ow5WL7Ducl5TyLOYPaGRH1C
3Nvtx747vXeya4se7Rofbf97HQNOX3Bdqfktzsm57/c9YPYBKz3xWCLmYO1B
z9EHD1np9YetfAY87r0wuMA5eaMnE/FBDZ9NxDrMPp+IOc70hP3Y95T3wv7T
VnriGSv+zzkG/i8lYhQ2v3INePsv/XaM30zEGXx9nIgbav5GIi5Ze9kx6JtX
rLA8uCXW3w571XOw9mEinuDo/UR8wex1iRjhM/J6K/V7y/np+x0j5g4tfR68
35Tve2EfOAZxX3MeWH7dylk/ck7u8GmifoDNr31vWPvMc5zlcytn+cLKu3zj
vTD4XSImYPnnRGzB1E+JuGT8id+MfC8m4oh3/zURczD7reMR64dErMPsj1Zi
fe88rP2eiFF42TW+3y8XtnzYLmHLevxfIs4eCauk4gCO/k3EImt/OAZ9+acV
rpPY/2gilv/yHIyXUnEGX3kq/uB0mVR15Y2XTlUPxvymJfmJlaaKB+9ZKsW/
mCoGcTuligFrfzsnPVROlZM7tE/FE3WupWKanmiXij/W6qnm6N1GKuXtO6Zi
An7/cWzeYslUHMHj4Pbx+ReMDQ2rpnozciyVap27dUiVn1gLpYpHrwwPn2Et
MfthUzGXiPV1U70jd1on1Vsz7pmqBoy7pWIRvrqm6knGXVL1JOMVU7HImDp/
bL56pGIF7qg9czC+aiqeWFslFUOM+T7Bzzv87L+nle9t3VMxzb6VUp0FNldO
paz9ZmbhD+bIQ990TqX0zQqplLP2SvXWcLdmKu6JsV6q92BtrVRzcL12KuVd
eptjOOqTijl42TgVQ4w3SsUW49VSvQG9uHoq5Xt4M1X9+cxbI9Uc59ggVWx4
39BKrPVTnZfcU/3r1+3DWqli8JnX12ehJ4akqjMcDfS+trBNUzEEp5tZYXNz
K2xu6b3wu4XnOO9WqViHtRHB1KI+R/9U/UzcQfZjX+cOUdeWGN+b3/Ntic1v
g+dvwnZt6Q7EWSxs31RMwMgA5+TcQ30PeN/JSk/vlqre1Hlnz9H3w6z07nAr
bI7wXlj4qKn32TFsZCqO4XqvVJzB1z6p+ONMu9uPfaO8l57Yw0qv7GnFf2/H
wH//VP0AC8e6Brz9MX47xgel6j16cYIZgqkDU/HH2mjHgKMxVtgZn6qf4fcA
z8H1Eal4gqPDUjEEv/3MCJ9hm1ip38HOT6xDHI9eOdSK/+GOQdyxzkOvjLNy
1iOdkztMStUnsDnF94a1ozzHWSZbOcvRVt7lOO+FwRNSMQHL+7b068pTw6YF
R+Ni/EnUc6LfjHz7peKId4dl+oPP4uMdj1gnpWIdZsdEjNEtMX6i87DG9wp+
JuLXNJ82xcu0sMXz+LVNFj+Ths1KxRnf6y40B3B0dioWWTszlS99Od0K1+em
+n4Jy2d5DsbnpuIMvs5LxR+c3uQaUNsbXVfG5zg/sWY7HrzPseJ/vmMQ92bH
oFYznJMeusA5ucO8VDxR54tTMU1PXJmKP9Yu8Ry9e6mVt7/aTMDvTMfmLW5I
xRZMXZeKOfi9yG9Gjvle525XOT+xrnE8euVaK/7XOwZxL3N+eu4ZvzXv+pTr
Rh3uTtV79OJdqZhjfGcqFhnf4rehF2+1wtc99oPl2zwH42ODnZNDHwpbLpj4
JPTTsOUz6Wdh96XiD5bvdQwYX2BlrUt8Zo5vicHDQg9tidOnfXbuc7tz0kMH
xvopoQ+HPeda8t6Ppfr9F36/81m/AWuPe47vIZ839SZPhr2QildYvsOxeYtX
UzEEgy+n4hW+HkmVlx581Eq+552fWC86Hmy+ZMX/Fccg7uWuFZ9tV1hh6zXn
hNkvXWPYed81xu+tVP0GO29b4fQdK2x+4L3EftdzcPpRKo7nuTawBVNvpuoB
4n5oP/Z97L3w+In1atf4avt/7hhwfUTU5cHQf8Lec07O/ZXvAeNfW+njH1Px
RG2/8Ry9/q2Vfv3OCps/eS+1+sI5eaNfUnEM13+k4gy+zorPyaPjTF9GzX+2
H/t+9V564jcrjP9uxX9S+E1sid//UjEOb4tmqgFvv0imt2NcztRvMNsuEzfU
vJSJNdb4QwLEgKMkk8JRNVPfwmyaaQ6WW5l4gqNGJs5g9nUzwuflG1bqV8mU
n1i1TPHoj3omxb+ZKQZxs0x56I+vmjpnMebaMuXkDh0y9QNsLpbp3rDWMdMc
Z1kok3KWhTMp77J4pr0wuGQmJmB52UxswVSnTFwybp/pzcj3byqWePfOmXiF
tSUyxSPW0plYh9llMimxlsqUh7XvzQ6fZytkigE7J8TXA8IGhh0fdT6uJXZW
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
VZXyLutWtRcGe1XFBCxvXBVbMLVRVTwy7lFVTvpmtaqU3G1V1Z/PufWqikes
3lWxDrPLthRnw7D1q8rDGt9v+fmUnxHbVRUD5vpWxTF9MKAq5mCtf1Vs0X+b
WuF3Myv8bm6F2R3CFquKky08R6yBjsfZNwiWFg0dHLal5zjLVlX1AFxvbYXT
baxw3S98+7aJ2UH2w2eTqnqPs27UpjNsH7ZXVUxQ8138WUKdh1bV5/ToTla4
3tkKm8OssDmkqv7BZ0ffj/Gujgcve1bFGfl28xy8715VD9ATI60wPsoKp3tY
8R9hP3z29tnhdN+qegAej3FtqMmRrjPsjK2KP7jbz3vhaH8rHI22wvI476V3
x3gOlg+qqrdh/NCqeIWjflUxwlsfaD/2Hey9MD7eCpuHWPE/zDHg9ADn4azL
t3T+I8Im+B70xLG+H6xNCutTFadHWTnLZCv1P9rKu0x0DHymOAacHl8VlzB+
SlXMwdo+fmPe9zjv3cL+9CW9cYL9YPmkqtiFwZOtxDrR66zxZy/4s0X8maSp
Vf16DeY/9t9Xy98NenZVzMHaBWYCFmZWxSVr06pimd460wqD51T1PRKup3sO
Ts+vijlYm1MVizB1o2tJHea7NoxnOT+xznU8uJ5txf88x/g/lluq1c1hZzkn
/TTXObnDlVVxBlMXVdUb9OIVVbHI2sWeg/FLrNThKvMByzMcm7e4virO4Ova
qviD0wv9ZuS4wevcbZ7zE+tqx4P3a6z4X+cYxL3U+emzp/3WvOuTYWe4DndX
xRn9d1dV/DG+syouGd9S1fvQl7da4foe+8H1bZ6D0wer4gamOtXi+2Dox2HL
1qSfhN1XFZfwe69jwPUCK2v3ex1OH7AS9ymfnfvc7pz000POCb/Pupa892Nh
p1X1ewvP+A1Ye9xzsPyElXd5vipeYfkOx+YtXqmKIRh8qSpe4Wtb/nvxNvXf
oDblejTsOecn1guOB5svWvF/2TGIe5lrxefc5VbYetU5YfYL1xh23nON8Xuz
qn6DnbescPq2FTbf915iv+M5OP2wKo5h/NOq2IKpN6rqAeJ+YD/2feS981xX
9CrX9Sr7f+YYcP23a0kN33VOzv2l7wHjX1np4x+r4onafu05en3Flnr027Dv
qvoaNn/yXmr1uXPyRr9UxTFc/1EVZ/D1V1X8caaf7ce+X72XnvjNCuO/W/H/
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
C5k4e8njc30+xrPtx/hs733edf0y7ItMvL7mHNd57nN8W/o8gSXYfSvszUzs
vu0xXL7jMVy+6/EF3vtGpn56w/fMgus5Eff7pjgjz2dha0XdsrAfmuqBj8M+
ysT0Jx7D8aceX2M/xnMj3qywDzMx+5XvBqNfe0wNilGrPBdnP4f9lIk/9MdM
7H5jH9j91uNH4lw9wy5qictf7A+XP4R9n4nZX70GW3+F/ZmJvz/Cfs/UA795
3z2eY7zAe9nHZx7sPJaJv78d6zafkXyw+Y/X4PVfj2GrlOuecJrwh4tz9W6a
a0zcLNeYPLwHY5hm73+ZuCznigWP1dBKLrZaoc1cvfKfc8Mr6/ic5rOTE3Zr
ufxhrhFaz8UgMRjDMXPs4+8c5+/R5+/Eh116i3z8+Vz+/Bx/7ox6Lx9zy+Vi
brHQRXPx2zG0Qy7OFso1hruFc43hcvFcPrC5SK61PJi8JGr7U1PMdYq5ZXLV
o2fo2mEXt+QL35fx/z+FLRnjC0KXCv0gE3/4LZ2L12VzxaK26+SKRc9wXnLD
b+dc96EPVsg1fjxYWzfsypZ6ccVcazDdJdcYprvmGsPfKqHdc/UGb0NueOkR
umou5tYMXSMXd9xprVw8sY4/fbBaLh/4Xj3XGKbxYwyv+BGLPumW6xwwum6u
e1KDrcO2MmcbhW1o/tANcrHLr73xgd1eucbwtH6uMVxubH9Y651rDWb7eA22
Ng3rb/42CevnHujrfSXP9TXH/b1vn7BLwy4xf5s5Ftxs4zsUfN7e5nWLsM3N
5cCwAWZrW/vA7JZe4/vDII/b+z0Gmbnt7FN3PHLDxfZhg3OxNTRsSK5eGeDc
i3gd/3kt7YfnYjB8FX/uKRi+hu/LYTvmYnMnx+KzbKVcNYPRnb0Gs8M8hqdR
YSNzcbRr2C65GN3NYxgd4TFc7u4xjBwQNiYXoyO9Bh97OC48jQ7b3+fY02vd
XY+9c7G4r8ewuZ/HPezH+Knoj15h17fEOmccnovRMc5BzSeHHZWLp0Nz/V4P
7B8YNi5XTx7kMewe7DFcjvd4Le8dm4v7sb4nLB7muH2dZ1IuVg73GrwfGXZE
Lo4neAy7Ez3uYz/GG3gv/jB6tO8Al8eGHeO7nht2Tq4aTw87MxdnJ4WdmIun
KfaBr+M8hqHjPYbFk+0DXyd4De5PDTsl7IZ436m5mOvkN4aVrbyOP9yfZh+Y
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
ec8s+8sHV5VubcbIYjfCD+RbU9d5hmOriluHvgx347L2iRzlMPZm/hD+9cra
/3he+NuXtddoaFXp1g/+hPAPDf8G4T/VLvuSfkZ/KGtv0bCq4sg/1PnYT3dG
+Dcqax/baVWVsQnYq+jMB+eCNgTXETeK9diK1vlZj12auxId/kakeT3oFnAR
4edU5X8rwt4MGs0+lKD36tovtWykOa+q8OXCf0H476B/Iu3bifzvhftu0LiK
xgHjg/vYlo/0F1UVvgLjJfz3hH92pP0o0RnYD8P9IFE4tjLsudhZP4mwj4Me
oM7xnfkh8r9U0feWbzrziu6MQ/o9/DdW9V3fNvgTHUf4ovkF2A7/DRG/pL/x
V4Vb9Vzh+qrmCr3CP5L75zw/4Pu9e7i3hbtiVd/gWeHftSw/3+JrI7zmecaI
quYfPcuaUyCDuQHf48PDf1FrzUsokznP4xXVs2P4Dw9ZO4X/sHB3KGsOQfkf
eS7CPIQw4m4P/y1VzVe2c/2o063hXl3V3Khb8HdUNS/ZhfdCuMt6/jHL8x7m
PDdH2FKe3/BMu/oZl6uqPMr6PPphUkX1WzR3KWs+cxvvE897Jlf0jDvFM16W
6HuzY/jv4T4q60XMX/Zxu+1dlr8ZafYti8e/OO6DcPcI90Aw31rzqb5uk2eq
+l883/adI24/3mOt9X7nP+L8Q/zZquYB/FN+vucBzAGeinoewLu3tcqh7EZr
5Sd819biBzA2w23bWvWgDnM9V2Oexnf0yPD3aa05FHMq5mA898F+9glR/qqe
bxFGHPmmBR0d/mfCHcf9E57zIW9Q0PmWfVRQq2Z8r6qaO+5V1lyPtmROOL6q
+WJ/15UyauHeV5UuOrCsb/5RLne256/MXUdXNa/t83+YO7SV5oin0J/hDilr
7kjYA5F2jf+bI+Iyb3ywqjnlccFfmSj9lAg/z/nPpf0ifCrzxeAnRtq1PEd8
Itz1Pf+jLY4J99nWen7SImNa5Dsp/FNbaz6K/+/Wml8ig3nppKrmlxe6vkNc
B+afPMtffqZT7UfGGZbJvPjU8n/PTR7mq1cn8pOe+fCZ4V8Q/oermiufHPyj
4a7reS3z3HOclznx+eEfzP/t2yjvZm005yUt8+fHqporn+08w8P9w+65QRu3
0bzlesZcG81x8Y8Jd2pV89eRYCb4K+nTNprLMqdlznxZuNeCJzAfaTf0fBe5
F4W7UbhvRp1fiGe7uqywS8BcG9HV/yebeTblo1sMLv/3Phvs8Y7eQd9dEP7J
Vc3pr3A+8t9J3RPx+NEbLi2rndAjLnM9x7ned7XRvH6Uy2VOPwLsuw1GuU2m
RDkb/d9cH5e5/Q2J2o40/J/95rL+x46OgP8Ty7spaGwb6Um0FeWjN41wOPeb
c885d5t/b70FnYV/x99Ylmx0DuTMdd0ol/fQJkGnl9X/dySam66a1tyZ/xwx
f36hKn1mbPDPM6eyzsD/jvlnN/865v/j/Gu+n/UR3m9Lt+jf9Ogh6CCEjXY4
+gr/qW9nPYV0u7foP5v8r5b/gt6SSNd6sUX/m8aPzvWbdSH0oHYuYym7d1kO
83v+c4ktlTn1aD/vjYnqRx1ereqf3ehDNyfSqS5rkW6EroQOxX/PCUfPerkq
fYl/zVOfR103nut2P8tjjiP8tar0Lv4JflOi56RuL1X1z3rKQId71PL5Py//
m+bfvH9ZT0NHu9TPz7+2d3Od+A/7zKr0KP4F+U5V/4VE17k1kd7VOqV/++JH
/0Jnnew2JHyy07xR1T+g0f3Qj/jfaqeUdDjCZvmfwITzD9YZVemK/G+Xf7u9
VdH/2fi34ZsV/UsQfQv9Dh2Qf27yn1P+e/lWVf/qJQ7djf8g3p+S3kjd0dGm
V6VLP+m6P+V60p/on8fbz39aTwj/bYnqTZ2Jf8Xh1IN/evJfxPer0lHf/L/n
53/H6JHopOiwi5/hQT/rc5aJ/vpc+b82oCzwhR75qv2jE5VNue9V9U/M6cbO
fcYV7v32o5ff73HBP+/4z903Kemx8Pz/bk5Vei//fZtVlf78ntuMtluk81b1
bzh039sThdOe/O+Af5/xPx/kfeix/HlVOif/r0F/RZ9F5/2sqv/afOe077s+
bVw3yhqTKI5w9FLuP0fn5X9n4ID/ti3Wz1/0P9P4Dxb/wEK/Rc9F1+Ydw//Y
eM98UtV/wT532CcOvzOR7r0/unxV/39ELvII38+yv3Ia9HjaAN2f50QW/3rj
Pyn8V4h/pMytytbwhWV86bwZy6G+C/1cxYz07oX2v+k4/onAv2B+97NjJ8AW
gB3gy6r+3QPP/zv4Fwz/0BibyIYyMi07Cv+OwZbCM/BfIv5JhE1lhrF9ncvg
XzPw9PdQuzPcv+B6ekVji7qQ/q1I/1VVdor5DvvN4ZT/g+uAO8/+nP3U5fuq
/q+BXeGeRM/Ps2NjwKYxz21AOLaIb6uyE/EPF/4Hwf8demV0x30b+wv285+I
H6qyj/D/Durwo9thXKJnoJ7021z3Bf+G4F8n/POhS03/gOBufmwo1BG7xzdV
/UeG+oH3GRXhEbsgcyfmYoNC/vsRnrbNA90PvQ/bBrYObCDzq7ozfLFeiP0E
u81PVdlu+M8C9/dzlzr3qPNs3OnPs2I34S7l332XNXe2cxf1P1XZMla2/QNb
BnaMX6uy0XA/OfKqFd3PvlRNec/K2D4QNMn3DXOXK/e4Umbedfm9qnvI67aR
YDPBVoMs7ubmXu6/qrrDeZEth3QV3buNvYc7oKk7PHcZc49xD/5/nej/Bdhx
uDOWe0y5z5h7jX/lfu2qbEncf/53VXf58mwLqrIfcV808pavqO7Yjci7oe1I
yNwgq+dbys+IPYk7GbEpcT8o9x1yX2irRLaktWwfwl6EHWkJ30MLT9usVtGd
p9ifVnfd4blv9DA/x+out43vt8TmhB2Es8yc0fyxqn9q0PfcS8r9pEdYxroV
1QvbFeFjbMviDsnbs6o3fu7YmxHz1U8qeoY5loUcbFeU+YJtaNzL91FWtibu
l5xlGZtaJmHEYYN6KpGfNGnfebi564F87rnkHiruFVwypzzw3EnVksjWtqHb
FLncY4mNjDpwTxu2MeRhW8sksutxpyK2sg6WiZ2wnTGwoTHBncHYybZ0PbGN
YefCxoWtC9saNjdsctxFuLjMzn527HXc+8adb/lENjvuzeP+LsJ3s62PO+N2
5o6aRDx+7vXq5LTY8kjTsLuV02Dnw784nrzYDLkTibu8uKOo5jt2sNvlfHcf
9S4lsg9yvxm2Pu78uignt7f92CB7W+a2Toc98FP2/gVNrOhuH+594v6bou9M
6/V/eRbdoZfIzsj9VNgKuVOIO0iwI2JXxN6IXO5+4t4n7I47V/4L26WiO6Eq
vueKPPVEdknuDuJsPndHDLGNEf8Wedknuavkn5zuRcGeiC0Rm+Xerss03+nD
fT7Y8fBzN9CSvvtlX4cRt9ByuONl8/x/PHetdDCe6IunE/nBFbZO6sA9Ftg1
kYcttG0im+x+rtf+lnl0VWVRB56Zu4qoI/bFA1yHryPvNxWdZ27nez+wjXK2
+SC3B3ZW7mpZXH5/twO2UtJiX+U+Du744H4P7KxHuH0g7uwg/vlE9aNu2HHB
Ebbf5XyfA3bVpRPZcLl7BHnYdrHrDqnKf4ztvYfaj32f7ynfz+UT2Xa5F4L9
Ruw7Yg8IZ4o55855Ys7Ln1jRmfkXed7w35X33UUV3eFA2NEOxw7Mufi7HT/Y
4WMti3P32H2x7WLXxYaLLRdb8Ro+rwqPLZn7IHiPUg9kLjpb7HP95F8pkX2Z
M/5rJrIdc9Z1kW3b7UDdKXeuz0FjR8aGzF0RnOkfa9sycZyXxgbN2WrOtq7i
M93Yo7k7gDPVc/xcPDMysF1zPpazsdjEOZvJ+cWXEpVNufCk4dzhKVWVR1k/
ViRz6YLa9yyXgy2cM97UBTs45WMn/6OiM3Wcp/u9ovNu53KmqKKzu7sUdI4c
P2d4f6nofC9nejnfy/lhzg5j38bPuV/agjO+bR1PHHZv7PycyeQ8JjZ4sIad
v1NN8wnmPL9WdA7094Zs85e6bTkPyBlPzs9BpOH8HOsGnF+lnThPRP05q3R6
VeVSH9JRLufnNog2PLMquz32+GtcN/LQDpxtwr7POb4pPg/FOT5k/1nR+amn
CmoL2oE2wPbP2SrOVbFGwNktzm2tm2hd4SqXcbUx+Vqi8pFDHmRyNmXxGULK
h0cOZ1NWTbTOcVrlv7P3nLsn382Ww55e9r6y15pzB5y/WHzm5TbXDR4/8Zv4
HA1rEMc6PXu0Z3i9grQzvRZB/JbeH866w0aJ1j44U7a5z0eQbotE6xp3WtZY
573Xfur4vtc0CNsm/FdUtU9m00TrJpzr+drPwl7Fzt6Xy1rGHK9v8F6Z5fUN
0nZJtCYy3nnudXj3ROsj7IfsmGidhf3t7CFjLxl7c6CHHNbL+3Ym+p11v8vq
4T1prJvM9foJ6XsmuneUvWqPVCSHfT7sCWJfBXsqrktk/8L2tU5gfO2a7IOX
JrKbYzPHpvVMRbZQ1kaerGi94GJsShXJgvCzVwM7IWsD2Ok/izTbJ1r3uCKR
bXeq7b7YELErtvcZQNakpnudCjxgm6cObW07f7oie+NqVeXFv2bUd42abM0r
17Ru8URF6xasX7CWge2XcrHBY5fFtosug82PZx9n2+1zFdnwrk1koxxk2yR+
7JbY/1iPwpaITRHbIjZA7DFvVP6zt71ekf1p7arKot0ech+wb6qb98GClY2r
koNM7H+vVmT/w3b1WkV2QWyBr1Rkg+TdzDu6VpANnvUG1hpYE7i3qnWBX8L9
oCK96uFE82bmzJ1r0t349x82zrcrsm2g079Tke0TnYl/ZaE3oXPPrEjvfyiR
vsGcn38nMX9l7sp3+7uKvrPMg5gPMQdgPRY56HD8JwsdbJJ1u1kOZ86LHPQm
9IbvK5pToKe+W5Hej65BucyRmcMyx2Xe+2ginYG5PXd6E868lzk/4czl16/p
znf0B+aMX1Q0V0X3fa8infjnkPOT5zfPJJrDMW9BD6Dd0H2eS/RczPGY535e
0XyZeeWXFc1JmTd9VdE8ivkPcpjvcSc8+gnzc95hCyv/vecWGOe8p/lu7eRv
Jt9XvoMnVeXnO/tConnG3Z4X4GeesE6ivDv7Gz6vornMGVV9O/lusv7AmgXr
J6xfsG7SEng7tapv3q7+fs63HL5dvzqc7xJpdvO363fLZB2YZ+H9yfec73o7
f6Mol+8h79S/nYZz6Hx7+O6wbkw479hF54gr+qawFr3A7cP79R+nYX7xk9sB
PYA9iIwj1orZd8u7bv1E37+n/L3602Wxzowc3resP7PXfPG871+H8x5FDuHo
U/QXOij60KfGFeO3lcvaLtE6cucl9E7KVvUuyld1tzzpm5EmXRUelg1/pqox
wnt0o4beCatHeKWhdqOcvPNS93JV9V/0r8+qxjLvnlxV7wrao1BVm9BXxar6
i+82+wFoh96J1oVbec2Xtb/1Wkk2dwIgn3VpnoU1c9bHEz/XDonWxB8O/3UO
Zx27T6K172FLaP275nDWvUnPWv01VZWLzJuqWqNnbfzWqtavF++1W8r+kU5D
WTsmWq//aQmtVy/pvDc4L+E7JcrLs+ycaD36iPD3S7ReeRnv26rej6zTsg7O
WuqYVlqbZp20XWutdbPmPcdrpMhh7Z017mUsc7dEa7Wzw3+nw1lT3T3RGnc7
r+eu5DTfJPoutq6qr9q4v+52HT72evIK9rP+zj4D1snvtRzWnHdJtHY/xvsJ
l3W5rAOv7DR9E601795aa7NrVP9blyacdWO+k3wvWceb4DbZ3Wu7a7qt9ky0
PvtS+PdK9K7g/fB4VeuVvDfud7sh83ZjibZ60u8T1jkfsczF+wn5/mE7nGg5
L3lv4VpOwz6KurG0d6J14S5t9F8k7FTY+Vj3Z71sntc0WQMd1kbrcuu7XNaU
N3Dep+1n7W6a07NGuk+i9dBh3hO4kcOfq2rPAGuJ/ROtpywZ3/F9E6WZ2EZ9
uLH78WV/s1kDnOK8pNkv0f4E6sl6DHIWem12Q9fnRT8LexP2T7T2t7bXsFjb
GtCitbjNnYb1wS2c5hX7Wa973en/8B6HTV1/1rg6Opy1JtahWPt6u6o1Jupz
YKI0t3rNrpP9b9pP+oMS5f2wRetZXew/INFaG/Vk7amb24p1DtY7WJdgnYb1
GtagDknkvyTSvOv0rGUdnGh9bRfvJ+zucNZ6ejo9a3BbOc1HDmd96dBEazSt
vZbBms4LkWZAonUN/KxtbO30HztNi+3c2OSxwbO+sY3DWa/Bzn8S//V2udT/
06rWOFgPYU2lt/1fOz1rPqy5sAbUOfJ+YT/tcHiiNkHmEYnWMh5Ka41pW9ef
NY4dHY7tHXv+D+E/LFFZyGT9YweX9Z3Ts04yMJGt/gfvsdzJ4fMsh2dkTbSD
MXNkomdfKyNbCN8VvinYsrFpY7/nX5/Y0rHZs36xm9P/bD9rBUclsuseEuFH
J7Lz35KRnXd3p8H+v4fDsatjx/4gozkac7UVvG7Qz2X96fSsJwxOZIcnPbb4
PR2+0HKoZ9q2zVY52Zn7uj7Y51kjaGb1Xzz8bW3nxr7N++TYRDb2nbOys+/r
NNje93M49nBsvBeH/5jE7RP+IYls3c+Hf2giuzF14JvPc/HtTjnv4n2YB9qP
nfwg583av5ztxP3tL/i5VrTNDDsbNryTbXM7OK+797FtYhsu2n+i90NiC8VO
fHwiu2unnGyvAyzzxET2zAdzss0e6jTYbLENfp/TXANsYDNb0Xr9e3ndnY79
c7EN9QjXoeJwZJ6UyPaLHOx2Rzp92WVRtxMS1ZM6L+VysfMxV8IWyXwJG+Ox
fl5sk4Rjj8RGit1vzbzuHx7s9lnB6dexzeY4+09NZDej/tyNid0Mu86wRLZW
5GAfHeQ6HJcIJ/T7KYnk3GRbIrZFbGzLWQ7hzOkIZ17H95bvK9/WUVV915gL
reY2xP7HPJo5NzYh5n3YxdrZ5oO94smC7IDYAxfbwE50XuZrzKEne+8ougE2
s7MS2YvIu14iew72xc62LXxV1H5LbBRbYne0n3BsctQBO9YaztvHtjLsU9if
eA72SvKNRu/E3ojueUaiepKefaHYWLYo6z6K8+w/23r9HwXZcwjfpKj9qIRv
VpbdZpFtpKi7+4b52dlfij2nQ1ln/y+wH12BdsAWtbHbDTldLYdnPMf1OaYo
+88F9p9rmZSFzeEc1425J3NQ5rDMc5nvsp+Tc1LYfzqXZWPBf2BJ+1Sxt3SK
8AvsJ3wrt3lHz6mZBzMHPj+Rvr9qSfNi9msyJ6cs5tzMwfm2842f4Hc2ft7b
VadhTn5RIvvPjSWtiVzpupGX/TTMExp+FubSs10u9eHc4mWuM/No5tPMr+lf
8NrLzz7CZTUcDoZrbhPm+cz70CWYv3ezTJ5rKYczJ2fOzrz/Qz8v7dDNusK1
xlLd/h6e41Mf5vb0xY2uf9Ny2N+7mftr8/APT2QbBEtv2U/4ojl+VfNl/My5
9/LcmXDm0szfmd8z3+dZRrvOpGF+zxwbPYA5LvNb5NzlvMzZmeszz2eey75A
5s9LW+YRln/H//mRyV5cbGZjq7KbrWQ56AHIYd58sutDuX2sH1B/dATeLcy/
mXszB0eHQQ/Az75PdBBkjnfd0A/QJdAR0AkecD2xh71fl02MOTjzcubkpEFf
QndY2fKRuY7TDHNZ1GGg64xMdA70CfaD7u5zRshhXyjzYvbjMjdmzss8fvFc
FT/zZObv6A/M4ZmzM4+/wHPzKc67vsOZ26OXYL9AN2FOzVyfefV6DsfOgZzJ
Tk8adAbm/GD+FmMMrKKLonu2tZ891ciZZPnruW7sL21vOczlaZPH3G7UBx0J
/Wgd+8/2s6NX3Oq8U12HTR3OXJ1nRD9BB2lv/0iPZeb96AHM8dENFs/j8DP3
pj3RJcb6eWmHK1wu7Xad9QDm98zt1zLG0LnI+4Lbf3PLQdfY3OXyDmGdie8m
30rmJsy3mOcwl2F+w3wGXWG65TNfZr7OXB5dAZ1hktNQh4l+ltdcf8LRN550
PdFn0FnIi67yjOWwNw69g7kw82zmw8zlmdPPsX6DHHQW9C10EvSRbvYv1sOQ
ie6zneV87vpQ7sPWP6g/ugZ6A3oFegTh6C3oJjwjugF73ro5nL2C6DfoLZf4
TNYs+zu7Haj/on1nlrlof1lV83/kzHSdt/FzoY/0ch0W6zHoP+gyPe1n39q2
ljPb4dQB3Ys5OHNi5sPM99EH0AV4dvQT9qptb3/W4Z+7bZE513WjzdF/0tY/
0FUechrC2feFnoHegv7BPJ25PvP2lWr6VrIOQV70JfSXHS0HnQb9if1VJ/ks
GGnmW49B5g8+/0X92eNEnT9zeuR86/qgl7CvaC0/7/f293U7oJfs5nD0v0U6
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
31XX9+7BcHdoai40zu989o2kI+wG5JZlJ8ZezJ7ARbbDRPbD8+znHYt9ETsj
e/yGO/1m/kZgR8aGvMjGnKgc7ModHb7I5m2ZyGG/ILblC50em/O5ls/3ApsM
6+7Y/RYm2tfCnhbSY6e+y/Uc7vqw94Q02HuxN2N3Zl8f9l3sy+whxB7F+v3Z
rjN2cPY6Yu/H7s/+wxPKGsectWaPAnsV2LtH/Ts4/QV+Xr6JrAmwrsAeUdYZ
WKtgreFs+0c5DXtJ+3j/7dqJ9jIhp5OfBRsvezuw5WIjZ33iHtcNP+sRyN/Q
Ms93ffhG807fpaG9SbRte8+phtv/h+uzket2ocvt4Pk/+6RrvkODdY7Fayxr
uM74WXtg3eEEz/PZy8qeJvbotPMdHaQ53+WebSwN4/kT7atGRzjdebHXsV6O
PR87JPsPsNGBRc5gX227CmvD2D2wg7E2/7BtVuxFeMb2H9a2sflgI2L9G9sX
9hnWibHDYEtkv8JI26NYd8dOhb2RfQm32ubDmjT2H/Q71gLRQ9ETWbdDN9yk
ovM2nLVBX2atDv0UXZg1RfRrdGfWPtHBsYewDo0NBN2NdbVF5wuqWitFX8Ou
yF4HbJXY01j7x26GfYx9BtgAsfGy/wNbK2eyRyTae/llonci58dxr7cf/Y71
OfTKvxNh+N2S1kNYI2G/7tnMA+vaX07/nuG+Y7/2mYn2f3M2HZm8bznPPSrR
PljOc3OenHcp+0PZI/uDz8BdlWj/KrrnovXFinRS1mixA3AXAXcioKewhsI+
KtZWsJmw9oy9hTshuC8DPYi9pew35Xw8eijzZ+bR3EPAfQToUJy5vzzRuXvW
UNiDxfoUe2rZW8t9It8m8ndaQmfl29R0Fp7zGfzrlDMaPyT6DvEN4v6D1jXd
dbDozoma7p3gfo4larqXg2/tP64PZ75bajrrfa/D0V++TyQXmZwXT9V0Lpu9
dey3Y+2JdxRrUex3JZy90ey7464Y9luzZscevQ/sZ18fa2ysVXGHzCzLmWCZ
7NNjv94c+1esyU96wj+2n7SznZdz4ZmazpJzBrdY03eQM6CFmuaW7G/knzrn
ei8//3xiL//8cH9NtPdyhNMs+jdIRfXnW8O3n3/qTPE++j8S7aW/3HKYsyxy
7edfivOT//Zz/mL/we4v5l24P9nP+fJsTWe3OT+dq+l7zZnpfE3fcc5Ap2s6
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
4LGu9b5R4W5e0/xyZPg3qWnueCJzkIZ0y5Ow0Takfw6r673MO/lk7LIN6X5D
avpOnOm++tn9hT14/6Z0yUXyLHMSY6WmezHWa6oM5C9g3NU0n70cGXWtOd5Y
17eH785pQYc1tf7IONizqbHAM3Vr6rnI17WpvNh0uzRl18WW3LkpezK2545N
6RHjw9+9qfVQbOd9m7LPMFfduKn5KuN1j6bGLDbjTk3pERPC36OptUXs5Vs0
facdbduULYgxvVlT45oxt2lT4471502asu2wNrVlU/oO9uwOTel0rH1Nq3n9
K8KPbmq+zVxsUFPzMeziRzU1L8W+3q8pGzvzuMObmsudGv5Dm1oLZkzv29S4
Zkzv09S4PjfSHNvUfnLG6F5NjVPewXs39R5+kvdzU996vtVDm/pe835nTYW5
A+v5g5vSm1gTG9jU3Jj1wCObmjOzPrBfUzYH5o9HNDWHBKesyYHV4eE/pql9
6XybTvAaGes2J7osdA7We9A72K/FuRT2d63OO6AuneH3mr5nfMvurGnuyLxx
t3BrDdmiV2HdpyZ73hs16WPoYjuC97ps0LxjvqjrPXNzQ/Nm5sxbhH+Nus5M
0i7z/O2YFm6poTs4Ojc0Djkr+UpDa0WsE63a1HeLbxb7BVjLGWkd8Nq65o7P
MPepa98I62bEYXPfoaF9/9iUB4U7l3Yp67v6eV3fVt55V9X03mOPA2u3rNt+
E/4hddkIeoZ/dl3781eO9O/XZO9cKfzv1GST5l1yXF3vk2sbGjOMF9bpeA/y
DmxhvbiuO0yfrkkHRv+dWZMs5HxQUxnIf6YmXQs964aGxhLjaHxD45wxzpr2
6g2ta0+tSX9Gd36uJv0N3Y3vwKU1fQueqkm/Qrfq0RCmwfNWDeEJLN3V0Hhg
LIxsSOdH3/8f4tnl3g==
          "]], PolygonBox[CompressedData["
1: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
Kdeq85K/3xVef553M7z58g/wOso3Jq49X9J9S80TvZ0zdTP4euUo4Mp5pmck
rnXFk60PEveyZHMw+KfEsfph+R/wasVDZGcpd4nds1KvajO8jvB+VT2QdU9P
vazt4J1Z97RuSf2N9W278/w7obch/6WYdQaBV4EPhu53XKPcMrZt9SgGQv+Y
OPdRfySI3aNTb+6H0L28kql9u3p6f9WGOt9Z14iqJXcwloSuKfdGrhlVKy4P
nauX0BpC5+x5sXtG6hWJp9w9F97K0Dl8NnEOo9xlCqN47J6YemHS2ax3i9wr
UA9kGbiIMTp0zaxelXow6r2oZ7Uzck9DvQyt8Sbl2th8HHpa6LnKwZR7yYZq
cfWw1Lv6qyZPvCatRTW3aoli2rPQNUV+7J6eenk/wcuJ3ZNUL1I6ymUPML4K
ndMejFyTqxYXT7nrPsaK0Dns/sg9BPUOxNNd2BN5L3UnlFsfj1xrKMdWLnwy
8rdSTqy7tCtyLNSdKhW7J6pe6OrQtVHJ2GtVjaTcvCC2TDn65sg9I/WKVAOG
sXuK6iWqBu+qWKAzCj2A/Sgduwep3qN4qpXPUX4aumZWbzqTOjaoR61ezZbI
sV89m63orgM/EfrOTkP/nNS1YpXIvdWqqWn1WJ9UbE3tS+qAx4qf+lsqR+0q
X6KcTnUW63tC609dO1eL3MvZxlgUuqejXva5qW2pp63eUVHqu60ekuK14nR3
0dj4B/J9iX3Hfuwf112NfJfV01uv+i/5+9mhe11h6lionpd6WdnUvkI9rV8Z
tVL34nQmn43dI1RvUO+g3mWN1HdTPUz1xium9tXqkau3VSG1r1KPS73701L7
XvXwu6WOMYotioHyNY3hzw3tcy5DVid27j8y615gk8i1inqC6pXWTO071DMd
qZw5da9EPn8jeHjq3Fs29V/AGal9tf4TUO8qTh3r1cNSLzBK7avUE1RvrHzq
XEU9stGMs1PXZup5qjeVpI6t6lH9HwbTaCM=
          "]], 
         PolygonBox[{{4756, 3703, 706, 4702, 3559}, {3921, 3919, 4718, 2500, 
          4690}, {4931, 5230, 3559, 4726, 4496}}]}]}, {}, {}, {}, {}},
     VertexColors->CompressedData["
1:eJzt273OFVUUBuATSegsMebraLwBChqSMVbGEq5AxBpipS0W9CSE1s6boCHc
AMTGn2gCBEKIxFtQjzXFZ845+333fk5D8oQMa/Ze6509E7188/b1rz/Y7Xbf
XdrtLvzz57On+9/2zf73Yvt2/3uzcc4555xzzjnnnHPOOeecc84555xzzjnn
nHPO+Xn9t1///b3dPt7/ft5u7H8/xdXJOect/r5cPa+n3RfnnLfnqhzmnPP/
fFSuylvO+ayelqtymHM+q6flpxzmnLd7Wh7KW855u6flXpqn7RfnvNfT8q3F
0/aRc57vaTnW7mn7yznP8bS8mtXT9p1zLm9X87R+4JzL29U8rU845/J2NU/r
H865vF3N0/qKcy5vV/O0fuN8ZU/LBy6HOZ/V03KAy2HOZ/W0eeeZnta3nDd6
2lzzLk/rZ86TPW1++Rye1uecJ3janPK5Pa3/OZe3fDVPmwvO5S1fzdPmhXN5
y1fztDniXN7y1TxtvjiXt3w1T5s7vqanzQXncpjP6mn9z3mCp80pn8PT+pzz
ZE+bX97laf3MeaOnzTXP9LS+5XwmT5t3Lm85X83TcoDLW85X87R84PKW89U8
LTe4vOV8NU/LEy5XOV/N0/JnNU/rB865HG73tP3lnOd4Wl61eNo+cs57PS3f
5CrnfFZPyz35yTmf1eUk55xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc845
55xzzjnnvMXT/v/oFj/veh5q/Y+9jy11ct7ox86N9r/fnict95tW56H6qt3T
+pl3+dmF61/8fuvVdvHK88+uff52+/GH+788ePRnXL+tNkct9Vt/62+dc+ps
r18/q1Od6lSnOtWpTnXOUWdLPfZLnersrbO9fu+/6myss73+9rmz/tY/+b7a
7/fY6zDqv9/gnOfMaVrOpK1n2r7zOfZRnV3XT8tP/v/2d9Z9THtP4WM97dyY
tj7ui3Pe4vJnTR/1nXbWczL3HsE555xzzjnnPN/T3pf5mp42F8eer7Q6+dyu
D+f2tDxv8UOt56HmLu05Kze6PG2+VvO0+UrLz7T6OU+Y31HnltW8Zd3SzhV8
Dk/rc3PE9f/pzyct1/f9M7Nv0/pkVB+O+h6Yts4tfd4yX+3fsY+9zqPqTFuf
tDycdb44P2UOtHvLvqRdZ9T6z/p8TPt3Oee9z4VRdba/L7fcl3rG7nvL+Sft
nJx2Xm3JTz52v0btb1p+puVGe5+Mes/lfGX3vOacHztPznudT7+8efbw9bvt
k8dPrt758OV29/t7f3310R/y6kT7NWo9086Baefh1TxtXlrmNO09N+06Ld/H
+GnyJK1Onulp5wffweZ+Lo96bqatZ8vzveW+2v/dtPtyHddxnd5zWtr6tOfz
rNdJm4uW9Unbl1Hn0pbzUlpupL13pz3XWuoc1SdpecI5z/mO1OJpz9O0Ovlh
+yftuZl2btT/ma7PT7MOo95/3+d/AxwpKYE=
      "]], {}}, {GraphicsComplexBox[CompressedData["
1:eJxs3XmcTfUf+PGDZjfMopVEC0pISn1Jnw+RtBGlouyVEIqkotXSQkiUSjVC
QjFIKmHS2MkMl8l6B5eZuYZpapiMyW8c9/U+v/f5/b7/9Hh+z73nfO7yOp9z
7r1n1O0zpPNTlR3HmZ3qOOf/6//f9qGdT4fSfzDameLPd45+eVC77b7lAfFF
ifVf7Fl7r+/2QfHyq/vf/m3ZId/9Q+KCVXdU3CTPt76wuHb35Fs+31noW3+R
+Nuy4pz3vvrLt71i8doO+z9e3/Uf3/ZLxOeXXpR42jeeUnHFjS9uvfZf3/jK
xOdHN/rls77xlosbvjVu6s9NzvnG71h8Ybie57mPp5K48aTvYq94sLJ4mXsH
zy3cB1xFvMZ9vBeJ73YZJd7iPn7Pnd0HFC3OcZ+PGHEP9wF4PuI+P7HiAedX
d3GcuMh9vjyPOP/uGRovPlv1/POXIH7rq9zZJzZ7jnWfz6riD84Pp36iuIb7
/Hr+9MTmvg3fqiau4z7f1cVzK0bTYb/n6e7znyR+3H3BPNdyXw/PB88/nA7J
4lnu6+P5qXbn31GeG7ivV4o4XHHr3Nmev3dfP8/Pn396OqeKb3FfT8+RR+2z
47hvw+5TDP1qZ4rpVy8PiOlX3z4opl99/5CYfvX6wmL61esvEtOv3l6xmH71
9kvE9KvHUyqmXz2+MjH96vGWi+lXj9+xmH4x/WL6xfSL6RfTL6ZfTL+YfjH9
YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6Zf
TL+YfjH9YvrVpt80X79pvn7TfP2m+fpN8/Wb5us3zddvmq/fNF+/ab5+03z9
pvn6TfP1m+brN83Xb5qv3zRfv2m+ftN8/ab5+k3z9ct4y8W63zRfv2m+ftN8
/ab5+k3z9Zvm6zfN12+ar980X79pvn7TfP2m+fpN8/Wb5us3zddvmq/fNF+/
ab5+03z9pvn6TfP1m+brN83Xb5qv3zRfv2m+ftN8/ab5+k3z9Zvm6zfN12+a
r980X79pvn7TfP2m+fpNk34/+rlJxZbmS7/amWL61csDYvrVtw+K6VffPySm
X72+sJh+9fqLxPSrt1cspl+9/RIx/erxlIrpV4+vTEy/erzlYvrV43cspl9M
v5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9Ivp
F9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH61mX/TffNvum/+TffNv+m++Tfd
N/+m++bfdN/8m+6bf9N982+6b/5N982/6b75N903/6b75t903/yb7pt/033z
b7pv/k33zb/pvvk33Tf/phs9/6b75t903/yb7pt/033zb7pv/k33zb/pvvk3
3Tf/pvvm33Tf/Jvum3/TffNvum/+TffNv+m++TfdN/+m++bfdN/8m+6bf9N9
82+6b/5N982/6b75N903/6b75t903/yb7pt/033zb7pv/k33zb/pvvk33Tf/
pvvm33Tf/Jvum3/TffNvum/+Tfd9jvOD+f//N1NMv3p5QEy/+vZBMf3q+4fE
9KvXFxbTr15/kZh+9faKxfSrt18ipl89nlIx/erxlYnpV4+3XEy/evyOxfSL
6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x
/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpV3+uXMNnx5nqzsc/y/tKO1NMv3p5
QEy/+vZBMf3q+4fE9KvXFxbTr15/kZh+9faKxfSrt18ipl89nlIx/erxlYnp
V4+3XEy/evyOxfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0
i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9OvtuN0dV+3
VdKvdqaYfvXygJh+9e2DYvrV9w+J6VevLyymX73+IjH96u0Vi+lXb79ETL96
PKVi+tXjKxPTrx5vuZh+9fgdi+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+Y
fjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfT
L6Zfbc5/M3znvxnSL9bnvxnSL9bnvxm+898M3/lvhvSL9flvhu/8N8N3/pvh
O//N8J3/ZvjOfzN8578Z0i/W578ZvvPfDN/5b4bv/DfDd/6bYfT5b4bv/DfD
d/6b4Tv/zfCd/2b4zn8zfOe/Gb7z3wzf+W+G7/w3w3f+m+E7/83wnf9m+M5/
M3znvxm+898M3/lvhu/8N8N3/pvhO//N8J3/ZvjOfzN8578ZvvPfDN/5b4bv
/DfDd/6b4Tv/zfCd/2b4zn8zfOe/Gb7z3wzf+W+G7/w3w3f+m+E7/83wnf9m
+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
V4+3XEy/evyOxfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0
i+kX0y+mX0y/mPl25L97661rvV/6ZTn9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0
i+lX23G6ua/bAelXO1NMv3p5QEy/+vZBMf3q+4fE9KvXFxbTr15/kZh+9faK
xfSrt18ipl89nlIx/erxlYnpV4+3XEy/evyOxfSL6RfTL6ZfTL+YfjH9YvrF
9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0yvmF4xvWJ6xfSK6RXTK6ZXTK+Y
XjG9YnrF9IrpVdtxNrt/IO6g9KqdKaZXvTwgpld9+6CYXvX9Q2J61esLi+lV
r79ITK96e8VietXbLxHTqx5PqZhe9fjKxPSqx1suplc9fsdiesX0iukV0yum
V0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrZr7F9IvpF9Mvpl9M
v5h+Mf1i+sX0i+kX0y+mX0y/mH61HeeLSGf0q50ppl+9PCCmX337oJh+9f1D
YvrV6wuL6Vevv0hMv3p7xWL61dsvEdOvHk+pmH71+MrE9KvHWy6mXz1+x2L6
xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0yumV0yv
mF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9KrtOLvcDL1etTPF9KqXB8T0qm8f
FNOrvn9ITK96fWExver1F4npVW+vWEyvevslYnrV4ykV06seX5mYXvV4y8X0
qsfvWEyvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5heMb1i
5ltMv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTrzbX3+b6rr/NlX6x
vv42V/rF9KtvHxTr629zpV+sr7/NlX4x/er1F4n19be5vutvc33X3+ZKv1hf
f5vru/4213f9ba70i+lXj7dcrK+/zZV+sb7+Ntd3/W2u7/rbXN/1t7m+629z
fdff5vquv831XX+b67v+Ntd3/W2u7/rbXN/1t7m+629zfdff5vquv831XX+b
67v+Ntd3/W2u73rbXN/1trm+621zfdfb5hp9vW2u73rbXN/1trm+621zfdfb
5vqut82VXrG+/jbXd/1tru/621zf9be5vutvc6XXu903rterdqaYXvXygJhe
9e2DYnrV9w+J6VWvLyymV73+IjG96u0Vi+lVb79ETK96PKVietXjKxPTqx5v
uZhe9fgdi+kV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFXc8
VfTegopeKx/NeCmrIFfmW5bTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i
+sX0i+lX23Fec59X79/h0s4U069eHhDTr759UEy/+v4hMf3q9YXF9KvXXySm
X729YjH96u2XiOlXj6dUTL96fGVi+tXjLRfTrx6/YzH9YvrF9IvpF9Mvpl9M
v5h+Mf1i+sX0i+kX0y+mX0y/mH4x/eI60/5aPGIk188fkn5ZTr+YfuX+kX4x
/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9OvtuPQFf1qe3+nnH71cu+6PfrV
t/fOc/3/pV9Mv3p9YTH96vUXielXb6dYTL96+yVi+tXjKRXTrx5fmZh+9XjL
xfSrx+9YTL+YfjH9ynUbkX4x/WL6leOeSL+YfjH9YvrF9IvpF9Mvpl9Mv5h+
8eQ3u/T5t6Lf+YN7vX7g3CE5XmY5/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9Ivp
F9Mvpl9Mv5h+Mf1qO477sMcdln61M8X0q5cHxPSrbx8Us119/5CYfvX6wmL6
1esvEtOv3l6xmH719kvE9KvHUyqmXz2+MjH96vGWi+lXj9+xmH4x/WL6xfSL
6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5j5N7w37Y2X3z4s/bKcfjH9YvrF
9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH61Hafe+dPh5CPSr3ammH71
8oCYfvXtg2L61fcPielXry8spl+9/iIx/ertFYvpV2+/REy/ejylYvrV4ysT
068eb7mYfvX4HYvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL
6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX23H6eGO
2+tXO1NMv3p5QEy/+vZBsRyHqfuHxPSr1xcW069ef5GYfvX2isX0q7dfIqZf
PZ5SMf3q8ZWJ6VePt1xMv3r8jsX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6Zf
TL+YfjH9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK
6VXbcaa7z4v378RrZ4rlej+1PCCmV337oFjOM9T9Q2K53k+tLyymV73+IrFc
76e2VyyW6/3U9kvEcr2fGk+pWK73U+MrE9OrHm+5WK73U+N3LKZXLNf7RSzX
+0Us1/tFLNf7RSzX+0Us1/tFLNf7RSzX+0Us1/tFLNf7RSzX+0Us1/tFLNf7
RSzX+0Us1/tFLNf7RSzX+0Us1/tFLNf7RSzX+0Us1/tFLNf7RUy/WK73i1iu
94tYrveLWK73i1iu94tYrveLWK73i1iu94tYrveLWK73i5h+tR1nW6Qj+tXO
FNOvXh4Q06++fVBMv/r+ITH96vWFxfSr118kpl+9vWIx/ertl4jpV4+nVEy/
enxlYvrV4y0X068ev2Mx/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9M
r5heMb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrVdpzo
Kx6seGselV61M8X0qpcHxPSqbx8U06u+f0hMr3p9YTG96vUXielVb69YTK96
+yVietXjKRXTqx5fmZhe9XjLxfSqx+9YTK+YXjG9YnrF9IrpFdMrpldMr5he
Mb1iesX0iukVM99i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9
YvrF9IvpF9OvtuPc6b6xvX61M8X0q5cHxPSrbx8U06++f0hMv3p9YTH96vUX
ielXb69YTL96+yVi+tXjKRXTrx5fmZh+9XjLxfSrx+9YTL+YfjH9YvrF9Ivp
F9Mvpl9Mv5h+Mf1i+sX0i+kV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9
YnrF9IrpFdMrpldMr5hetR1nhHu/Y9KrdqaYXvXygJhe9e2DYvleT90/JKZX
vb6wmF71+ovE9Kq3VyymV739EjG96vGUiulVj69MTK96vOVietXjdyymV0yv
mF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrFzLeYfjH9YvrF9IvpF9Mvpl9Mv5h+
Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6Vfbcb53H5fXr3ammH718oCYfvXt
g2L5HlrdPySmX72+sJh+9fqLxPSrt1cspl+9/RIx/erxlIrpV4+vTEy/erzl
YvrV43cspl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WJ6xfSK6RXTK6ZXTK+Y
XjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yumV0yv2o5zNNIJvWpniulV
Lw+I6VXfPiimV33/kJhe9frCYnrV6y8S06veXrGYXvX2S8T0qsdTKqZXPb4y
Mb3q8ZaL6VWP37GYXjG9YnrF9IrpFdMrpldMr5heMb1iesX0ilf2OTSyQ8V8
e29Cw/oHe+dJvyynX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mv
pl9Mv5h+Mf1i+tV2nNruOL1+tTPF9KuXB8T0q28fFNOvvn9ITL96fWEx/er1
F4npV2+vWEy/evslYvrV4ykV068eX5mYfvV4y8X0q8fvWEy/mH4x/WL6xfSL
6RfTL6ZfTL+YfjH9YvrFHC9j+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6Zf
TL+YfjH9YvrF9IvpF9Mvpl9Mv9qO09V94+VLv9qZYvrVywNi+tW3D4rpV98/
JKZfvb6wmH71+ovE9Ku3VyymX739EjH96vGUiulXj69MTL96vOVi+tXjdyym
X0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjG9YnrF9IrpFdMrpldMr5heMb1iesX0
iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK/ajvOB+/dbC6RX7UwxverlATG9
6tsHxfSq7x8S06teX1hMr3r9RWJ61dsrFtOr3n6JmF71eErF9KrHVyamVz3e
cjG96vE7FtMrpldMr5heMb1iesX0iukV0yumV0yvmPkW0y+mX0y/mH4x/WL6
xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0q+04687/fHmq
1692pph+9fKAmH717YNi+tX3D4npV68vLKZfvf4iMf3q7RWL6Vdvv0RMv3o8
pWL61eMrE9OvHm+5mH71+B2L6RfTL6ZfTL+YfjH9YvrF9IvpF9MvpldMr5he
Mb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdOr
tuP8V/VCF/SqnSmmV708IKZXffugmF71/UNietXrC4vpVa+/SEyvenvFYnrV
2y8R06seT6mYXvX4ysT0qsdbLqZXPX7HYnrF9IrpFdMrpldMr5heMb1iesX0
iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMrpldMr5he
Mb1iesX0qu04zd3beb1qZ4rpVS8PiOlV3z4opld9/5CYXvX6wmJ61esvEtOr
3l6xmF719kvE9KrHUyqmVz2+MjG96vGWi+lVj9+xmF4xvWJ6xfSK6RXTK6ZX
TK+YXjG9Yo6PMf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9
YvrF9IvpF9Mvpl9Mv5h+tR1n8PnLg245Lv1qZ4rpVy8PiOlX3z4opl99/5CY
fvX6wmL61esvEtOv3l6xmH719kvE9KvHUyqmXz2+MjH96vGWi+lXj9+xmH4x
/WL6xfSL6RfTL6ZfTL+YfjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV0yum
V0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9ajvO3NjzP3j0etXOFNOrXh4Q06u+
fVBMr/r+ITG96vWFxfSq118kple9vWIxvertl4jpVY+nVEyvenxlYnrV4y0X
06sev2MxvWJ6xfSK6RXTK6ZXTK+YXjG9YuZbTL+YfjH9YvrF9IvpF9Mvpl9M
v5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL/ajnPAHVeh9Kud
KaZfvTwgpl99+6CYfvX9Q2L61esLi+lXr79ITL96e8Vi+tXbLxHTrx5PqZh+
9fjKxPSrx1supl89fsdi+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+Y
fjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6Vfb
cS6JdEG/2pli+tXLA2L61bcPiulX3z8kpl+9vrCYfvX6i8T0q7dXLKZfvf0S
Mf3q8ZSK6VePr0xMv3q85WL61eN3LKZfTL+YfjH9YvrF9IvpF9MvpldMr5he
Mb1iesX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZXTK+YXjG9YnrF9IrpFdMr
pldMr9qO86D7xjshvWpniulVLw+I6VXfPiimV33/kJhe9frCYnrV6y8S06ve
XrGYXvX2S8T0qsdTKqZXPb4yMb3q8ZaL6VWP37GYXjG9YnrF9IrpFdMrpldM
r5j5FtMvpl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+Y
fjH9YvrF9IvpF9Mvpl9txxl3fjMFXr/amWL61csDYvrVtw+K6VffPySmX72+
sJh+9fqLxPSrt1cspl+9/RIx/erxlIrpV4+vTEy/erzlYvrV43cspl9Mv5h+
Mf1i+sX0i+kX0y+mX0y/mH4x/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mv
pl9Mv5h+Mf1i+sX0i+kX0y+mX0y/mH61HWfV+aflxZPSr3ammH718oCYfvXt
g2L61fcPielXry8spl+9/iIx/ertFYvpV2+/REy/ejylYvrV4ysT068eb7mY
fvX4HYvpF9Mvpl9Mv5h+Mf1i+sX0iukV0yumV0yvmF4xvWJ6xfSK6RXTK6ZX
TK+YXjG9YnrF9IrpFdMrpldMr5heMb1iesX0iukV06s2/yuSXrUzxfSqlwfE
9KpvHxTTq75/SEyven1hcW11nF8kvWJ61dsrFtOr3n6JmF71eErF9KrHVyam
Vz3ecjG96vE7FtMrpldMr5heMb1iesX0iplvMf1i+sX0i+kX0y+mX0y/mH4x
/WL6xfSL6RfTL6ZfTL+YfjH9YvrF9IvpF9Mvpl9Mv5h+Mf1i+sUX/ltDfIX7
+FNttPs+3Gw6u2/AVJvnjnOrmew+X6l2k9v7H2aLmy//ftF2E+8+v/z7Clnm
bvcNn2JXuOPKNmPc1yPZNnjx/BdSOyO/G0q2n7rrDZg17no9t3ADS7Lx7t/n
2CU+7r5Pcsyy8z/TvCLJ9nDH+acZ6b4fPB92/+5sdbvN/X3YHvPk+ac/p5pd
7H6evk+W492zz7/g1ezLP1277K+/D8jtP3SPRw6Yh9z1JtrK7vMVNP8EF3ds
WXH7IfNndHz31EGz2X0eqtoX3Pdtrtwet3Ofj6r2kLudQ2a1+3gTrLu49WFZ
jv/nPt54+5vb3RG5PV7qPv54e7Mbfkhujxu5/42ze9zujsnt8Tfu446197rb
zZPb47ru6xRrfz7/dN+eL7fHn51/OfvG2D7u81Qgt8cXn3/ZlkfbC++L43J7
PMn9nW20XeKO64TcHsedf3t0j7I93f3ESbk9vrC/nWPct2v3N2X+wbyf9fIa
1r+8jfu8rRMvdbteL+//a91uN0g/mOXT3HFtkj7oR/7+TMQsf8n9PnaL9/dn
IsvZPr3RF6Zv//LH3f3sNhkfyxkfvdInHlf/0pllFfuPnI3Pjy/7wFs+MzIv
M35uz/jpnb6x/vfOvOUX/v2jLN+/d7Zdxs/+gv0D1v++i7f8wr9vke37912y
ZPzsb9ifYPav/uVF7n5gh4yf5Yzfv7/C7L/9y3tfmKhl/Cxn/P79G2Z+8C/P
jhwXMX7//pL9I/s/zPyDGS9mvKPc13m33N/vZW4Pu2V8LGf/y/6Y+c+/f77O
vV+ObI/lPD7//hrL32P1LZ/u9rbH+3usvv2/f3+P5e/PRSx/by5ixnvhHxzY
K/f3e6Tb7z4ZH8uZP5hPOH7ArN8//1ztvl32y/399v/73yxnfmF+4vjFP1/x
7/OyPZbzeJjPmL8wx0eYx4MZXwv3QNm7v9/+f6+R5cx3zI8cn2HW759P57sd
ePOp3/x7TYyf5cyfzL8cH2LWjxm/m8tyb772m/MQxs9y5mPmc45PMev3z//v
uePy5n+//X+/nOXM7xwfcHyMWb//eOKM+/R4xxN++/+eK8s5XuB4g+NzzPr9
xycD3P2id3yCGa9/+Sz3fXdUxoNZzt+DYv0s53iF4x3OJzC39x8fpZzP+mPv
+Mhv/98bYTnHPxw/cT6DWb//eOutqed3aN7xlt/+661ZzvEUx2OcT2HW7z9+
K3bH7R2/YbaHGb//9je482SBmOsvWD/LOZ7jeJDzP8zt/cePn7rrDcv9MY/P
vzzbDSAs48Es5/dvrJ/lHE9yPMr5Kub2/uPXNu55b6HcH/P4/MtfOb/bnlQo
48Es5/tG1s9yjn85Hub8GnN7//FzgXtc5B0/Yx6ff/nV7rziHV9jlvP5Dutn
OcffHI9z/I3fdt+nF8nxOp8X+Jdz/sn2MNvzH//7z1dZjlnO+BiXXs7/avw/
x/8cn3P8zPE1x78cH3P8yvEtx58cn3L8yPElx38cH3L8xvEdx0d3uePxjt84
3uL4y3/8xPEVxz8cH3G8ERP5HI3jB45XOH7xH4/ku8eJ+2W+53iD+/uPHzi+
YL72//vqzPfM//753P/vxTJfc3//fOz/9++Yb7m/fz71//s9zJfc3z8f+v/9
AeY77u+fz/x/T5n5CzMfsT6//fOP/+/RMb+wPv/84f/7OswP3N+///f/fQD2
75j9N+vz27+/9l9fxf4Zs79l/X7796/+36eyP8XsH1m/3/79of/7fPZ/mP0Z
6/fv39ifsFzv72qI6ZHzJXqiP3rheJ73P73w/pZ/7zny/v3p0HNbbxvuHW92
6bP2ZPJ73vEg71feP7wfMcdHvF84fuH9wPuH15P3B2Z+5/Xh9cbMrzzfvH6Y
+Y39N68HZn5Z4I4ryV7mvt93mzvd1726XeU+jgPmI/d5irdF7ut31FRzbxdn
e7nP/zFT2d0RxNoL+8ECM8p9X8TYOu7jOG5OuR1H2w3u81NohrrjjrZD3d68
7Xdyn/ccU9l9HarbAe7rtkfGc8rd/gFz4X6JkdsHzYX3VVW7xu0t1/Rz9wMJ
9ia3H35Hm2Dd3U7fw+Yx93WLt0nu+/+IudBFnH3DHXdIHu8EN7+jkeuiY+0n
7v+fJ4//7Lnz/ztmrPuGjbGx7rjzzYXuY+xi9/ykQJ6fGu7rUmBucffL0fbC
OI7L87XS3R8ej/ydwIr52L3fCXn+Ljwu7/m7MI6T8nzNdh/fXnl+LsxX3vPz
hPv+8p6fLe7j8p4fd9jfes/PQvf95D0/tdz3U0iejwuPI08e/2x3/vAe//3u
fBCWx/uP+zi8x/e5uz/m9xLTIp8nPm8mus87nx8+b9q6r3+SPL5T7vPuPT4e
L4+Px8vj4/Hy+Hi8PD4eL4/vwrjj5PHxeHl8PF4eH4+Xx8fj9T++xe7jPimP
D3/are3AJld7//4k+5vTex+aWf3SI3L7C5+XbIrsP1Ltne4dNpu17v+fGjme
2GIOuc9Lqq3jPh7v88sGk77/atfbf5jCOSb1+orjp6p33le91vnvAd33WWrk
+GKbucrtNtVWcvez283PHbvM7jc7xa64LfPQwW3bTSv3AaVEji+2myfc/UBK
5Pgiy1yYF1IixxNZZob7uqVEjieyzY/u85Via7k9ZJtd7vyRYh92n88d5sLz
mGwnuMHuMKnu7ZLt724fOyPXYSXb/9zb7TRN3XF47uTu55Jtc3e/G5D9y2D3
fRCQ+/+2+czDL/0V8H7P3O6i3KnDcswm9/VKsu+483mOuc6dl5Lsb+64/zR5
7vziOcZ9nybZM+587n1+9vB9yz6c8s4e87u7vur2Znd/5O3Parj7n32yHNPz
/e7t9ptR7jiq2cbuOA6am93XPdH2d5/3g2aF+7xUEy90X++qkc/Lg3J7TC/s
L+u546pqP3LnhUNyf0xP7E+/cl/XBHvhe9PDcn9Mb+xvr3C3G2+Hu8/7Ebk/
pkf2x+x/j7j/f0juj+mV/TXHZ2eWpDbMTjom+6sG7vN1zLzjvq9jZX9N3+zP
2T8Pct+/+XJ7zP6Z/Tf9s39n/8z+m/0B+3f21+y/2T+wfy9w309Rsj9n/8j+
QX+/8rz5uPu8fsGK9+eOOsPfLK662yy4qurNLRZWs1U+XXRttYn75fUrdZ8X
7/W9cLrivX4XDse81+ce9/0WkudvhTv/H5XX42H3BT4qz9/v7n7qmMyHmP3l
dve4Kk+eT8zzd+G/3v50n7t/8OZLzPN5obuwvB4Xzuu8+eXCeWKhvB5+3+ju
Dwrl+b3dPT47Ia+P3zvd/dJJc+F95L0enC9jma8jx6vsr3nd8Ctud+tl/8Hx
Fv1yvMXzyfEWzx/HW5xfYJ4Pjr84vsc8fo7HOF7HPF6Oz3g/cnzG/OX//prH
r5d75/e8Xzk/5vyaxx90x7Fb9r+Y81nOh3l+xrmP0zs/xpyvMv9zPsr8z/km
8z/nk8z/HJ/z71Hw/PN+Z/+COX7nfJHXh/c/r4/fHE9w/M7fO+L14/3O6+c3
xxsc33M9OK8vPfD6+s3xCcf/XB/D608fnG/5zfEM73/5PWvk/UIvnN9h3hH+
4x/eT8x/fL/DfMX3F+zP+H6B/RnHS+zP+Hye/Rmfn7P/4vXl9eLzXZ5///Pp
f354vBPd5887vuB4Ya77/OyS41WOB5i/mc85fmU+Z3/KfMXnRzwfrG+fu1/2
vu/i+WF9F45XgnJ+y/PFfM98wPkuzx/zO/MDn9/wfDKfM19wfMrzy/zN/MH5
Mc838zXzCb3x/PP4mR/oiz6YT5gvOD/m9WL+YH6gL14/5g/mA/qR38NG5g/2
/+zv/fs7//6bzwfZP/F5HfsPPm/i/cbnSbzf+HyH9xufz/B+4/MV+uLzEd4P
fJ7I68/nfbzefJ7H68vndbyefB7H68fnbbxefJ7G68PnW7wefH7F88/nTzzf
fH7E88vnP7y/ef74PhhzPM18wPuZ55fPMzGPn/mA9w/PP/tfzONhf877ideH
z9swj5f9Oe8fXj/2r5jHz/6b/S2vL/tTzPPD/pr9K68/+1PM8Qb7Zz7P5/3B
5/2Y9zP7Y+Zj3j88/5jzHfY3fH7G+4v5F/P+Z//D/on3H68XZv/O/ojXl/cn
8zlm/8/+if0X71/me8z8wP6K/Rnvb44HMPMH+y/2b7z/OV7AzC/sz/i8jz44
XsDsD9i/sf+jH96fmP0F+zvez/TF+xNzvMz+j/cz/XH8gNn/sD9kf0mfvJ8x
+yf2j7w/+DyG15/PY3h9OR7j9eN4jNeH4zGef47HeH75PIbnj+Mnnh8+j+Hx
c3zE4+N4h/Fz/ML7n8+H2d/weHi/8/kw8zePj/c3nxez/+Hx8n7m+xL2xzx+
3r98P8L+meeD9yufL7O/5vnh/cnnzey/eb54P/L5MudzPH+8//i8mf0hzyfv
Nz5vZv/H88v7i8+b2f/zfPN+4vNm9oc8/xzv8fku75enFjqBzg2CcrzG+T2v
L5+vcrzF58W8Pnw+zOPl81u2z/k5+1vOx9mfcv7N5zfs/9h/sX9j/8T+i/0P
+yf2L+x/2H+wf+H7J/Yf9M/+gb7pn37pmz7pl/mEPnn8fP/A4+d4ifcT39fR
E99v8XryfRPPP+8X3j+cf/J68/5gvmO+6fzAmoHR07zfa8r5YXG3mJYNNpj3
d1S+7urS1Mj3p5vM8kPbx17dNNVO7nBwc7c7tpg2l7auEhdIsS92bTq0bu9t
ZtD7Q+/bNjrFLr7v7JOZ7babl04/+tTShin2WO9+qS88kWW+mhL+X9T+ZPtu
7pN254hs88XcG7Jvn+L93vCtPy+6rOPd3ve/7X8p+mvcW0n2myp/Ln4juNvc
X5TUdKb1vs8922felBtvqB75fed+M3rwpn45ParZuU3umrXr6QOmcbWru27Z
mCA9L33u5IfHv4qzjbKz0xdsOGqmPTMz/NMX3r9n1f7KkQ+2S/G+D9p4Sdzw
PUne94ln5p995Fxr7/k+dPiJB5reU3H8saa86XynwBwoyK6feTbazq6Z9Kq5
47g53bbD6ClVvO/vLts7r+eBe6Ntj8wN5d/8WWjWLkv556VO0bZjpMeTlXcm
3PxllL027ckTi145aU5cNDFh2RzvePfpmh9nzf4y1R7be99TfTdvNPO3NH7x
3nap9qH1a77LO7jZ9Pjxmms6fp5qf2/2ftqQ3M2m16VvzBuZn2I/eWRu/YTw
VvPh9X1WNbWpts9jDR/8vmCrqdN1wcuhKSk2+N9l5Qtit5tnvp+6PHQ0xT7c
KG7Pmcrbzcxrrh8z9I4Ue3xbszEzrs4yb9b++c/fCpLtoL7Fvb+4J9vU+fyT
Yfe2SLFZQ66/dWDTbPPOrCUNr/8k2fa856yzeOAOM//SV/646miy/WPQ8jUv
d9xhBtwfaPXftGR7uM7ZOi+8stOkDQnObv9+kv06e9GxHStzTMveiXFbfqxu
D22Yt2Ln4T3mku87v9rkmWp26sm9T53pcNDcffsDqQXt4+2MY/e9/+2HITN9
/8VVHr4v1l5Xd8qegmfyzetnpi1rtynVDr7jwIFb920ydX969dXNg1LtgsV3
x63ct8V8OM/0+jQ11b41+evVi0q3mdLdO5OmJqXYBnntU77MyDbX1x/cJH5V
sr390YeHHT2ywzSonbt+1eBku6Td5fUnpATMwieHNH63abJ9Nf3pGYPOBcyd
2fMuffmZJFt1/Qe7inr+ac5OL7m8UpNq9te1N80ce+SAGfz46e7jllW1Mx7u
8ljTiw+Z5R8k/r1xfJzdEXi65w2nj5oaJ/Per3Z3nM3qWfmeM1XyTP3xy19c
+XmsHb87qsqaLvny+4vj3w/d8dfSDeafnM5n5m78f39vXadG86evfGeTuebi
TzOf6uf9vvrpb2f8c6J+qh2buzovb/gWc9GKJl8Pq5xqcwdf+vyEB7aa1YPb
h57bnmJrrb36medGbzO9mnz1zRcvp9hWjV5c81iX7WZloHu1n7qk2PnzP6qz
dft207Lyql8evSbFLo8+WWPsiCxza063PwdVTrH/bls6cFpelvm14eo5X21L
tvf2bN697bfZ5q8bXr1x4dJku3/r9nFVonbI7ztuu2PFF22LdphOgWu+m/yc
93vgwsmNWjW9xvs97jfXrlmZVJZkm6+Yljc81/s9b9G0mPU7G1e8X97Y2391
bpK974tnywsf2G3siO0t1/fzfg8ypn39V6pcn2TbZjes8debe0xgc9+SRdn/
1+9Tz67t8+3Zarby0qpT62zab66qV2l6YK13vpZ9X/b+LRd5x8eje6/q/nOl
BPtOVLOrGu45Ypr1fq3FnXHxdvuVbZtlXHTUlH4/YeBv3eNt/8jx6HVv9soq
S423G5vYBx4efdS0Gf/X8NZJ8XbbrQ82KB171EyMX730+w/i7MHjSZcUjDxm
bmj3Sq3Db8bZnZc8+82MycfMNxef/ejz6bH24IheYx7dlmfqXvtb703HY+2b
kePX3OiBF/91fax9b/a8/GmL8s2G7M6X//CUd/7Xo0Zy5stNY+0b+eEB/W8q
MJuKZ99arVuMbd0iIX/6wLAZfvW0O6ukeeeHPy6edcmLPWLsGzdF9e9ZEDZT
529r8sYTMfbbt0Opr/4TNvWHzRo24NNo+8KjhS9svrLQfPVw/tGc/Gh74rM5
d19Xdtz8saD5uLcWRtv5F9028ZnxhaaOPT166dyK29ff3a3B9ELj/N3j4VfC
UbZ7Tu8Hvl51wtRsErV0XnmU/Xdkv8P59U6adcsfzzWno2x5Ure/3r7tpCm7
4bYnRkcl25XP9ZgbWOH9Pnv64uLLH+y4y9S8ZeztU9K889MxP56aVRadFHn/
7zUf3nPFc/9cnGTHZCS9dGjPHtNj87vvxA3wXv8Rz/V8IenDavbayPnqqo2X
r6z3j/f7g/p1h5V//7T3fhhwVdaksS0T7aboixOGdco1Q5sM65+3wPt9zuqR
7xz+6Iz3+5thbfK+Luvonc833HrucEqjBJs1qnBbrclHzNuNu5+7cmG8/Tdy
vlOz6Tc97h8Xb7dGjh/frvbWw/cne+f7nWb3GHfHeu98+Ye2McenNfN+DzOh
8H812n7j/d7lhdY/tZ8y3puvrlxUc25ov3c+vDUt48+W9WJtVv8jd41vX2Cy
my9c9c66ivORzZXW10gNm7SSZn+//KT3/liaOmbfjNre71V2pYxs9eg87/co
A29f2bvns97nIw+uD4QvL/V+X/LeqEO/N14ZZa+JnP9Wf2DE3BYZSbZgcb2a
ebt2m4bOzPLt65Js+Y+VKoVW7TaHIr8XSd547tmZffaayi+81bXW+mp2+c1d
yvK6HjB9f+u74OzOajYnu+PyhMYHTKfI8f39V9U/l/FsMPJ5RrxtMdhJG54X
MgsLVh9L7ubN78NntWp2U2Xv9xxfjrx/7oG2MTZj5sxR0Y2Om5EnCldOv9M7
Pitedl+TZaFU2+vPq95r/NQmU8sMSWmyItVWn17jqn1dN5vyuH4vvTc21X50
U+24AU9tMYE7E5Pf7Jpqp9b//uDvfbeaPgduWTn3+lQ7YPrW1ZcP3WY6Nu7a
uHFZst2T0768UuwOU9ztkhdPZyXbLoUvfJg1Y4f5LHFMfvz3yTb4aY304dfu
NK131f3s0ebJtuodl646lrfT1M3fPr/ym8m22yNDOp/ZXLH/PLT/5R3dKm6/
aPgnh3sETKO//ql6Y0GS3V3lrlMT6uwyMVs7HX3h1iRbmjm09Id7/zQ7H7H/
e2Z0ku1dUOmSX87lmKwvt50e/kiSPbTggRHdlvxpJny8ZcINtyfZU91axx5t
vMfsL1lXdEVqdftfjbeeqjpln5mbuKTu61Oq23v79L9sbrt9pvaSJSc/vb+6
bXf1+hq1C/eZzht+frjo3Wp2zNdd+q88dcAsyH9tWdPNifa30YeanSw6aBpH
DX5xcrtq9lhMzYTBXx00bVrtfGVhaqK9aMnDjy+olGsGPpl6ctW4RDv0l48f
X5wbNO/OSpy9oUOifSS14+T0Frkm876Utub+RPvHIxOXDGuWa66beHZy/V5V
7a8Hmzd96JJDZlXyy/vszqr267tbHayXn2teLax3LG5Jgq10X63n69142Owc
uXzCH0cT7Ib4JwdO73rYfH1X367LYhPsvR2y51e/64hZ8eIrk6rfnmDrHq85
JTD6iPktpuiRMa0SbKOD94bShxwxlQ/tnPVa33g79N0PNmT1DpkhgxY0TsiK
t5PzZo/8vHHI3DquyxUdPom391Qec0WfKSHze2GvEatnxNv4dU1zbp8YMjdn
f/nZZwlxdt6hLp90Dx0zzb/p3Xz+v7G2buP2iztUzTNrVmT1HnJDnH168Np3
q9yaZw4MOR59Wb9Y23FTm7433ppvip6od1Wf32Pt2q6DnlhSKd8M2vpA9Ik5
MTZ3/Janf1hXYGo+Uq3+25tj7KxunyzoWyVsjlb+ZHJBIMZuPVLYPPtEgWly
/W07NpdE27I1c0u3P3jc5J892+aGwmh7xYqpUyr3Om7WtUhtkF4zxg5Y/WAg
8O5xU9hz9ONv22i7r/6/3+wsKjTLfpydkNKy4vz9ulkfHz9baHasf+mLWv2j
7bR6b8ZkNzhhbjt9opOdFmUnFY2qOWjySdP7158D2ydF2bT+swZ2/PKkuWrV
ortW/lJxfHvHvju7bTxpBu3efK5q8+r25T0tPkluus9cP/ytKfc3qG4Tpr31
0txH9pvmsV8vrXN3ou00+o5g/x+DZtdP426qUVzVXvph+bzpv+SauCfvuWvc
gaq27Y9N7eQ9uWbksS0bD7aqatssaTD99OZDptX4PcPtDQm2QfCPh/bEHDET
zPbZSR8m2E3daoerHz5sPgsVv936o3gbbBUeuCQ+ZHJ/+n5gTEG8LXho7dkb
y4+Yxvfd/ML8o/F2aq3U9vfFhkzyP18/fq40zj5UMCXxoauPml2xL0wrbBRv
qzfc2nh5x6Om1WOXlextH2ef2fxI9u3PHzP5r05LODolzu4du7B176HHzBeD
Vj3Zb1rF+Xv4lx/WZuWZF5vd+s60g7G2Xq2Zv6evzzPvHjrR7Y8/Y+3upzc/
UJqTZ27a3WXDtVGxdmtgwui8//JNTtWyN7KKY2yT1kvn1qxbYD5+pH23vFti
7fEW+e/Xvq7A7Hk/46c/2sfYWxO+ig98GDbhe+3eJSNj7FUpzozpv4RNr9pn
X399arTtdN2j80obFZorHznbfGJOtB016s9um64qND9++F6btdnR9tHNR5cf
bFJo2lyb/9CiNdF2bfsjm8KPFZrx3UYnvXskyh6dmlqz39YTpuP2xC1t6kfb
2j8OuejxX0+Y+b+P7fVpnWib0NDM+D37hOnRZFjLBUnRdsfzd69NLz1hxp/c
v6DFy973tdfvbVB6oq53/nr/0qkxN2+NsSMi35d+0uu+n+9O8r4f/eHjAwte
r5lom1+TUdZuVK7JrflQRswzVe2D95z+vmTSIfPe6tJfU39KsOuqfPDlsjmH
zagPLhvbJTnBvnLjwqznfj1ivjzw4//27/Y+b/7oo9DTvSvH2dqbCuaVjc8z
z+74ptrXi2PsRWtCCdUqzp9jav235arG3vd3m25t3eHXU9E2Z2bDK7seOG7G
frtuadRI7/u5dwKXTX6vbcX8+PikEc1GnzAjZx9a3XWT93kvn7c8VLNx7dcq
7ZPPVxr1Leq35rqjpn/TATHZScn22rXN3h74RsC8/16Nd775PcmGEv/39E2r
dpmtzzzx86SkiuOfnfVWPFnwpzmQ/FP+fVur2U7Dpz1a+7b9psWCSZmrE6vZ
mWeimv/c7qAZVf+2RXf1jrO/39PpwafbHDML7x7y5Z1ZKbZ61VEDFrbebm5Z
0KW80+4kO63Zzk7Vh+wypb27Tp15smJ+PVI2rPHhfab5IwUf1FqaaPNuu2rM
liuC5mzfVdsG/l3Vbm1V9un2prnG2ZXb+ta7qtp961tV6dvukLlz1d3dcqYl
2BWHj13dqvthM/3Ed8FXwvF22KBGt4wedsQ8Nah//XGd421iYsLGZWNC5pEt
2Xt39Yy1H23efVuCyTeTr92YO3lijF3ZYt2jT54pMJlX3f7Lf+VJdvnJH8uv
DgTM4gf73jdhcZJtMvqDS/rVzjFX9+3c5bvy6jbz2fuqv3HHHnNFu3t6Fs6v
Zid1bzFuwVcHTOzjE5s2mFXNLno2+qI6Px4wI+3EsxMOxNmROR82Gbz/qPlv
QKWPH74lxj4euzRjTJfjZvHEdg++cFPF651Q79qD3Y+bSteNqvvx69E2ts2A
s51OFJo1L/5gp7wYbXvtWd13fJUTJqfD4JldsqPstNuW9bhs0kkTc/nKbzZt
iLJ1Tu0Oxc8+aVp+cnWNPSu8z6/e+OGHjjn3ep83XfL7ofq3dY21bRt03rLh
cL4Z+faW2z69yjuejz9Vvf8byd7vpU9O3dTznSe947HsJk129fnWO/4adfBw
+X//et83hDuMLfm3IM72G5D8bcb6oyZ+2aiBdxTG2ZmHej3SfO1Rk3m27b0L
v0yyaZ/+d9X7T+420++5v25iTnVbf3Clp3Z/tddMbLwlGD2pmq3WfcG0xvn7
zf1zOg9ZsCnRbr2079Wht4LmVNPsV7P6xdvbqr7zx0+FIfPa8r/mTVsXZy9u
cvOwwJiK93Oj/nWbPR1rJz+f9sWyjHwz6cfm3zWomF82tVpXr+Tfivnp0+DW
L5+JthM+ibMrphWajauzOzzxc5St+0GXWa83P2leuzK+U/xt3vfPt/909x2n
63nfLw//tuXJIWPj7SeR7z/TrgkFh4e93w+sueyFBpljvO+X+fzt+OLff436
IWxuOfXZ9eP3et+f97v31Z0DGnjXl7b94JfVR+p711e2fHvgyiNPedcL/B43
8q5bGlezUyPXAzxR9ltpYql3veGGUY/99HIf7/f+L6c1H3e8JMHe+Na7T7x/
x2HTquNTj8//zrtevfJrTzVaOcq7Pittc7D2jnCsHfP7oZsG1c8z79eacs/E
b73rz0+3nDNn3eEYm9e2TtL07ALz3JLEbHuTd/34mCvvqFJlVnU5P9q9a237
B6Z75zszBrTqf9Nu7/fWlw695I5nd3q/p14/dOgHt97m/Z76ipxrv16x0fu9
dJXI55GfZ2c3GDIu39xfaWulRqO930eHX1k28ehv3u+hB+8pH/dqsvf753Zr
Jpxb3S7OXjul62uHKs6HO+0b9VHKAG8+qPVTdu+fjsfYX0vvyNlccT57KvX2
za88F2P7v1HU5Pz++dScR28ZFOV9vnljv1HbXgpUtd0O7v/u7p4Vx3+VVt+Z
/0e8/XD52A/3zjpi7rm3QZcfn4yzk1r82OLVrGPm7b1RxXvWxdrpz/ybPWpw
nmm56++l1Srm2/2Xzlq36N2CiuP7uZdePyLGpk/N6JPUKGyKNhU/fmx1tL0m
+uHyOeuOm78yjsdNrR5tL9rd6t1/+50wSxI/bTavZqzdcmP7Na9tzjcNa958
3d4PUmxS2XUtv66RZVb8c6rLqz+n2N96PT/m/fe2m8t2zpzS7eUUO7bJQwdW
dcsyB/b/VmNAvxR78upxx8fMypLvJ7j+4+2Sae/vnO2Z67VrzR/23HPhLNP1
/uBvMddWs4m59T85VSlo3pz77dJPbk62BxpkXDezOGCuqP2/c8O2p9qSGgN+
7ZXjXc//9nsvHF726UbT4qvpcZNeSLUJ0VmbWu7aZFq2S9k76OFU++gNYxd3
eHOzeeiOKu/9cnGqnVjl3H/H92wxl2SOeDvqbIrtePGL124fttVkv5qUeeOv
Kfaae/vNP3lmmwk8OdZ59ekU23v79A+HTN1uJtx3OuvJivH+uXDQa18f2m7m
F9n/eqWk2FOXtn10aXqWOf7+zn1rSpPtmdX/nJ1RPdv81WpBrUd/S7YPHhs3
5vQ+7/r19ItOHq7ScYcZPrTZ37OHJtuNjU79V1h5p2l86dNvBfon2Y0FGQdn
PJhjVkQF9vc6mWQr//lxzK01dptf08ck/DLC+3x1+D9vpo6pm2xrPbU7fevd
u8yH/Q7HPXRVkp0yNypp8Ow95oH87Rvavl7Vtt5Zq1l6KNfkd/m4XuIfCXbW
wdrNapYfMsu6Jv9vSCDJnts/edIvr+02j/57a8twfjV7ydrrnLUn95vuDdaM
nzwyzg48suShd9OOmTEHe5+5/MpYu+DeUWNff7TA3Hwmp8rJY6l20b7nu5c8
tsFMHLf6mU+HV7e1anTs8+GEvebPsXt7v/NcojU7lt3wx+ig+bHH8/MDP1a1
dQ7OmfnXe7nmwMNtTh+JqmrXvDHxu9gvD5l3Cr955XS3BNt5wpyZ1yw/bIZO
f/Ovw8vj7T+hMzOe+eOI2VHr3SU9Uivmn8//+6b8r5BZe59ts3FRrN310vjv
3/48z2S2mb463CPGdm0yo0+oZ9g8aM7un7Mg2ha82elYnZLjJnHTvI7vlEXZ
YZvrZbWedsKctt22vnM21d7w7c07X/p7vVlXJ+fOmWeq2/LO21uc6LjXNB50
8NxvxxJt3Wn3vrPz8aCZ9MpFj9/TJNGOyN9yx7LeuebB9+veOPWaBLsj/92h
T351xOS+UHnp9lfjbdGsz+oO+y1kPh+5etfA12Lt4cknG8ROyTe/nBpyfMuq
GHvo0GtT19QNmzkX/dx1+7eJtkP207/Efh80xQ9G7XptcoxtN+ix1h+MD5ur
kzIb3PhTqh05vP13qY9vNN+bwyOj3k21x0bd8N39nTaZ9lk9/x6zIdV+Vr31
tMvKNpnDa1uuymmcaj/I3e2cqjifD37X8NrUSal2ROR6uCvfK93f9gnv70vM
++2KEz13pNj0rvf899CwbebchH35zzZKtY9FrpdbkDXjn0dGpdjBzUa8PO7B
7SbqpXsufaZ+ih2Uv+6KugOyTKfHtqafDSTbHaVTWpZPzjbftvy8x9fnvL/P
UPDcNZ2ajU22bTqs/2zfTzvM8y83mblmt/f9SZuep5f/t6Li/T8n98q3SnaY
HWur/RCemGz7RK6vm7pj0MeN+nvz2Yv9/jd+/CHv7yF8c9NdfcYvS7KpF790
6SsX7Tb1N6X1fS4x2a7r8mVCjym7zNnxz/6vwagkeybpi2enV8oxnTbHfhY9
LsmOjLp+x/NZOWZ+/ku99vXy5sea1cqfubdpks2p+cToy7vsMYMbj7iycvUk
uzLwdetLy/aY1nuTn1le5v09gJbNfrq03qJqdn0tZ9O8d/ab3Ny6sw/cW81W
eTrzgR1TDpg9t/U79egk7+/P7Nvb+fE267zr8fcseujz/G7e9Xdfdbh4TVJc
NTvn/Wd3nbo+aJ4pbb+vc4w3/968cmubltOr2pkHFv3au80h80Kf7gN7dvb2
p4PuvrLyiNne93Gxky6t3bDcu368/dvzjt/QI942i8zX81++vrTZR3G2Zev6
ptexo+bhAScv//xW7/q0el+22hPu483XOdtuadD741j7WodL0pv1yDcFNwzJ
+/dz7/u9Ec+GnN7XeNeDdR5XefjM57z5/NOPDhfWyYiKzI/e9VfmwMX3rfx1
o3mi55dr6+cl2YPLu6/a1GS3+ajda4sbdqluf//lnr6FuXtN04k7EhfeUrF/
Wf3H11+33GduWxe7/1DV6jb40fff7vt8v9ly9KGm0zom2uhJvx9utyBohiYt
fDLt86r243Yz7v5mZa5Z9dnzC+aGE+w9997w++d/HDLb9l76xs+tE+zmlCGv
3JZ32EQVTViydka8jR474Z6+lUOm1x+X9HjwP+/3lR+03RTq8FLF8dbCH51L
Tp40c5rV6n/kgySbPLGtSV+y21z1Zrfpq6d4v8fd+/Oc+A6Dqtnr72v+1PN3
HDB3t+8VSBvp/T738pUjW1dfGGdP78ybEffDUfN+9ulHr1/q/V534KgFR/9I
ibOHtg94smyP9/vPT55s+ut3FfP/dT/MnH/25xj7Rs/Lu22bUWAa7fp3bPCi
GLv09MIHPmh03MzOeujHb6pVLF+Q5bxzyXEz8vaVO4s6RdvPHxpw3bkNhSbl
qr5vbeju/V531cg/6wyeE2U7TP76o0YDT5oZ7zUd8dgi7/e7C5c99NepU9Xt
l59/tmJ2t73m8vFHf/pxv3f9zK7h799Q55pE+/IXZ1oNH55rpvXqVfruxgR7
2ZpGR8aPP2xGVj7TL/ryBFuld6czHy45YprFN+3mbIizGxv89udTrx819dZM
2VYzKc7OHTz3s+IBeSb+i/WtZozwfp/R+42Gn1yyPMZO6bWmMPPWsJnV/Pkb
X7whxvabE3r20t1hk/vIAievUox94f77R479/bgpbfbi8vcHRdvQuefyGo0v
NGvPtL/3yAPRduK/1d+IfuaEqTdpwrwNq6Ps9ZnTW8TVP2me/vjgH+fng26d
en3wevFG+X3p6tPnbh7fZpPZ8Eels3uXVbeXdT3+Q++/95qddapOu/yr6vZm
p3nB/Q33mfTT3x9dM9U73v8+7utG/SuO59pHfj/ZZnRUrw9y4u3qV48l/1Qn
ZC7OmnvL0g7xdvy6USOGX3nU1J7bsnnz2+NtVOT4/+akr3q32OId/x+f0y1p
3gOx9slhNWa/9ne+uat3zk1Xvul93jt2a5Oz/671fm9au/7Bb1emer9PnGaH
79jbPdX+3O34yTndNps+j1zeuaqTapcufWBiw55bTY3Dzt+rH0qxMTMvumfo
nu0mb+behddU7M+XL74/PrE0y+xMemr/2IXJdsLTsd+dq7vDFJYv/PfTHsl2
fP+k5xIf3mkeuXzsjVWivO/D9w9+ZO8PGd7vteuMiB238NEke+cNmW3fnZVj
rvji05b/i/O+H1+UebRDx0zv99rH6qy6+YpHve+7Od7rOKn+Vzmzvb/P9PK7
364YPu7/lHGm8VDubRyvNLuxlKVQJCoHneyccF0tJy0qSmVLpTJHpFI49orS
QpayZEmFdKhMi61Fp9CRcHJkC2MGY8Y6UjyIPPPCcT+fz/Pyend/7nvu/1zX
fX2/v2ooWq9zr2Z8Ac5n7bzrfe1vcJ5YT66xXoB19xKtUETkEWW7vIUIxbrZ
fkwxYstbefH13/k5XLFZVRZlX+iNtv1K5Pdo1RenO7AboIJuZ/3hpgxGbitL
Fp0h8nHG3y318ihpnuV9/NLcssrlCb6cNeVTFEhuhxu3X4eo5TKRv2hMRk6T
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
     "], {
      {GrayLevel[0.8], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
w8WdibjEv8tj7GOOa5J/m/Ng9nYrXN9hJf8anw3Pf7bvnPfI/ER8w+nziZgg
vsh3CcsPWGHw3kQcw+99Vvpggdcg9qDnws5jiZimFx9NxCX+Gz5f7v+JREzD
8kPOg9mHrXD9iJX8hYn6kP09l4hd9n2/90LsSa8H7y/4mXh3vmiFwWcScQy/
z1pZ6+lErBN7yXPh6HXfPft+LRGX+Pck4oJzfMo1yX/ZeTD7ihWuX7WS/7jP
hud/OxHTsLl+Gl+jQ/8O2yCV/hP2cSKO4e4TKyx85Dsm9o7XgOt3rXD9ZdhN
YTeHfZGIRfzPEzGK/6/v+0HXW2T/60R8w/Wnrgm/n1nJf8916D9+KPeg7/PD
RP3J/r5yfdb6JVFfcX6/WuHx50SsE/suEd9w/b0Vrv/yfcPCn4lYxP8jEaP4
33i/c32OC/0833qMdX9zTfj93Ur+B2FXed8/uCa9uEQqDuB38VQc4PNe5Os/
X8vLqZiGwVKqO8ZPUzENy0mqs8GvpuIG7lpS9SHMNlPxjb9HfF41bLWwSqq1
yamlyoPleiqF5UYqJT9LVZP+WzLV3vl6lacao0dbpapJfyyd6t0Nj8ukUpha
KlUesbapmIbldqmUs1gh1X3D4/KpzhG/Q3x+3+faOlUdemuxVEqvtEmlrLts
qprw2z6Vwlcx1X45058SvSth5UffD37HVPXpFc7ra7PQNZVy/yun4p4+WCWV
0h+dUzFNbPVUc2Fw7VT1YHOtVPXwO6XqB3LWScU0LK+RKg9m10ylcNQtlZLP
fdIP7G/TVNxwt11S7YXYuqnWg9PeqXqSHt0wldJnPVNxTx/0SqX0R49UTBPb
KNVcuOuX6hxhs28qDvD7e4x9rJeqJvkbOw9+N7HCVB8r+d1TnQ3PPyAV07C5
cyoO4GKUlfsZmooD7n9LK/c/JBWLxAZ6DbgeZIXrbVP1ISxvk6oP8bdOxSL+
iqnun3fkSqmUexqeimMYH+aasLyVlfzNXYf+2yJVT7KnwR7D3871WWsX16PO
aD8f/k5hy6Vif8dUTMPySI9xLmOcB0c/V4LlsLvDdjcHMLJrKl7hdHvvnb7c
zLxw1jt4jBpjvR4sj7OSv5vXYN09U/UGPbF3KtZh9vUsvr6FXRy2byp2YfZA
3zGM7+O5xPiNnLUd289z6Y+DPBd+x1thamKqr218TTs8FdOwfLDjMHuIFa4n
WOH6UCv5+7sOtW/w/qh5mNdm3Sm+P5ialIpdmJ2cinV67qhUfBM7NlVvEDva
c+mP4zyX8z7eCuOnmAlqHJmqx1jrBMfh90Qr/J5kha+TreQf4TMg/xjXZB9T
vXd65TLfH1yclopXeJ+VikW4np6KaWIzU/UJsdM9l145w3Ph6Ewr7JyXqlfp
0QtScQzXZzkOv+eEjUjF9blWWJ5tJX+G61B7WqreZk/ne23WPdXPROySVIzC
+BWpvs7B5sWpOCZ2uZ+b2KWey1lc6bl7hV1lheU5qfiAzYtS9RhrXe04/F5j
hfFrrfB7nZX8C30G5H8fdnvYHWHXe22Y+y7sNsduScXuBPuwCOM3p+L7EM+d
6Nitnnuo12UuLNxphan5qZiAzXtTsQuP8xyH37usMH63FX7vsZI/13WofVOq
nmRPC7w26z6dihuYWpSKXZh9OFUvwePCVHwTeyhVDxB7wHPh+hHP5Z4ftcLC
U6n4oMb9qXqJtR5zHH4ft8L4E1b4fdJK/n0+A/JvTNX3PM8z3juMf+K7hIUX
U7ELs6+mYhHGXwg727FXUvUAsZc8F65f81xYeN0KU++k6knYfC8Vu/D4huPw
+6YVxt+ywu/bVvJfdh1qf94S7/sW9dy7Xpt1n/Uz0a8fpWIXZj9LxSLvvw9T
8U3sUz83sY89l7P43HM5sy+ssPBtKj5g84NUvcRaXzoOv19ZYfxrK/x+YyX/
fZ8B+T+kYhqWf7TC7LD4utI2rF3Y76n4g+s/rNztz6mYhuVfrLD8k9cg9qfn
whG/+f9gKh7/TcUiPjVe872lmTiGzb+cB8t/W+H9Hyv5v6XqPfa3eKY1uNtf
vRdiWab1YLyWqX9gcPW4w64turdSJqZhuZxJYbmYiXtizfj8fCoe22RiEU4X
y8QHPmfGGM+TZ6pJfkumPBhvlUnht3UmJT/JdDY8fzVTH7LXJTI9E5yukekd
x721z8Q09zkpPvcJ6xu2ZKa5sLx0Jo7pg6UyjeEvlykPjpbPxCXMdsrEKwx2
yBQntkKmOJx2zKT07oqZFJZXyqTkL5OpJv2xeqb3L/teNtMY+145E9/wu2am
Z4LBbpkUjlbLxC7sd82krLVqJr6JrZVpLjyuZ17hdN1MfOCvkqkO/dElk5K/
dqY8+O2eSWFnnUxKfudM58FeK5m44G56ZKoD4z0zKcz2zsQ3vG+SiT9Y2CAT
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
hNOTfKb4p3iMfRzhmuQf7zw4OsEKOydayZ/os+H5Ty2KS3i8rCgmuJPLrXuE
neG7587PtMLUrKL4IDbNa8Dy6OBzFN8TxOfzwnYuisdzi+pJuD6nqJ7cyTW4
f95Ve1q5pwuK4huuz3JN+D3bSv7g6L+folYeNrOonmBPY1r0eUbY+a7PWle6
Bixc4dr4lxTFPX1wcVEc41/qMc7lKufBHe9fvifme4g55gN+ry2KUbi40Hun
P6YWxQtnfZHHqHG114Pxa6zkX+c1WPdhv0tOLendfbtr31BUn8D+LUXxCu+3
F8U3PN5cFNPEbvPdE7vVc+mVOzwXju60wuP8or6ewfK9RXEMm/Mch+W7rLB8
t5Wvh/dYyZ/rOtT+wfWos8Brs+4zRfEEa4uK4hXeHy6q3zi/hUUxTeyhonqA
2AOeS6884rlwvWswMK5FbD5dFB/UuL+oPmGts4Of3WNOKWxs2Okx9kTYk0V9
hp+nrOTf5zMg/0HXZB/Peu/0x6dFMXF92ItFsQ77rxXFNFy8UBTHxF4tilFi
L4fNLqpvXvdceHnDCpvvFtWf8Pt+UUzD5puOw/JbVvh920p/v2Ml/xXXofbz
RfUYe3rPa7Puc34mYh8XxTdsfl4UfzeGfVQUu8Q+83MT+8RzOYsvPPemsC+t
sPldUVzC7IdF9QNrfeU4XH9thdlvrDD1rZX8D3wGV3tt3ulw/73Xhrke0T9/
hP4Z9ktRvMIpY/f6bn8uimlivxfFKLFfPXe+85kLR39ZYTMpiUuYnR1cnRtW
5uf1jsP1P1aY/dcKR/yjFyj5v7kOtX8qqt/Y016x1p4tYrxdSTzBSLkkXuG0
XhKL3Fup9B/LtZJ6jFilpLn0RKOkudx/sySFzbYlcUmNYnx+vKi1WkqKw3Xr
+PxSUcwuVpLCVJuSlPw9WpSbx9iPRfU9z7N4SXuH69VL4oC7WrokXuF0uZL4
5m6XKolpYu1LYpTYMiXNpSc6lDQXjpYvSWGzU0lcwuzKJbEIgyuUFIfrjiUp
zK5YktLHK5Wk5C9bUh1qL1lSv7GnziWtzbpLlPRMxFYriVc4XbOkdx9nsGpJ
TBNbo6TnJta1pLmcRTefF/e/VkkKm+uVxCXMdimpT1hr7ZLicN29JIXZdUpS
mFq3JCV/lZLOgPyeJTENy+uXxCucnhOfR4TtFDa2te6wT1jfkj7DRe+SOIbf
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
V1VKfteqzoD84+LzZmEDwjaoam2YmxyfN3Xs1Hgnjw87r0Vj8M3d1oPZ82Ms
i8/9zSixg1qrD/o6n7lV10Bhc4uquITZoVWxCIMDHYfrQVaY3dwKR4Ot5Per
qha1N6qq3+izIV6bdUdXxROMbF0Vr3C6fVUscm9bVcU0seFV9RixbTyXntjB
c7n/Ha2wOaoqLqkxrKo+Ya0RjsP1TlaYHWmFqZ2t5G/pMyB/w6r6nufZxXuH
64lVccBd7VoVr3C6Z1V8c7fjqmKa2B5VMUpsN8+lJ/byXDja2wqbB1TFJcwe
VBWLMLiP43C9rxVm97PSx/tbyd/ddag9tqp+Y08Hem3WHeNnIjahKl7h9PCq
3n2cwSFVMU3sMD83sUM9l7O4OBi8qEX3f0Mw2QhbIvxjq+ISZg+uqk9Y65KI
9Qk9KmxSVZ9h9WgrTB1jJX+8z4D87cKWrIqP46tiGmbfC7si7Mqwk6riFU6n
VsU3d3tiVUwTm1IVo8RO9lx64lTPhaNpVticVRWXMHtmVSzC4HTH4fo0K8zO
CNvW+51pJf8U1xnive7l+z/Da+/g59jTsXOr4hVOL6iKRe7tnKqYJnZ+VT1G
bLbn0hMXei73f5EVNi+viktqnF1Vn7DWxY7D9SVWmL3UClOXWck/y2dA/nmu
yT6u8jPB7L1Vvct4z11TFbswe0NVfHO313oMfudU1QNwep3H8Ju1+PoV+kLY
jc6DqZurYhR+b7HC5q1W+nWuFX5vs8J4S3B6WbB4RHy+3jXZ09XeO3udFu/S
CWGX8u9xVP9jdn5VjML4/VWxeELYPVVxTOw+PzexBZ7LWSz0XHhcZIXZR6ri
FQbvdh3WesBxOH3QCkcPWWH5YSv5h7TWPue5Dv0B9496bbh+vCp2YfbpqhiF
8ed9r3DxVFUcE3uuKu6JPeO5Z/g+mAuPL1ph9rWqeIXBN6riD75echxOX7bC
zitWWH7VSv6zrkPtJ8NO955e99qs+4WZuCnsnaoYhfEPqmKR+3y7Ko6JvV9V
7xF713PpuQ89F04/ssLm51XxSo23quoN1vrYcTj9xAq/n1ph6jMr+W/6DMh/
zPfAHXzpvcNyUtNdwsJWcY/DWovZH8Lu9J1+UxXfcH11i8a/D+sZc3/k98j4
u2SeC7M/WWHq96p6Ejb/rIpdePzZcfj9xQrjv1rh9zcr+Q9FjdZhV/LnIarq
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
WOF6Wytcb2eF6+FWWN7eyv3vYIXrEWHLNcTvTlYYH2mF352t8DXKCuOjrfTB
cT47zux4K2c2tiHWYXmcFZZ3tcLyblZY3t1KT+xhheU9rfTHXla43tsKX/tY
YXlfK4zvZ4Xr/a2wfIAVxg+0wvUufib6dXxDTMPgwVb4PcQKvxOs8HuoFX4n
WumDw6z0yuFWvn4+wb9nFbYx5x/MdoTd8J9sEbOTwo5u/MfvMVb4PdYKv5Ot
3MEY751zP8jPxDOc4DuB3xnRN5PDnoo6JzXEMfyebIXfU6zwO8UKv1Ot8Huq
FX6nWeF3uhV+T7PC7+lW+J1hhd+ZVvidZYXfM6zwe6YVfs8O27Ehfs+xwu+5
VvidbYXf86zwe74Vfi+wcucXWjm/i6zwe7EVfi+xwu+lVvi9zAq/l1vh9wor
/F5phd9HfXac2Ym+E+7gmoY4ht9rrfB7nRV+51jh93or/N5g5c5vtMLvTVb4
vdkKv7dY4fdWK/zOtcLvbVb4vd0KvysFp0/zM4P4fJWfiV48trWY/f938f/z
e48Vfudb4XeBFX7vtfIuuc/Ku+R+K/wutHJmi6zw+4AVfh+0wu9DVvh92Aq/
j1i5g6u9d879Md8J/D5uhd8nrPD7VEPswuzzYWc1xOOTjhN7tiF2YfZpz4Xr
FzwXZl+0wuxrDbEIg280xB/cveQ4LL9sheVXrLD8qpX8Z1yH2l/67rnz1702
637REB/E3mmIXZj9wHfJebzdEN/E3m+IXWLvei5cf+i5MPuRFWY/b4hFarzV
UM+w1seOw/InVlj+1ArLn1nJf9NnQP57rsk+vvIzwW/a1F3ST980xDH8vhBs
zgv9Iexbj8Fyb75fCOsU/O4cOrK1uN4g9J8YW54/M9NQLgz/3BDH8PuLFX5/
tcLvb1b4/d0Kv39Y4fe5WLdz2HP8ORnvnb3+6Thc/90Q07BcaIpdmM2b4hIe
/22Ib2JZU89NLGlqLmdRbGouzJaaUthsxOfnGmL2H9dhrXJTcbiuNKUwW21K
YarWlML1X94ve202tR5ctzSlcN2qKYXfxZpiF2bbNKUw27Yphf12TSmcLt6U
0gdLNKWwwM+w3zRT/CwbhdOlm1JYXqYphdNlm1LYad+UwvJyTSm8d2hKYXn5
phSWV2hKYbZjUwqzKzalMLtSUwqznZpS2O/clNJnKzel9OIqTSn8dmlKYWHV
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
KH7/5MTx344Do43yigOja+SlYS4bx0xenOXjmMuL3cZ5hYPdhrw07KbjmMqL
XeKhH3Sef/u82oTtmRfHpEcecLB+HNfLi9FyHEt5XX8tjtW8OMavmFe94lfJ
i+MkrziUWT2vODC6Zl4a5kh73bzaBmkU8mJ3rbzCwe7aeWnYXScvDbvEQ9PG
iEdZ0GbIn7xht0le10D97RDH7fNidOM4bpQXf5vGsVleHOO3YV7M4tc0L443
ySsOjG6WVxwYbZ6XXhx8tcyLv5uCtxvD1i2L3c3zCge7LfLSsLtFXhp2iYum
nZAn+dHGOJcNuIbg+Vr2F8pqh/hxbfC6HWOcvPjbKY475sU0ftvkxS9+XD9M
UwbEgdmd84oDr7vkpeFijzjunlc7IY2t8+J117zCwW/rvDS87paXhifioatR
BtfxzhpzD197mOO9zNy9biu/md+2YXub133D9jGv+1nDbztrGG1vDbMdrOFg
f2u46GgNXwdYw+yB1jDayRpuOlvD0UHWcN3FGo4Ptobjrtbw2s0aXrtbw+sh
1vB6qDX89rCmHRxmDa89ranjw62p8yOs4aKXNcweaQ2jR1nD0NHWMHWMNVz3
tl7D5U19wHQf/wav/cL65sXosWH986rLE8KOz4vj/g63lHUQ/jPDdVYUHp7h
ZqDjwNEga3g8JezkvJg7LezUvJgd7HAweqI1zJ5kvYPjoQ+JvJbwDE5eHJ/q
dGH0dKe7ma+Da4PLIWFn5sUrxzPyYvYs/wanZ4cNzYvXof4NXof5N+bJjM8Y
r1F2w/0b/LEucl5ebeMMnwccnxt2Tl4cj7SG41HW7RxvlOtkhNNd6Of/eDYQ
di/Ia25zdyHafNgvBfE6NuyivFicGDYhL6bxuzAvXvEbnxfT4xwHXic5DrxO
toa/6WHT8mLukrAZeXE8xeHg+GJrOJ5q3cPx0Ac5z3FO94mwx/NieobzgI+r
w67Ki9c5YbNdZwvC5ufFNH6z8mIUv3l5MT3XcajnSx0HLi+zPt5pX5lXOyGN
mXnxu9DhbizLDbuHRt91U+j12O8N981xXJRXe5vpsjjG+ZM3TF/ja6D+V4bd
mxej14ddlxeLN4YtzYtj/K7Ni1n8bsiL6yWOAzc3OQ4c3WwNf7eF3Wo+VoTd
nhfLyxwOjpdbw+4t1kMdD32K8yS/wT6XxXlxfLvzGGQ/rg0u7wm7Oy/+7g+7
Ly928bsrr/n2fb7+81wGxIHZBxwHFh+0hsfHwh7Nqz2Qxp15MfuQw8How9Yw
9Ij1eMdDn+N4d4S9GJZEmygXxPTjzuOFvPxKBXH5TNjTrkt+ez4vdvF7Ki82
8XsuL5afdZyZzoM4cPSSNTy+HvZaXsy9GfZGXsy+7HAw+oo13LxqPc/x0NOd
J/lN8bk8mRfTbzgPmPgy7AvqlOe9w1a5nj4M+yCsXfhtGXZrWVzi935ebeC9
sHddtx85DvX/sfVSp/152HLeS5NX24DZTxwORj+1hqHPrG9wPDTt6i2XxWRf
B+0fjr/yNVA3DVEnjQvi8ruwb12XP4f9lBe7+H2TF5s/hv2QF8vfOw71/4vj
wNGv1vD4V9ifeTH3T9jfeTH7m8PB6O/WMPuH9UrHQ9/mPMlvmc/l67yY/tt5
3Gw/rg0u14hralTQNafjmCqIXfz4IDts4sf1wzJlQBzKKVNQHOo/W5CGR/gt
FtQeSOPfvJjNFRQORvMFaRgqFKRhinho2tW/Lgu4rBTUZuCyWpDeLuyksBPD
buO9LgXV42HRH94euklZvNbDv1YQv2sWpGEaP9JaJ8Kv4B0yBTG4URw3LIhF
jhsUVE87xHH7gvjbJI4bF8T0+nFcryBemxSk4Zd4aNoE57ZWQXW5Y0Fp0U7w
45zgtWlB6VI3W8SxRUF11bIgDa+bxXHTgvhtXpCGafyaFVTnWxYUBy4po20L
4mKbOG5dEH/bu/xoG8Qjb/htVVB8eN2qIA1PxEPTDrluyoi2wTluXhCXOxV0
bdRTp7ADC6q/3eO4W9gxYfPC5hbE7s4FxYHfXeO4S0Ecc9zZ3OxRUHx4bBO2
p5nbN2wfM4rfHuZyL4eD072tYbetdcrx0LSH1gXlXfb5HlBQW+F8W5vXdmH7
mbnOvja4OcgaZjuG7V8Q+wdYF+zXwfx1cZwngrf1wu4K5u7kPS4F8UF7aO/8
8o6HhteDHR9WulrDTjfrjM+RcqFfpE7go330r1uF3c0abhyHhR1aEJtHhB1u
5o4OO6ogXvHrWVA943dkQe2gl+M0dV0SB3Z6W8PCsWH9C+LvuLABBbHZx+Hg
ta8159fPenPHQ2/kPMlvfZ/LYQW1gQHOAyaGhp1VEJuDwgYW1K5OCTu5IF7x
O6Eg3vGjv6A90GcMLojXUx0HFk+z3s1pDymoDZDG8QVxebrDwekZ1jB0pnVr
x0Nv6XiUBYye7fOG0eFhwyjzYGElz8m4Ds8LG2UORlvD7jlhIwpi91zrvexH
WrAyxnFgeWzYRQXxyPHCgvopyrJHQeyODxtXEGvnOz7MXmDd0fHQ+/q8RhbU
hkb6PDo5DfKD7wlOlzymhU3FHdxNKvwfu7gnci7hf09c++SCuCTsxT7H6Y7P
uJi+mD4VFmb4NxiZHTaroD5gmMu3i9PmPGD5EseB3ZnWvRwPDeNznBbzbcZ/
jAfhe65/4/lIntfh+R0YvSzsUtfrorArCuIYvwUFcYrf5QVxvdBxYOFKx4Gp
q6xh8/qw6wri74awJQXxe7XDwevisGsK4vda65McD32s81zodN8NW1UQ30uc
BzzdU9D8DEZvDrvJZXdr2C0FcYzfjQXxit/ygrhe5jiU922OA3+3W49y2ncV
1DZIY2lBnK5wONi9wxqG7rQe6Xjo0xyPsjjL+ZM3fN/ra6BuXg57qSBOHwi7
vyD+Hgl7uCB28buvIE7xe6igNvGg48DKo44DO49Zw+PTYU8VxNyzYc+QVllh
4LhntN/7Q28YtkG4H+AdLAVxTLwnC2obDzm/830uKwvi+xnnMcZ+XBtsvhj2
QkH3zFfDXimIV/yeL4jNV3z9s10GxJkf9prjwOLr1vD4TtjbBbUB0niuIGbf
cDgYfdMaht6yvtzx0DMcj7L4PGzzYvTlRTG9ynl8VpDfZkVx+VHYh65Lfvu0
IHbx+6AgNvH7pCCWP3acpc6DOHD0hTU8fhv2TUHMfR/2XUHMfulwMPqVNdx8
bb3c8dDXO0/yu8bn8n5BTH/nPGCiUVzH/4ri8uewn1xPv4f9VhC7+P1YEJf4
sfYBy784DnX7h+NQ/39awyNp/1tQeyCNHwpi9i+Hg9G/rWHoH2uY+tf6dsej
LOgv3iuo/cPxGkVdA3WzfhzXK4rLTBzTRdVlIY75sHOjTz4nLFUUm/jlimI5
W1Qc6r9YVBw4KhWl4bEWx2pRzK0Zx3pRzJaLCgejSVEaZitFaTgmHpr2QJ7k
1yHOZZuwh8timvTI46Gyrusxc7luuNcp6po3iGOTotjFb+2i2MSP64dlyoA4
1PdGcdywqPrfuCgNj/C7aVHtgTTWKorZTYoKB6NNi9Iw1KwoDVPEQ9OuiEdZ
wGWLotoMXG5RlN4/7IKw84uqv23iuHVR9bltURpet4xjy6L4bVWUhmn8SAt2
tisqDgzuHMedimKR446up47OE/52jeMuRfG7fVHx4XWHojT8Eg9Nm+C8tnJd
HuC0aCf4cU7w2rqodI+Iensk6mkvyij6xsfDvXdRvO4Rx93N/Z5FaZjGb7ei
+NsnrK257BDW3ixybGf+9vdvtA3itTbT+zo+vO5nnXU8NO2Q66aMDo/zbFNU
G4HLA31t1FO/sL6uv65hBxc1fqVvnW+WOzkO/B4U1tkcd/Zv1H83x4fHQ8K6
m7kjyN+Mdnc4uDzU4eC0hzXsHmYNyz2taQ9dnHdzn2+fotrKwf4NXo8M61UU
c/19bXBzrDXM9g47pij2+1g3s9/RRbE2wHHgclDYwKK44HhCUe3hKOfX1PHQ
8Hqc48PK8dZbOR56I58j5UK/SL3AB0wPdn4weqI1XJ8adorrnvc3nVEUs/id
XBSL+J3u+j7NceBliOPA3VnWTYPVp4LVEUUxNDLs3KIYHepwnNPZ1k+U5eZc
j4i4T4beuCy+Tnd+O/hcTiqKadI7x/U9JWxyUVyPCRtdFH8XhV1YFLP4nVdU
e8OP/gLuz3cc+BvrODA3zrqr055UFPekMaooNsc7HNxMsIaVidYHOx56X8ej
LOD0Yp83XE4Lm+q6WRx2jet+Tths1/1ca3idETa9KO5nhl1SFNPTnRa8zHMc
GF0YdllRXHO8tKi+6SRzAItXhF1eFKfzHR92F1j3cTx0L5/XrKI4m+Xz6O80
yA9GFzld8rgu7NqiOL067KqieOV4ZVHsX+PfBjvsYp/j9Y7f230GYzpYWOLf
YOSmsBuLavNTXb7HOW3OA5ZvcBzYXWp9muOhYfxmp8W3jn7w92NgenlR7zWD
11vDbgnbP/q97cKeLate7w67K+yZssLA9Ln2uzPsvAg7KmyFWbjHcWDqXmvY
fDDsgaL4ezjsoaL4Xelw8HqfNfzeb32B46HPcZ53ON3fwn4tiu+HnAc8vRL2
clGMPh72mMvu6bCniuIYv0eL4hW/J4vi+gnHobyfcRz4e9Z6ttN+qai2QRqP
FMXpcw4Huy+EPV8UQy9az3I89DjHoywmO3/yhu9XfQ3U29dhXxXF6ZthbxTF
36qwd4piF7/Xi+IUv7eLahNvOQ6svOs4sPOeNTx+HPZRUcx9GvZJUfy+73Cw
+4E1LH9ovdjx0AudJ/nN97m8VhTfnziPefbj2mDzy7AvimLw27BviuIVv8+L
4vIbX/9NLgPiHFlReFg9KtzP8ZxMUTz+EvZzUW2AND4Lax5974sR5vuiGP0x
7IeiGPrJ+k7HQy9xPMqiUSnGKWFtSmL6V+fxP/vtWRKXf4X96brkt3+LYhe/
P4piE79/imL5b8d5xHkQB47WKEnDYyaO6ZKYy8UxWxKzjUsKB6MNJWm4SZWk
4Yh46AedJ/mt9Ln8XhTTpEceMLF+HNcrictyHEsl1VMtjtWS2MWvWBKX+FVK
YjkpKQ51Wy8pDvW/ZkkaHkl73ZLaA2kUSmJ2rZLCwejaJWkYWqckDVPEQ9Ou
8iWVxb2+jt/McZOSroG62TGOO5TE5cZx3Kikutw0js1KYhe/DUtiE7+mJbG8
SUlxqP/NSooDR81L0vC4ZRxbhh0ZXL0cXDUti9nNSwoHoy1K0jC7RUkajomH
pj2QJ/nRrjiXDSjPstL/1m0PP64NLreP43YlXfPOcdypJHbx27YkNvHj+mGZ
MiAO5bRLSXGo/11L0vAIv3uU1B5IY5uSmG1dUjgY3a0kDUO7l6RhinjozaMc
Xonz3tpc7u02A5dtrfuEXRq2wPXXIay9OegYtr953TdsH3O/n3WD/dqavwMc
Bwa7hB1kFjl2dj31dZ7w1zXsYDN9oOPDayfrxPHQWZ9XO9dlP6eVsd9+5rWb
06VuDg/r6fo7whpeDw07pCR+e1ivbb/u5q+X48Bg77BjSuKC49El8dfHv63l
eOQNv0c6PrweZb2J46Frvm7KaH2f42Elcdnf10Y9jQgbHnZ+9KVjwgaG++Kw
p8KeLIndYx0Hfo8LG1ASxwP8G9wMDhtUEo8nhZ1YEnOnh51WEl8nOhxcnuxw
cHqKNeyear2T46FfKytf2kYbn+8wOIjz3SHs9bJ4PTPsjJKYO8fXBjfnWsPs
2WFDS2J/mPXu9jurJNZGOg5cXkDZmIsxYaNLag9DnN9ujoeG11GODyvnWbdz
PPQuPkfKZT3XCXzA9IXOD0YvsobrCWHjXfdTwiaXxCx+40piEb9Jru+JjtPd
dUkcuJtqDaMzwy4piaHZYbNKYnSaw3FO0605xxnWPR0PfbDzJL9OPpexJTE9
y3lQ34vDrimJ6/lh80rib2HYZSUxi9/cktobfvQXcL/AceDvcseBuSusBznt
q0vinjTmkFdFYWC0d7jf4HmYcG8Z/dXbvKujJNaJd1VJ7WeOywJOr/V5w+X1
Yde5bu4Pu891f3PYTa77ZdbwekPYkpL4XWp9iv1IC16WOw6Mrgi7vSSuOd5W
Ut801hzA4p1hd5TE6S2OD7u3Wg9zPPQZPq8bS+LsRp/HOU6D/GD0LqdLHg+G
PVASp/eG3VMSrxzvJq8ot1VRbu+UxeUDLgvO8SHHZ1xMX5yYhYf9G4w8HvZY
SW3+OpfvKKfNecDyI44Du49aT3Q8NIw/4bTO8hiQ8SN8P+nf+M8q/8eelBWj
z4U963p9KezFkjjG75mSOMXvhZK4ft5xYOFlx4GpV6xh882wN0ri7+2wt0ri
91WHg9fXrOH3detLHQ8903mS399xvgW/83Ch0yMPePo67KuSGH0/7D2X3cdh
H4VtFfXyYcR9tyRe8fuwJK4/cBzK+xPHgb9PrW9y2l9ybZHOe5HOpmVx+pnD
we7n1jD0hfWNjod+t6xyoL1d4/zJG76/8TUcUtZ3dfheFJz+EPZ9Sfz9EvZz
Sezi911JnOL3U0lt4kfHgZVfHQd2frPepBbs+luozcLd1N+a/LisMHD8Rbj/
iGMHvrca7j9L+j7wV2V9K5hvlq5wnuR3i8/lW66hrLT5LuVy+3FtXcr6Lhbf
Ofu5rO9d8H2A73h3VVnfv1rKerW/hfE9a9RlfUeod1nfK+CbGb/EMV3WO9TP
8LsweZ/qt3H8t6RvuB1b1rve+VbBdZHmton0iWW9n5j3a/8Rx1xZ74j9pqwy
4PuHzPv5Hidz/xuZ4ydijt/45ibfBhzld27xzrjJfj8B7934J46lst492BDx
Nq3pvTGNwp343VyZcNf8bodL/D9j/kN+tZ8B538NNT9jzjO5+XCv6f/tzvd/
y/hv5JI4t10S6VIc1/Z/zS4q6701vAvp+gizfaL3Md4U7l2d7kdhm7kt3BD+
uyd65ucxr72x5nyLnwPiGa8N4/eNvDe3brg38DM/N7P2G3qT0M18ZN1vefjv
kyiPteK4vp+xfMHzAOahy3iXefzWLHQLHxkbv+W2xT3oBj+nyTPAQ8u6Dt6F
OijCfxru5mV9h3r3sr5FPTRQasF6YhxbUg9hz60RbbIs/z3C//VE/i3tt4XD
E65VuJ/1cWvYaizu+cb66Mb6VvvOZX2vnd+2gSEftwtr11jtZvuy2g7tiLjt
w33JGspzRhzvSXQNmzsO6fL99zb/0zXt9T+1Mb6dfbePfEt7lNvjrnbTFvEn
LOdEWZzrdsr3i+9srHaIm2/D0jZh+Edf0y4+tzv8LeQVPu5dVjugHfMt5NVp
tHWa9AfEPc9tpV1Z36+lDbV3W6Gv5j2c36bVLvkOKG2Tb4Hi3rpB7a6D3at/
G+h21t7nSbvmW43HN+h7jvQjl9t9UNgVDeov+R4ZfSZ9Cd93pD/BiMt3845z
HL4FSRqdHZfvnx5Q1u98D43vor3ToOvht1ZO42CfA9/yO8R5TU3kfrtB58Rv
fOMPv272p//iG398Y43+jG/+4fdZom+qrZNSWrjf9LGn/ekbibvIaRxqN31j
D58n367CzXelJie6Nq6Lvra7y4rvYPE9LL4dNK2i71/wDQH6Vb5FNCml8Sv3
+afDOlV0fnwrCzuyrG9mvZHI3cvxjnHcSxKlhZs+mu/E8I0YwuCPH3nzDSPO
ZYrdfLOFewHfXpmcUp+Om29l7JvoO17d3edzzo+ndB6k29X58C2bx1Lq6/me
xyP+NgjuNdK6V/B9l9VpD3BecxLdJx5zvBMcHuMbDKTRP8qhCe9LKuv+07/8
f9dHXPLMOC5uznGgz/PESP/XsuIStp/z6uZ6gQ3uR+TVxnmiuTfxXn3epX+2
71O8q3xYuL9M9Bv+3Ld4xz7vLM86PHF5pznheSd0l4rirH7nOO+SXu4j75H+
hv8eJLqPnm47w2H3S/Se9NXpnelzoDzId6/0/50r7/+nfx7iNFtm9E5V3qfK
eZztdOi7ee8w7xy+NFEcws+oqK/gHavfOfz3fq8w4Vv6OMLu4yL8hmHnOk/S
Ie2iw+DmPsy7gLkXD7ObvuikRPdp4uZdDlwv93TO+dgIvzCRxj27ove/8a4s
8uQdmwPCf6bdvC+QcQDv5eSdnJfZvZB38UWYHjW9S/bkROOAC2jDie7Tb2b0
/kPc3K/nJmIAHr5JFIf3JQ6MdDauKO5CxyEf4l3odBiP8C7Q1ecyxmFvi3j3
OR3y4D13vOPuxPBvGjaxrPHC+P/vd9xrZZUn1/5W+J+SaEwz0b/xnjLeUTbV
fQbrIIyF8O8W/t8mijPF5TrK50accf9fGsRh7HR1Ijdxb49873fcrp6n8M6o
e8t6Vohn3vDj3VDMX9pG2IFhreIcTk00xppe1vt5GGMxvppb0Tu1Lva4i98e
D/cp4b9pReGvTfQb/ivC74FE7/NhjDbb6cyv6D0qvJfiu0T5zfRvvIPmUb+7
BXdjH2fb/d9cq6y51/JEY6y388qfNJ8I/yHhbhF2eVnjPd6hsxf/a43wpyV6
PwZp4U8+d0TYB+0/z3EYH2K8m4D3Epxt97A4np5ovEj6p0fc5mFzy/r9ModZ
y27S4HfeY7A3adjN/8I5F8amxF2SKF/Ok/j8n5k8Gbfx3xv+d/NWojEu/93l
/7r8b5f/IHaLNH9I5M91439b+LdLNF69qqwxMf/D5D+YPydyb5nXOJn/prUK
96EV/cZ/xvj9WodZx27SIL/rnD9ja9z8j428r3aYpK4y4r/w/OeN9PmPEefI
dd0aYdon+l/ccb4+/k90eV55M2bluhf6t8udxlKf53oOTxjSvdnpwMJy8/BI
RXm05h0SFYXhvx1nJBpPL6N8w79lRW7yIC55vp3oHDiXVEVrgseX9Dt5MJ6n
neDPOiHPT/MfgHXieEVFz/PzrCvh8Od/AS3t/479bnf4MxPNB+6AiQjTqiL3
qkRt9R7bvW6zxOG5bfL8PZG7e7iPSzQH4bnunhX9Rrwmzotz+S3R9fOfl0ui
jjqEe4+wv8KGJHrGiTx4vpBnC3mGkOcJeTYY4zlh/Og/7nfYxxz+8TheWVF4
nu0iPeY8D3L+4X9YTelzfaRzSIQZGe6tKwpDfJ6pIr2/E7kbxxznUd5hG3pP
zttlMjfSuiv8H/e19KooDs/6bFvRHtztRaXNMz8NRT0jwXMRw4oKxzyNOdrZ
/g1/ng0iPM9HbOzwhEHzPAa/N6pof/q2cN/LnmCi/eurKwrDvvFZieZyT4ce
XdE5Pe08iEueezlfntnYP9Ec8NHQs6JeTgj3XqyRJDpPzrdjorne82XN/di/
Ye/mg0RzQvYm2Xfk2tljQb/gsDBK+FY+vmz3Bcxtw14NfXRF10a8pg7znfcv
X3HaiytyswY/NNGck7j/q+iaKYeVlH+idfKGisLhPjaO5UR9G+uhrIuyzsQ6
J+t8rHt/mGjuyvrpAYnmv2+Gu09F7RD/VonCsy7KHJd1pEVeF8L9TklzH+Zp
zLl2rGi96YOy4q1yXqvjsI70fllu4lIenNsJ4R6XaH7F3Iq833JenDfrYFzH
axFmcKL58U4VzY0/L2tdk/Ug1oKGhd8nZelXw313ovWDcxPNb9t7bsick3no
+YnczBMvSnQtzOPedb6syzH3JC5z5FGJ5rSjPM/FzbySa+LaWC9jTsx8P6bO
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
W+2E/+/ZiZzeQcz7h3kGYCNzfqvdlOctFdUrdXpnRdfGdbFWSb3yPY0W9odt
1tboC+gHuNaWvl7GomN9vexb8n5Y+vbbfS1cO+u98LN3Wlxsajaa+Bxov5zX
hj431oFx811QvqtI+qzT0mfSHuk/6TtPM4ddq1Ffda0lvBzuRnU9m3lIuNeo
a93ik3BvV9WY5OA4/lAVb63j+GVV99NX49i4rucoD4vjLzXtlX8c/ltXNXbq
Ef4/17TXv1P4fV7V/XqrOP5V077M+uH+qaZnGA4K9/dVcfVhHDeqam2H/uo4
18uGdnO9syp6VoNvSV5SUbgt/QzJAIfBn2dQ+Nbvv75ncf/aL9L+pqr78kdc
X1VrWe3i+E9NY4/9w/1vTffETuH+rqo1yXXi+EXYSbT7OH5V1XMgTeL4a037
9Rtw/nWNU38lXl1j2kXh3qSu8e4v4d6wrnEC171mXdfOeVXrOrdsHDN1rXkc
Ef6putZCmoW7aV1j5cPDvX5Na2ZvVRWHZzDfCHe6rmc554d7g7rG3D+Hu0ld
6+rMO9ava+zePPy/req9WJvG8fea9jE/4FpqGidvGO6vq9pD3wIWvH9KWVPG
fMe1T6T3d037a8yt1q1rnvBjhF+7rn2HnuFet6Z1I/haqy7Gfgr3enWt7c8M
9zp1zZ0YdzMOZgxMW+jvNsL/Gvq4L2U8wx4zYyT2z/j/A/tivE8Jf8Y5vHMJ
PdnjPZ5RoA/g3eO4Gftx7Gp/nm/g3bjs6fO/S/5vyf5jS/vzvtxv3Id862NX
u/n9EMc92nHpGzke7f6WPWLeB8FYizEPz6Cs/oYKR74pwVirl8Mc7vDs067W
vJ+hjd34H+dr538fjZwX+bIve6TPnzRIk/HbrfbnvwTsr/dw+XSzm/dTcR08
h8G4lP6Ob2A95WdsTnYfOM9uxgb0RQPd19FOT3C/NNBu+nCMtsv3NqdXdL/u
6zRIl3sldYxf27TCMO5p7Of3+pmBTR1+9TnwPBDnxz2CZ6G4j1Aevc1DH7sp
p57mgWtljMw1tvQzJ4fY3c+8DfL9to/jzqlo/MTYabDz4n50ov3JlzA8Z7b6
u4wcD/XzVwNdDvlgPFfX2iRzQeaQzA15VnTtisbw3Le4f/EMA/NRnl1gTso9
CGbo5xlHcZ8jLPcT7iv0vbQ9+uLVbvy513B/YfxBv805zvG10Bfgz32Htsc9
mHso91Pc9NWEod8n7mDHHeRyp/x5Fou6pX/mOTrqdJ5/P9Wc85wVv88yG9zL
ZtpNn03fTX8+wO5jnfY8M8Y4Ya7dg1zO65o90iT/Cb62/66rrDJknMl9mbEI
/Rv3be7r9GmsZfG/AtadWJfjPxWsxbFG3cz/p2Cdb2Ov9XFPZnzAvYDz47x5
1nFMlM2lVa1NrPS9k/sma2Lcb1kH+62m/pR8D4jwC6tav2DdZT3fU7hPcJ6M
HxjfMt4dY2PcyzMPjAcYrxCe/p1x5OoxJO4Fvu6rfO2kT/gBq9ejKlpTYrzN
3GaUjTnOOX6+gnwZV7PXhv8IP3+x2P5XOy7+1O0CM8n4n7kZ8zLGRczdGG+z
hnF/Rfdi/lOQN//ct7K+37HutW9da1+sNT5Q0Roda2+b1bT+xprQpXWtk3A/
vLyqeyJrMCvdjlg74ZkY7h2s2Rxd1/iWda+HKlr7Yi3oyqrWg3j3A+EZn1A2
91W0T3JK5LdL1c/+hnvHqp4tYDzVraoxFWOoQ6saR3H/X1DVGGCXcD9a1TyB
/2U8XNE6PefJ/ZJ7Jf/j5Jxxs4b3YEXreNPi91pNz46xzje/rrW+wYxTqnpu
e5vwa1HT2uvAcHevah+D+S7zX57rY17GfHi1H+7hnl8vcLtkznKp/dkfZ069
yPNs3DyrxlyWeuRZsv/eo1nRmAG/Ra7fha534g63P/F4ZxV9F2OGU+I8D6tq
76VPnHuhqv8n9A13qar/HvQOd66q/4H0D3dS1TP9J0bcHlXtz/A88KlVrb0+
UNMz8vx/oFWEuaGqtbnm4b6mKu56RZh0Vf/r2CL8r62ai/DPVvU/kH3CvUZV
a12Hs/5X1f9G7g/3TmEdy1p32slj2h9rGhfSD8APeyFPu07Z22DuyTrXAeFe
K6V50/5mrKv9u/l4oN2d7CYeRzTrWszLOpoT5jydaV8+Mrfhmefl1rhZB+rk
dOgr2AdiLE29UX/MYTnnbd1GqCPWNbi/tHIY5svsgxNmhZ8x287hWX/Ywde4
0m7aHet8PHvEOiH9JHtRg5zGdi4f1sCJz3oF8bZ3XPZtOpgT9q/auI/l3PBn
fYD1ctaduU8xx6JPZz2BZw84b+byrGcn7g8fcHjGvNwHWb9evfaPm3si/wNY
p6K9jC4uT8qYteGay4Q+vVLRHJA1ddav6Z/Z12rvtsCeEntLC3x/Yf+JuSF7
buy9cQ9lL466oN9mjZE9PO7RlHd7lzn3cfwZV/DMA/WS8tyWdBhfsSbJ/hz3
Yva4yIt7Cvd3/BlHUTbtXD7cFzg31hNYk8Sf+yD/XVirov8vbO22SjmzDs3z
aqxLDwvOn6lqT+TUcD9Z1V7J0HA/XdUeDfuDv1a0RzaT/rum5yXHh3txVWW5
abivrmrt9Yj4/eeK9rZOCvdfFe2nHMX+SkX7bqzJL6lqHrBN+O9W1v+ihjOP
rGofp1+4f6v4v4LhfqKqPaylNc1jmV9cFO5da/r/ycM1/a+F/7osqWn+yfxr
KvOSmtbtr65prshc7I+a5kjU7/Hh/qOiPbUB4f69on2r+8K9A3Hgs6Z5I3NG
xmzMl+B5RLifq2rP61729+hTyrqmzyr6rxfr8KzRM/f8w27mL+zvsc/H/JS1
INbcmfuwBs9aPOfP+gxu5hes37OOzzmwJryz+xD2B9gnYEzCmj3ptPT8mPDM
C95wePq3rxyeNRPWtNkzYK70i8+HecHouI4Xq9pXGhnu/1W1P3VPuFuFbUvb
jON2YXuFu03U6f9quq/fY95oXweGf+Oa7n8949gybKuy9ijIl7o4OMKkarp/
M29gbtDYz8gxBmPc2M/+zB/eqWqMwViDuSz3e+azn8JyXff4Y8L/04r2c5+q
6D7BPeLIOH5c0b4t+5oDqtpP3T7inVTVHuR///Opau/wwQj/UlXt6PGK7h/c
O0ZE+IurGrOwFza1qj2c5yq653G/OzaO31S0J3tcuL+taA/3+Yruf9z7+kfc
/lXtoQ6K40sVPYvYuKryoqyeruh+xr1s56rGLoxbhsTxh4r2KF+hPmv6X9Cb
cSzX9GzCG3Es1vQswA81rS+wtrAq3JWanndgLadQFxtvc1+u6TmFkeHXrqbn
JL6taZ7PHP+Ziu7l3McXRpjfqhr/nRh+31W0R/x3HP+u6r87a8fx5Jr+c/VI
HF+pqk9mfPNCRfWwQ1XjMMZgL1Y0HmIsdFykf3xVe9WUy8Cq9mifrWicwRiD
/e6vKto3z1TVDmmDjAUYHzIeoH86sq4+inHlEV5vuSLcvbyGc124j6lrjDkq
3B3q2itdWtW4jvEdY5DedY1DGP8P8Jpbo8izfV37qnC0Y10sbVvV2OUFj223
8viWZ0O3dxjmKdvVNVf5k7FeXfvyIxk3+Rz+YMxS1z77nxWNESm/VxhT1fQ8
C2V5bF3lyfi0X11j1Ab6w7qeGexWV3ujrV0SYQ71mkw6whxS114wY9LuHpfm
q2rntHH6E9bd6H8uCv8udY27GaPBMQy/EP6d6xoXXxbujnXtfd0S7r51PQ/I
OPpwr6fNg3OvZc2pah7KvX1WVfNc7u1rRP771/UfkU2qml8xt5pXV/9C38J/
qLM1jSHrdeVHXq+FX76m53coS+qV8uSZ1yFVPRPQOvzPrOrZgj3CfXZN8xKe
Nx1a1bMF7KFeWNVe+56EqWoe0zbcI6qa31AeY6sqk0ZVlTtlzh7hmKr2+BeG
32U19dO3VbUPyX7kinBfVdP/h+4K97U1/Wfitbiuc2v630sH5pE17SOdHnmN
rmpu8W9FZUT53Mo11fS/NNbbqGPqd884TqzpWc9p4R5X8zPMEWZSVc8BDAn3
+KrmJamq+nr6+V3DPbamZ5HXDff4mv5neCNlUtPzPGtWdT/mXtwm3JNqemZ3
erhfroj3tuGeUtPzr7uHe0JNzyvPqGo9kbVE1hepe+p9L/rFmp4Jnl3VeiJr
iaxxwgqczK1qDZT1T9ZE4QmWbmS87zZ7aaSxoKb76pHhf1NNzyGdF793qOm5
se2rWitnnXxS+Heu6fl07iefVXVPuSjcB9T0TNUTjCdrGg+PDv/9a3o+bOOq
1rtZ674m/N6s+Pnemubq7Ossi+P9Ve1L3VnTeILx6KhIp31Nz6JdGcdXK9qb
5r9O3Wt+5imOXWoaR9/O/baq8eti2m9N49YrGCPVNCZ9m7FnTfOCzapa/+Ve
uU1V6/us7c+K32fWdE9uUVc/SB/I2jb9I31js3DXa9qXpk1Xa2rXy+L3OTU9
7/xkRUzAA219fk1tcEa4SzXNk5dX1ZZ4LmFK+K9V03MT18dxVUV7T/w/pVNN
z8ltWdWaPuv5N4TfexXtYe0WfmfVtJ95SRxn1DQOos7pr6n36eE3raaxD/eB
zb1WwP+S2tb0TOr1VV0z18tzgNQB5X9FXfd1nsdgTMrzhYxLV4X7HI89xlXV
ZmgvO5knWJpS1fiAsQH32A19n6X/framPpyxwDM1jQfejvDD6lov4b7dxPdu
+rzX3a4pm6F1lQ9lMLyucniTcqhrX2BiVe2Ztsw9YW3fF+DopLpYgscz6mLy
vKr6EfqQ18P/tLqet2Gs/VxN423uRS/UdD9iHLGexxKFmub8zPd/jLgn1/Wu
C8YjL9U0JiE91qRIk76ZeT798351xSE8fcOguvoH+ul13FfvGn4v19Svvxbn
M7iu/SnmKC/WNE85Kvx6eeyxQ7g/ren5MfZnvq9pj4b73nfuh0+lPKtaB9qZ
dl3TPi/3q58qumcxXnu6pjFbi6rWGlhnoH7Yj6GO2G/5pqY+Z7dwf17TM2n7
1DUfZY2L82VfjXNmn+SLmvo39kO+qqkfY7zwdU1jhr3qmr+yJrZ5VXMqxiqM
VR+vabzKuImxAmMn5lWf1Py/+br2/xiHMFb9uKbxKnOaj2qa1zCn+bCmeQ3z
KsZMzK0qVa2zsMZSrGrOw3yHOd/7Nc37mM+9W9Ocbq2q5lrMsxhfP1HTGBse
36mJyXJVayusqzDne6+meR/8vlUTw4x3vq9ozMN4c4OaxpywzF4XPLOPN6Gu
ts8+5H/PcpW1Z0WfyLwYXqbWxQysUcfU7+XwXlffQju4uK628FZF/RF90aI4
XljXWtyVcRxX19wWphjXwhXruJd5vEH/N7auPpB9wnJd83326+hTGFfTPqbX
1UbY8zy/rnsB13pCXdfLGP/4usazzFkZ4zK+/acqLmHy+araCW1keFXjDMYY
jKl3qmtc3aqqNS/Gt7+Hu2VdzzP8VVV7oC2w5gqXMMk4ZV+ns3ddczbma/9W
xTEMMw7ava6x0BlVjY1wkx/rnownn6qqfdI22UMu1TX3/O956LrGRYxrGEsx
jqKPv9x18Q9xalrvZR10kcufPdhiXetCV1V1v6Gc6Ttn19V/sp9Zq2vOTh/M
PJB+mDHLfPfDzBXmujyZn13qfjhT01oq66iMdxa4n/ygor6efp552Jy6xrHc
3y6o6x4Hm9yT4PP/AREgzNs=
          "]], PolygonBox[CompressedData["
1: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
gc4=
          "]]}]}, {}, {}, {}, {}},
     VertexColors->CompressedData["
1:eJzt1tFtbTUQBdAI0QEVUAMF0AMlIPFNU3REI5SA9H6H5OrFOHvbZ81PPpZs
j++ZGefn3//87Y8f3t7e/vrp7e3Ht/fjl2/x96+cc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOedf
4/+88/f96Mqfc845T/ir99P7yjnnnE9ffT+9r5xzzp/ou99P7yvnnPMbPf1+
el8555yf6On30fvKOef8RE+/f95XzjnnN3r6/Uv7jK7vwznn/ExPv2/tPqPr
+3HOOe/09PvV7jO6vh/nnPOMp9+n031G1/flnHOe8fT7dLvP6Pr+nHPO93j6
/Xm6z+iqD84555/z9PvydJ/RVR+cc84/5+n3hX/sM7rqh3PO+X97+v3gaz6j
q7445/ypnn4f+JrP6Kovzjl/qqffB77XZ3TVH+ec3+rp+c/3+oyu+uOc81s9
Pf951md01SfnnJ/q6fnOsz6jqz455/xUT8933u0zuuqXc85bPT2/+dk+o6u+
Oee81dPzm5/tM7rqm3POU56ez/xun9FV/5xznvL0fOZ3+4yu+uec812enr/8
bp/RVf+cc77L0/OXP9tndPUH55x/1tPzlT/bZ3T1B+ecf9bT85Xzj3xGV/9w
zvl7np6fnH/kM7r6h3PO3/P0/OR8xWd09Rfn/Lmeno+cr/iMrv7inD/X0/OR
850+o6v/OOfP9fR85Hynz+jqP875vZ6ef5zv9Bld/cc5v9fT84/zpM/o6k/O
+bmenm+cJ31GV39yzs/19HzjPOkzuvqTc36up+cb580+o6t/Oee9np5fnDf7
jK7+5Zz3enp+cX6yz+jqb855r6fnF+cn+4yu/uac5zw9nzg/2Wd09TfnPOfp
+cT5zT6jq/855zlPzyfOb/YZXf3POd/n6fnD+c0+o6v/Oef7PD1/OOf3+ozv
mz/t69vzS69vz8/6Z6/ne333+yE/+clPfqn82s9f3X/1/Kfn137+7v3T56/u
v3p++v7p83fvnz5/9/7p83fvnz5/9/7p83fvv3r+6etX90+fv3v/9Pm790+f
f/r+6f5Nr1/dP51/ev3q/un80+vbffX7pef3K0/fr91ndP1+u/PbvX/6fPt3
77/7/Pb7P/33lV82v9X16f54tb7db6+P9Hr+sc/Qfx/H1/4+6fzS84lnPT2f
nu4zfB/e4zO+9v24/X6r3v777M7f/tn90/lZv3f9qquvvevb80t/v/bfl3e7
7/uxt8/3dk/fz/nZ81fz43t9Rtf8eOXp34/zpM/o6s92T3+/p/uMrvrgfKen
+49zzjnn/Kt9hv+/+D0+4/vq7/b16f3Tvvv3T39f67Pr2/M7/X7t/be6/+0+
o6t+Xu3Pz/bb6zftM86632r+q+vT+zu/O79X+6+ev3v90/PfnV+6vtL+9P5t
v//pPkN9nHT+0/NfXZ/eP90/6fXt9z99//T3Oz3/dH6r69Xnmrefv9t33y/9
+6/un17fXj+rfvv92j1dv3zNZ9z1fWZ01e/u/Phe3/190v2xO7/V8/map+sj
vX97fabfz3af0dVffM3b/z/bfX46f77X0/XR7jPumh/p/k3/Pk+vj/T9X3n6
99mdX9rT90/Xb3t/c97s6f5snz+r56fX826f0TUfbvf090/Xz+n7t7v3Yc1n
/L/3W93/9PXp/fmaz3jW+9fuM7r6O53/bm+/f/r3S8+X1f3T5z/9fun3a9XT
78PtPuOs+krXb/r7pX/f2/Pfff7u9bvzb7+f/J+df/v+uz39+6zmv3p++v7p
/mrf/3ZP19e+7/cvI1x3ag==
      "]], {}}, InsetBox[
    StyleBox["\<\"(b)\"\>",
     StripOnInput->False,
     LineColor->GrayLevel[0],
     FrontFaceColor->GrayLevel[0],
     BackFaceColor->GrayLevel[0],
     GraphicsColor->GrayLevel[0],
     FontFamily->"Arial",
     FontSize->Large,
     FontWeight->Bold,
     FontColor->GrayLevel[0]], {4.5, 0.9}, 
    ImageScaled[{Rational[1, 2], Rational[1, 2]}]]},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0.000010344941737288135`, 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox["\"\[Eta]\"", TraditionalForm], None}, {
     FormBox[
     "\"\[CapitalDelta] (in units of \\!\\(\\*SqrtBox[\\(\[HBar]\\)]\\))\"", 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  LabelStyle->{FontSize -> Large, FontFamily -> "Arial", 
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.893992858289383*^9, {3.893992905409186*^9, 3.893992911772088*^9}, {
   3.8939929554634*^9, 3.8939929675403852`*^9}, 3.893993026204378*^9, 
   3.893993082425315*^9, {3.8939933523294086`*^9, 3.8939933577114563`*^9}, 
   3.8939934695573874`*^9, 3.8939935261242857`*^9, 3.893994888307815*^9, 
   3.893994985489069*^9, 3.8939950737725363`*^9, 3.893995112979436*^9, 
   3.893995216940187*^9, {3.8939953050395727`*^9, 3.893995331640588*^9}, 
   3.894338767607917*^9, 3.8943388333328257`*^9, 3.8943394600523014`*^9, 
   3.8943401649347887`*^9, 3.894340463079102*^9, 3.8943405055896435`*^9, 
   3.8943406885219555`*^9, {3.8943407267394285`*^9, 3.894340743092379*^9}, 
   3.8943409328262205`*^9, 3.89434101940994*^9},
 CellLabel->
  "Out[288]=",ExpressionUUID->"933b75ee-f585-4fcf-972b-c912f531d926"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"51528fe7-c435-4617-9bfd-b0d97ef2cac2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 387, 8, 56, "Subsubsection",ExpressionUUID->"f2aa224e-304c-4038-8ad3-777e6eb4da94"],
Cell[970, 32, 1596, 51, 111, "Text",ExpressionUUID->"46b17cec-0e35-4f06-a977-0f19b218036d"],
Cell[CellGroupData[{
Cell[2591, 87, 4266, 108, 239, "Input",ExpressionUUID->"50b1cce2-e8e2-40fc-a557-9cef5648ed5f"],
Cell[6860, 197, 1073, 25, 69, "Output",ExpressionUUID->"337a1a98-f3db-4ba4-a12c-16397becda4b"],
Cell[7936, 224, 1073, 25, 69, "Output",ExpressionUUID->"8c5d4a68-e143-4f20-805c-98c86557faf8"],
Cell[9012, 251, 1024, 23, 69, "Output",ExpressionUUID->"b0177855-fed0-4eaf-a906-ec0f01d96107"],
Cell[10039, 276, 1026, 23, 69, "Output",ExpressionUUID->"dbc75ac7-8367-4466-b391-e05112bea4c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11102, 304, 1379, 28, 61, "Input",ExpressionUUID->"3fe25f4f-508b-4882-88fe-1adf628f284a"],
Cell[12484, 334, 1041, 26, 71, "Output",ExpressionUUID->"e9010df4-fc11-4eb6-91ee-03296a595ce5"],
Cell[13528, 362, 969, 24, 71, "Output",ExpressionUUID->"1cb837f3-40a3-47ac-9708-6c9651d0e735"]
}, Open  ]],
Cell[14512, 389, 2004, 58, 89, "Input",ExpressionUUID->"354ff959-f72f-4056-b5ac-6a6edfd5dcfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16553, 452, 549, 9, 56, "Subsubsection",ExpressionUUID->"7990f718-9d32-43ed-a38e-8388a77ea3ed"],
Cell[17105, 463, 3162, 67, 214, "Input",ExpressionUUID->"8382252c-9feb-426e-9ca0-e61f18ca9ea9"],
Cell[20270, 532, 1125, 24, 78, "Input",ExpressionUUID->"bf534aaa-e43b-4a13-b9c3-2a90fc3aa090"],
Cell[21398, 558, 313, 8, 36, "Input",ExpressionUUID->"db5dcab2-a578-40d9-a24d-334c9dae7819"],
Cell[CellGroupData[{
Cell[21736, 570, 1021, 19, 36, "Input",ExpressionUUID->"be4b164a-feed-4f67-9542-c75a5962b066"],
Cell[22760, 591, 2338, 66, 130, "Output",ExpressionUUID->"05570418-b9d1-4ec3-a83b-3576713a3429"]
}, Open  ]],
Cell[25113, 660, 2071, 61, 145, "Input",ExpressionUUID->"1686e94d-cc0c-4fce-af3d-fea5ebb02cf4"],
Cell[CellGroupData[{
Cell[27209, 725, 1755, 49, 85, "Input",ExpressionUUID->"0ddb1a5d-659d-438e-817a-e2a78594e50d"],
Cell[28967, 776, 694, 20, 45, "Output",ExpressionUUID->"5c5ef412-1f77-4d0b-bfc5-1007f3ab8059"]
}, Open  ]],
Cell[29676, 799, 302, 8, 36, "Input",ExpressionUUID->"25983487-f96c-4105-ab89-f73120bbfcbb"],
Cell[29981, 809, 1094, 33, 69, "Input",ExpressionUUID->"e8dfcd0d-62f1-42ab-bf40-d83803136f3f"],
Cell[31078, 844, 344, 10, 36, "Input",ExpressionUUID->"4175f127-7c24-4af0-8709-75adf1e4fc82"],
Cell[CellGroupData[{
Cell[31447, 858, 623, 14, 36, "Input",ExpressionUUID->"d0485b60-956a-4992-b82a-a8f008936b6a"],
Cell[32073, 874, 1963, 53, 130, "Output",ExpressionUUID->"9e8a522e-3a49-4f10-8a43-d9605357ef30"]
}, Open  ]],
Cell[34051, 930, 1919, 54, 145, "Input",ExpressionUUID->"fd917406-5ed6-4d07-92e5-94ae4fc0050a"],
Cell[CellGroupData[{
Cell[35995, 988, 1819, 48, 85, "Input",ExpressionUUID->"c8ae3f7b-e0eb-47ea-8998-ab6d3efc8fe1"],
Cell[37817, 1038, 719, 21, 45, "Output",ExpressionUUID->"6b5346e1-7256-4c04-95df-f70c60b09f9b"]
}, Open  ]],
Cell[38551, 1062, 389, 11, 36, "Input",ExpressionUUID->"39fca8ca-f065-4e45-9d0f-11ac9141155c"],
Cell[38943, 1075, 1069, 32, 69, "Input",ExpressionUUID->"dcf24c98-d278-4e45-91df-1f6791a6a46a"],
Cell[40015, 1109, 9153, 231, 505, "Input",ExpressionUUID->"145e9982-de56-49fa-bc68-7abf719b7f20"],
Cell[49171, 1342, 10745, 249, 829, "Input",ExpressionUUID->"ac189b93-1e4c-4aea-a04e-249497ddd0cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59953, 1596, 488, 7, 56, "Subsubsection",ExpressionUUID->"61932443-88a0-496e-beff-ac700df8687a"],
Cell[CellGroupData[{
Cell[60466, 1607, 949, 26, 58, "Input",ExpressionUUID->"e347eced-57d3-4f18-adf3-0e7ee691f5dd"],
Cell[61418, 1635, 5093, 138, 241, "Output",ExpressionUUID->"9da506de-5584-4291-ab0d-66e4d93fd50f"]
}, Open  ]],
Cell[66526, 1776, 2399, 50, 56, "Input",ExpressionUUID->"b85ad3bb-c7b4-4e7c-947a-173f82583d82"],
Cell[CellGroupData[{
Cell[68950, 1830, 5839, 150, 242, "Input",ExpressionUUID->"b0396cb0-7a39-4666-b409-fdcb4c0ce67b"],
Cell[74792, 1982, 7233, 187, 305, "Output",ExpressionUUID->"b4d5d2fa-b6e5-4666-b353-4a55c47d64ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82062, 2174, 968, 24, 93, "Input",ExpressionUUID->"2ebfc636-2ebe-409c-bb19-68360c41d7b7"],
Cell[83033, 2200, 393, 9, 48, "Output",ExpressionUUID->"642e6166-115d-41f4-a237-4e5e9475a4ad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83475, 2215, 310, 5, 56, "Subsubsection",ExpressionUUID->"e5b0358a-4774-4f93-9542-0a99a38178ec"],
Cell[83788, 2222, 9910, 232, 436, "Input",ExpressionUUID->"c969b26b-b0c0-4cdf-abb9-9c924ba20e53"],
Cell[93701, 2456, 213, 5, 44, "Text",ExpressionUUID->"69cfbe01-909f-4553-90e8-095129d9926c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93951, 2466, 278, 4, 56, "Subsubsection",ExpressionUUID->"a279bde8-7284-4b79-b748-8c7060e64052"],
Cell[94232, 2472, 541, 10, 62, "Input",ExpressionUUID->"a0a8d3aa-4db7-43d1-a2a8-4213695bedab"],
Cell[94776, 2484, 420, 9, 36, "Input",ExpressionUUID->"197c498f-8b8f-4398-aac0-fc051d58dec7"],
Cell[CellGroupData[{
Cell[95221, 2497, 525, 12, 36, "Input",ExpressionUUID->"bc9bfdf7-7d2d-440c-adab-f128ec95a2fb"],
Cell[95749, 2511, 7563, 197, 149, "Output",ExpressionUUID->"66ed1e45-f0c5-484b-957a-d0672f58591d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103349, 2713, 1016, 20, 36, "Input",ExpressionUUID->"7fdbe009-76d3-462d-a3c3-1f6bcb6d021d"],
Cell[104368, 2735, 9569, 246, 255, "Output",ExpressionUUID->"f0057746-372a-479a-b8a3-d18aab54c4aa"]
}, Open  ]],
Cell[113952, 2984, 9508, 238, 273, "Input",ExpressionUUID->"b5bea1c6-fe93-48e8-815c-679dbceef370"],
Cell[123463, 3224, 884, 23, 68, "Text",ExpressionUUID->"63fb9cf1-77fe-4dda-b895-2d8db8734cd1"],
Cell[124350, 3249, 9982, 249, 313, "Input",ExpressionUUID->"86ac8b6d-a80d-4f1f-aca7-305fe1fc65eb"],
Cell[CellGroupData[{
Cell[134357, 3502, 9137, 231, 273, "Input",ExpressionUUID->"486deb13-1b06-4df2-8435-147d9c34dbed"],
Cell[143497, 3735, 8688, 227, 281, "Output",ExpressionUUID->"1e0a00cb-b589-4b52-8b0f-523dea694eb4"]
}, Open  ]],
Cell[152200, 3965, 216, 4, 44, "Text",ExpressionUUID->"f6f45787-3dee-4cab-a2f3-49f14c172e3d"],
Cell[CellGroupData[{
Cell[152441, 3973, 1360, 35, 102, "Input",ExpressionUUID->"a3b7cca0-0961-4a45-90bf-57b360f8c703"],
Cell[153804, 4010, 4840, 140, 92, "Output",ExpressionUUID->"34d5a55b-923d-437c-bea5-13bc284305cf"]
}, Open  ]],
Cell[158659, 4153, 4816, 140, 182, "Input",ExpressionUUID->"58a22dea-3cfb-43e9-8b26-863078b7208b"],
Cell[163478, 4295, 3703, 97, 186, "Input",ExpressionUUID->"0d3ffcaf-3974-467e-b399-a6185a1a1372"],
Cell[CellGroupData[{
Cell[167206, 4396, 456, 8, 46, "Input",ExpressionUUID->"60b1d614-5c9c-4c6a-8d9f-5c695f3d0618"],
Cell[167665, 4406, 412, 6, 41, "Output",ExpressionUUID->"786620e8-3907-4ead-9bd6-09a7df6d138b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168126, 4418, 331, 5, 56, "Subsubsection",ExpressionUUID->"d1604977-c799-483f-b99f-26e75026fb24"],
Cell[168460, 4425, 541, 10, 62, "Input",ExpressionUUID->"b6afe81f-21ea-4d0f-86f3-32c6705b03c7"],
Cell[169004, 4437, 416, 8, 36, "Input",ExpressionUUID->"3ebf9c34-d2e1-48d8-9a18-93b3f0859520"],
Cell[CellGroupData[{
Cell[169445, 4449, 783, 17, 36, "Input",ExpressionUUID->"57e3e69b-6122-4b8d-b2af-ebdbf861f949"],
Cell[170231, 4468, 10877, 288, 255, "Output",ExpressionUUID->"6a60cc0a-2e7d-4265-9dc5-261f3b86ff51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181145, 4761, 515, 13, 36, "Input",ExpressionUUID->"69a08bb5-e9e7-4e2c-8b6d-37b57a69ba87"],
Cell[181663, 4776, 12548, 330, 255, "Output",ExpressionUUID->"a6bbafb0-687b-4651-a2ad-3ff6da0ee3fa"]
}, Open  ]],
Cell[194226, 5109, 13064, 329, 301, "Input",ExpressionUUID->"7357f31b-5134-4e76-ad09-1a048d9d66e9"],
Cell[CellGroupData[{
Cell[207315, 5442, 707, 16, 41, "Input",ExpressionUUID->"3fb6c624-3929-4f20-af5e-8a75f038dfa9"],
Cell[208025, 5460, 9403, 258, 240, "Output",ExpressionUUID->"866577a2-d8ca-4a50-b9ad-cf26d8a78ab9"]
}, Open  ]],
Cell[217443, 5721, 7075, 175, 327, "Input",ExpressionUUID->"b97433fc-57e5-4876-ab65-0a4b7e6f25bf"],
Cell[224521, 5898, 216, 4, 44, "Text",ExpressionUUID->"be9a425c-8932-428c-9a0c-e22105a0227e"],
Cell[CellGroupData[{
Cell[224762, 5906, 1411, 35, 102, "Input",ExpressionUUID->"7e7999da-ba42-4a8a-94bf-055cb9cae89b"],
Cell[226176, 5943, 8210, 232, 234, "Output",ExpressionUUID->"5af0f178-8748-42a8-b03c-22d82a3c18ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234423, 6180, 275, 5, 36, "Input",ExpressionUUID->"e84fb634-dbb8-4e83-8453-69f16d02427d"],
Cell[234701, 6187, 3936, 110, 138, "Output",ExpressionUUID->"77ba6706-ccea-4e89-abe6-9a0601cb3320"]
}, Open  ]],
Cell[238652, 6300, 5476, 145, 334, "Input",ExpressionUUID->"65846ba2-5b2f-4f26-96c7-c1ad8bcbf4fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244165, 6450, 186, 3, 56, "Subsubsection",ExpressionUUID->"ffaffa14-a861-430e-80ea-51cd1ab22264"],
Cell[CellGroupData[{
Cell[244376, 6457, 572, 15, 36, "Input",ExpressionUUID->"21da4020-9b10-4d41-9dd0-9745dbdcf0a0"],
Cell[244951, 6474, 1073, 25, 69, "Output",ExpressionUUID->"ace26bdc-acaa-4911-acb9-87f12cf67747"],
Cell[246027, 6501, 1073, 25, 69, "Output",ExpressionUUID->"7a98e96a-5300-4ef4-a3fc-c7d4d01e80d3"],
Cell[247103, 6528, 1024, 23, 69, "Output",ExpressionUUID->"15b1d1db-82fd-43df-a2cd-ffaa363789d4"],
Cell[248130, 6553, 1026, 23, 69, "Output",ExpressionUUID->"de0015f4-5a26-47be-acfa-ed5a60008575"]
}, Open  ]],
Cell[249171, 6579, 5899, 147, 300, "Input",ExpressionUUID->"1f71c821-7c5d-464c-9e8c-43347147a010"],
Cell[CellGroupData[{
Cell[255095, 6730, 763, 21, 70, "Input",ExpressionUUID->"cf89fbf4-239e-47aa-8896-f92516f6933b"],
Cell[255861, 6753, 304, 5, 41, "Output",ExpressionUUID->"a065a372-5c58-4cb5-a64d-8a954d8d3d18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256202, 6763, 442, 12, 70, "Input",ExpressionUUID->"5af4c081-62da-46c9-8840-6a8904d29f66"],
Cell[256647, 6777, 5847, 169, 92, "Output",ExpressionUUID->"73061138-28ce-4a8b-a795-3b5bbef6ec3f"]
}, Open  ]],
Cell[262509, 6949, 6483, 177, 178, "Input",ExpressionUUID->"0fec70ee-0e18-4ee0-a92c-a3b7ce3ad225"],
Cell[CellGroupData[{
Cell[269017, 7130, 1967, 43, 102, "Input",ExpressionUUID->"fb01f5e2-aa1b-4a78-b3df-136c1975205e"],
Cell[270987, 7175, 2679, 79, 106, "Output",ExpressionUUID->"0d5d06d4-95fa-4629-b0b7-3a1a55447ffa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273703, 7259, 2796, 78, 55, "Input",ExpressionUUID->"d1601650-1465-4c82-98b8-c17c505105ed"],
Cell[276502, 7339, 1382, 39, 50, "Output",ExpressionUUID->"dc2dfe84-5737-4e14-867f-f880295acbb2"]
}, Open  ]],
Cell[277899, 7381, 3192, 92, 188, "Input",ExpressionUUID->"60596f85-ff4e-4c03-8cbf-ad0b26e354dc"],
Cell[CellGroupData[{
Cell[281116, 7477, 1020, 29, 73, InheritFromParent,ExpressionUUID->"79b05c8f-c8f2-40bf-9de2-61087ce567c4"],
Cell[282139, 7508, 3284, 97, 60, "Output",ExpressionUUID->"054601dd-650a-494d-80c6-126fd052efb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285460, 7610, 3040, 85, 55, "Input",ExpressionUUID->"b57ac371-2331-4cc9-8445-90d447e7898c"],
Cell[288503, 7697, 1296, 36, 60, "Output",ExpressionUUID->"b20a47f7-aaaa-4579-9300-2734d5b77989"]
}, Open  ]],
Cell[289814, 7736, 2411, 68, 102, "Input",ExpressionUUID->"04aa8fb6-6ed7-46fe-b3d5-7d0f50f5a68f"],
Cell[CellGroupData[{
Cell[292250, 7808, 4845, 113, 246, "Input",ExpressionUUID->"ebe7ccf3-c5ef-4b16-9e69-e69ecc19e1f3"],
Cell[297098, 7923, 2327, 58, 92, "Output",ExpressionUUID->"8c01b246-7001-4c02-acf2-54865ef1392d"]
}, Open  ]],
Cell[299440, 7984, 3959, 105, 256, "Input",ExpressionUUID->"0c051a69-5512-44ad-bd73-fc4fcfdde0dc"],
Cell[CellGroupData[{
Cell[303424, 8093, 540, 12, 81, "Input",ExpressionUUID->"3de716da-4ab8-4b8d-ba98-548c0ab22cf8"],
Cell[303967, 8107, 295, 5, 41, "Output",ExpressionUUID->"e0765efe-893d-473d-a950-81256cd33faf"],
Cell[304265, 8114, 216, 3, 41, "Output",ExpressionUUID->"78670e70-2e24-47f7-9ba4-8308906ca475"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304518, 8122, 498, 11, 81, "Input",ExpressionUUID->"a43785a7-3c6f-4a4d-a254-18dfe8bf1109"],
Cell[305019, 8135, 267, 4, 41, "Output",ExpressionUUID->"7d18f8e0-7d88-4239-9645-30bc54e5f1de"],
Cell[305289, 8141, 191, 2, 41, "Output",ExpressionUUID->"aa3834ef-e8bd-49e7-924c-3d8c820b094c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305517, 8148, 7270, 171, 858, "Input",ExpressionUUID->"bd10f5fb-c407-4545-8ba2-cd4b4dc27f4c"],
Cell[312790, 8321, 702, 11, 41, "Output",ExpressionUUID->"ef3a19f6-3f99-4029-8b5a-1116cfa98c67"],
Cell[313495, 8334, 676, 11, 41, "Output",ExpressionUUID->"91feb161-c53c-4c60-934d-cb2af63eaafd"],
Cell[314174, 8347, 685, 11, 41, "Output",ExpressionUUID->"efb1b8e0-a3e7-4125-94ef-e99429ed5ca3"],
Cell[314862, 8360, 222062, 3672, 480, "Output",ExpressionUUID->"d9cb9b80-dd64-42e0-8ab4-f44cbf42b830"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536961, 12037, 6441, 159, 538, "Input",ExpressionUUID->"f12fed75-7355-4250-89c5-c3452bb1ee54"],
Cell[543405, 12198, 2160, 60, 92, "Output",ExpressionUUID->"c2125810-5229-479b-88a2-474b08c22149"]
}, Open  ]],
Cell[545580, 12261, 179, 3, 36, "Input",ExpressionUUID->"d854cf12-ef85-40da-a8bc-d5eef0b09819"],
Cell[545762, 12266, 5805, 151, 414, "Input",ExpressionUUID->"807bedac-b166-4762-9cc6-86c86774ca11"],
Cell[CellGroupData[{
Cell[551592, 12421, 598, 14, 81, "Input",ExpressionUUID->"eeae9f43-f96c-4be1-bd6a-23c210745c4c"],
Cell[552193, 12437, 371, 7, 41, "Output",ExpressionUUID->"6bf39087-29b8-46a6-8ad1-80869f9ba5d4"],
Cell[552567, 12446, 293, 5, 41, "Output",ExpressionUUID->"f606e5ca-e48c-432f-9246-0c181310b11d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552897, 12456, 565, 13, 81, "Input",ExpressionUUID->"44c31f13-be27-4736-84a8-e0fed5030e36"],
Cell[553465, 12471, 371, 7, 41, "Output",ExpressionUUID->"e9a0d173-3b4e-4fe9-8094-f792f23c7c1c"],
Cell[553839, 12480, 292, 5, 41, "Output",ExpressionUUID->"bac03a5d-b466-46ab-913a-05a2ed144f91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554168, 12490, 268, 7, 46, "Input",ExpressionUUID->"05ff5999-8440-4454-b28e-192b9880b8a8"],
Cell[554439, 12499, 197, 3, 41, "Output",ExpressionUUID->"39130559-1a9f-4263-ac93-4e965b687790"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554673, 12507, 7548, 175, 858, "Input",ExpressionUUID->"66a71ef2-1135-45e4-b138-c41aa94e56e7"],
Cell[562224, 12684, 876, 13, 41, "Output",ExpressionUUID->"a6b07a28-c553-4b76-9a3e-38a4bc3cf605"],
Cell[563103, 12699, 848, 13, 41, "Output",ExpressionUUID->"f63b571b-134e-4aec-a81d-3f31ea76bb14"],
Cell[563954, 12714, 862, 13, 41, "Output",ExpressionUUID->"cebe4c7d-5d28-4eef-ac43-8eb0342e75e9"],
Cell[564819, 12729, 201001, 3324, 480, "Output",ExpressionUUID->"933b75ee-f585-4fcf-972b-c912f531d926"]
}, Open  ]]
}, Open  ]]
}
]
*)

